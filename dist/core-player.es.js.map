{"version":3,"file":"core-player.es.js","sources":["../src/core/utils/index.ts","../src/core/config.ts","../src/core/module/videoController.ts","../src/core/module/pluginManager.ts","../src/core/module/hookManager.ts","../src/core/module/controlsManager.ts","../src/core/module/panelManager.ts","../src/core/module/menuManager.ts","../src/core/module/loaderManager.ts","../src/core/module/eventEmitter.ts","../src/core/player.ts","../player/core-player.ts"],"sourcesContent":["const isMobile = /mobile/i.test(window.navigator.userAgent);\n\n/** 创建特定长度的填充数组 */\nexport const createArray = <T>(count: number, val: T) => Array.from({ length: count }, () => val);\n\n/** 获取全屏元素 */\nexport const getFullscreenElement = (): HTMLElement | null =>\n  document.fullscreenElement ||\n  (document as any).mozFullScreenElement ||\n  (document as any).webkitFullscreenElement ||\n  (document as any).msFullscreenElement ||\n  null;\n\n/** 是否支持全屏 */\nexport const fullScreenEnabled: boolean =\n  document.fullscreenEnabled ||\n  (document as any).webkitFullscreenEnabled ||\n  (document as any).mozFullScreenEnabled ||\n  (document as any).msFullscreenEnabled ||\n  false;\n\n/** 是否支持画中画 */\nexport const pictureInPictureEnabled = document.pictureInPictureEnabled;\n\n/**\n * 将时间文本转换为秒数\n *\n * @param {String} str 冒号分隔的时间文本，支持全角冒号\n * @return {Number} second\n */\nexport const timeToSecond = (str: string): number => {\n  const arr = str.split(/[:：]/).slice(-3);\n  const sec = parseInt(arr[arr.length - 1]) || 0;\n  const min = parseInt(arr[arr.length - 2]) || 0;\n  const hour = parseInt(arr[arr.length - 3]) || 0;\n  return sec + min * 60 + hour * 3600;\n};\n\n/**\n * 防抖\n * @param {Function} fn 需要防抖处理的函数\n * @param {number} delay 防抖延迟执行时间\n * @param {boolean} immediate 是否立即执行一次\n */\nexport const debounce = (fn: (...args: unknown[]) => void, delay: number, immediate = false) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let isInvoke = false;\n  const f = function (this: unknown, ...args: unknown[]) {\n    if (timer) clearTimeout(timer);\n    if (immediate && !isInvoke) {\n      fn.apply(this, args);\n      isInvoke = true;\n    } else {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n        isInvoke = false;\n      }, delay);\n    }\n  };\n  /*   f.clear = () => {\n    if (timer) clearTimeout(timer);\n  }; */\n  return f;\n};\n\n/** 创建元素 */\nexport function createElement<T extends keyof HTMLElementTagNameMap>(\n  tagName: T,\n  attributes?: Record<string, string>,\n  children?: Node\n) {\n  const el = document.createElement(tagName);\n  if (attributes) {\n    for (const name in attributes) {\n      el.setAttribute(name, attributes[name]);\n    }\n  }\n  if (children) {\n    el.append(children);\n  }\n  return el;\n}\n\n/**\n * 节流\n * @param {Function} fn 需要节流处理的函数\n * @param {number} wait 执行一次后需要等待的时间\n */\nexport const throttle = (fn: (...args: unknown[]) => void, wait: number) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  return function (this: unknown, ...args: unknown[]) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n      }, wait);\n    }\n  };\n};\n/** 限制数值 */\nexport function clamp(number: number, lower: number, upper: number) {\n  return number > lower ? (number < upper ? number : upper) : lower;\n}\n\n// === 未完全重构 ==========\n\n/**\n * 将秒数转换为时间文本\n *\n * @param {Number} second\n * @param {Boolean} showHour\n * @return {String} 00:00 or 00:00:00\n */\nexport const secondToTime = (second: number, showHour = true) => {\n  second = second || 0;\n  if (second === 0 || second === Infinity || second.toString() === \"NaN\") {\n    return \"00:00\";\n  }\n  const add0 = (num: number) => (num < 10 ? `0${num}` : `${num}`);\n  const hour = Math.floor(second / 3600);\n  const min = Math.floor((second - hour * 3600) / 60);\n  const sec = Math.floor(second - hour * 3600 - min * 60);\n  if (showHour) {\n    return (hour > 0 ? [hour, min, sec] : [min, sec]).map(add0).join(\":\");\n  }\n  return [hour * 60 + min, sec].map(add0).join(\":\");\n};\n\nexport const storage = {\n  set: (key: string, value: any) => {\n    localStorage.setItem(key, value);\n  },\n\n  get: (key: string) => localStorage.getItem(key),\n};\n\nexport const nameMap = {\n  dragStart: isMobile ? \"touchstart\" : \"mousedown\",\n  dragMove: isMobile ? \"touchmove\" : \"mousemove\",\n  dragEnd: isMobile ? \"touchend\" : \"mouseup\",\n};\nexport const colorLuminance = (hex: string, lum: number) => {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  let rgb = \"#\";\n  let c;\n  let i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += `00${c}`.substr(c.length);\n  }\n\n  return rgb;\n};\n\nexport const hex2Rgb = (str: string, opacity: number) => {\n  // 16进制转rgb\n  const reg = /^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$/;\n  if (!reg.test(str)) {\n    return;\n  }\n  let newStr = str.toLowerCase().replace(/#/g, \"\");\n  const len = newStr.length;\n  if (len == 3) {\n    let t = \"\";\n    for (let i = 0; i < len; i++) {\n      t += newStr.slice(i, i + 1).concat(newStr.slice(i, i + 1));\n    }\n    newStr = t;\n  }\n  const arr = []; // 将字符串分隔，两个两个的分隔\n  for (let i = 0; i < 6; i += 2) {\n    const s = newStr.slice(i, i + 2);\n    arr.push(parseInt(`0x${s}`));\n  }\n  if (opacity) return `rgba(${arr.join(\",\")},${opacity})`;\n  return `rgb(${arr.join(\",\")})`;\n};\nexport const rgb2Hex = (str: string) => {\n  // rgb转16进制\n  const reg = /^(rgb|RGB)/;\n  if (!reg.test(str)) {\n    return;\n  }\n  const arr = str.slice(4, str.length - 1).split(\",\");\n  let color = \"#\";\n  for (let i = 0; i < arr.length; i++) {\n    let t = Number(arr[i]).toString(16);\n    if (t == \"0\") {\n      // 如果为“0”的话，需要补0操作,否则只有5位数\n      t += \"0\";\n    }\n    color += t;\n  }\n  return color;\n};\nexport const color2Number = (color: string) => {\n  if (color[0] === \"#\") {\n    color = color.substr(1);\n  }\n  if (color.length === 3) {\n    color = `${color[0]}${color[0]}${color[1]}${color[1]}${color[2]}${color[2]}`;\n  }\n  return (parseInt(color, 16) + 0x000000) & 0xffffff;\n};\n\nexport const number2Color = (number: number) => `#${`00000${number.toString(16)}`.slice(-6)}`;\nexport const initHash = () => {\n  let count = 100;\n\n  return function (hashLength: number) {\n    if (!hashLength || typeof Number(hashLength) !== \"number\") {\n      return;\n    }\n    const ar = [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"0\",\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ];\n    const hs = [];\n    const hl = Number(hashLength);\n    const al = ar.length;\n    for (let i = 0; i < hl; i++) {\n      hs.push(ar[Math.floor(Math.random() * al)]);\n    }\n    count++;\n    return `${hs.join(\"\")}${count}`;\n  };\n};\nexport const randomFontsize = (range: number) => {\n  const allSize = [16, 18, 25, 36, 45, 64];\n  const random = Math.floor(Math.random() * range);\n  return allSize[random];\n};\n\nconst dateFormatMap = {\n  yyyy: (d: Date) => d.getFullYear().toString(),\n  yy: (d: Date) => d.getFullYear().toString().slice(-2),\n  MM: (d: Date) => (d.getMonth() + 1).toString().padStart(2, \"0\"),\n  dd: (d: Date) => d.getDate().toString().padStart(2, \"0\"),\n  HH: (d: Date) => d.getHours().toString().padStart(2, \"0\"),\n  mm: (d: Date) => d.getMinutes().toString().padStart(2, \"0\"),\n  ss: (d: Date) => d.getSeconds().toString().padStart(2, \"0\"),\n};\n\n// date: 时间对象, pattern: 日期格式\nexport const dateFormat = (date: Date, format: string) => {\n  return format.replace(/yyyy|yy|MM|dd|HH|mm|ss/g, (match) =>\n    dateFormatMap[match as keyof typeof dateFormatMap]?.(date)\n  );\n};\n","export const classPrefix = \"mfuns-player\";\n\n/** 项目链接 */\nexport const repositoryLink = \"https://github.com/Mfuns-cn/mfunsPlayer/tree/v3-beta\";\n\n/** 开发者列表 */\nexport const developers = [\n  { name: \"Minteea\", id: \"Minteea\", link: \"https://github.com/Minteea\" },\n  { name: \"鲁迪钨丝\", id: \"Rudiusu\", link: \"https://github.com/Rudiusu\" },\n];\n","import { LoadInfo, MediaController, PlayerOptions, VideoInfo } from \"@/types\";\nimport Player from \"@/player\";\nimport { PlayerEventMap } from \"@/types/PlayerEventMap\";\nimport { createElement } from \"@/utils\";\nimport { classPrefix } from \"@/config\";\n\nconst videoEventMap: {\n  [k in keyof PlayerEventMap & keyof HTMLVideoElementEventMap]?: (\n    v: HTMLVideoElement\n  ) => Parameters<PlayerEventMap[k]>;\n} = {\n  play: () => [],\n  pause: () => [],\n  ended: () => [],\n\n  loadeddata: () => [],\n  loadedmetadata: () => [],\n  waiting: () => [],\n  playing: () => [],\n  canplay: () => [],\n  canplaythrough: () => [],\n\n  timeupdate: (v) => [v.currentTime],\n  durationchange: (v) => [v.duration],\n  progress: (v) => [v.buffered],\n  seeking: (v) => [v.currentTime],\n  seeked: (v) => [v.currentTime],\n  volumechange: (v) => [v.volume, v.muted],\n  ratechange: (v) => [v.playbackRate],\n\n  enterpictureinpicture: () => [],\n  leavepictureinpicture: () => [],\n};\n\nexport default class VideoController {\n  /** 播放器主体 */\n  player: Player;\n  /** video对象 */\n  $el: HTMLVideoElement;\n\n  ratio: [number, number] | null = null;\n\n  /** 视频信息 */\n  info: VideoInfo = {};\n\n  mediaController: MediaController | null = null;\n\n  private detachEventController?: AbortController;\n\n  constructor(player: Player, options: PlayerOptions) {\n    this.player = player;\n\n    this.$el = this.player.$content.appendChild(\n      createElement(\"video\", { class: `${classPrefix}-video` })\n    );\n\n    this._attachEvent(this.$el);\n\n    this.player.on(\"ended\", () => {\n      this.player.hook.call(\"end\").then((res) => {\n        if (res) this.player.emit(\"end\");\n      });\n    });\n  }\n\n  /** 设置视频 */\n  public set(info: VideoInfo, play?: boolean, time?: number) {\n    this.player.hook.call(\"video.set\", info).then(async (res) => {\n      if (res) {\n        // 销毁并丢弃原视频控制实例\n        this.mediaController?.destroy?.();\n        this.mediaController = null;\n        // 设置新视频信息\n        this.info = info;\n        this.player.emit(\"videoChange\", { ...info });\n        // 加载视频\n        let { url, type, live } = info;\n        const loadInfo = { url, type, play, time, live };\n        this.player.hook.call(\"video.beforeLoad\", loadInfo).then(() => {\n          if (loadInfo.url) {\n            this.load(loadInfo as LoadInfo);\n          } else {\n            this.player.throw(new Error(\"缺少视频播放信息\"));\n          }\n        });\n      }\n    });\n  }\n\n  /** 加载视频 */\n  public load(info: LoadInfo) {\n    this.player.hook.call(\"video.load\", info).then((res) => {\n      if (res) {\n        this.mediaController = this.player.loader.create(info, this.$el);\n        this.player.emit(\"videoLoad\", info);\n      } else {\n        this.player.throw(new Error(\"视频加载失败\"));\n      }\n    });\n  }\n\n  /** 添加视频事件 */\n  private _attachEvent(video: HTMLVideoElement) {\n    this.detachEventController = new AbortController();\n    for (const eventName in videoEventMap) {\n      const values =\n        videoEventMap[eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap]!;\n      video.addEventListener(\n        eventName,\n        () => {\n          this.player.emit(\n            eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap,\n            ...values(video)\n          );\n        },\n        { signal: this.detachEventController.signal }\n      );\n    }\n  }\n\n  public bind(el: HTMLVideoElement) {\n    this.$el = el;\n    this.detachEventController?.abort();\n    this._attachEvent(el);\n  }\n\n  /** 获取播放信息 */\n  getVideoInfo() {\n    return {\n      ...this.info,\n    };\n  }\n  /** 获取媒体信息 */\n  getMediaInfo() {\n    return {\n      url: this.mediaController?.url,\n      type: this.mediaController?.type || \"\",\n      live: this.mediaController?.live || false,\n    };\n  }\n}\n","import Player from \"@/player\";\nimport { PlayerOptions, IPlugin, PluginConstructor } from \"@/types\";\n\nexport default class PluginManager {\n  player: Player;\n  get plugin() {\n    return this.player.plugin as unknown as Record<string, IPlugin>;\n  }\n  private initialized = false;\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册插件 */\n  register(pluginItem: PluginConstructor | IPlugin, options: PlayerOptions) {\n    const plugin: IPlugin =\n      typeof pluginItem == \"function\" ? new pluginItem(this.player) : pluginItem;\n    plugin.init?.(this.player);\n    if (pluginItem.pluginName) (this.player.plugin as any)[pluginItem.pluginName] = plugin;\n    console.log(pluginItem.pluginName);\n    plugin.apply?.(this.player, options);\n    if (this.initialized) {\n      plugin.ready?.(this.player);\n      plugin.mounted?.(this.player);\n    }\n  }\n  /** 批量注册插件 */\n  pluginsRegister(options: PlayerOptions) {\n    options.plugins?.forEach((pluginItem) => {\n      this.register(pluginItem, options);\n    });\n    this.pluginsReady();\n  }\n  /** 所有插件注册完毕后执行 */\n  pluginsReady() {\n    if (this.initialized) return;\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.ready?.(this.player);\n    }\n    this.initialized = true;\n  }\n  /** 播放器挂载后执行 */\n  playerMounted() {\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.mounted?.(this.player);\n    }\n  }\n  /** 销毁所有插件 */\n  destroy() {\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.destroy?.();\n    }\n  }\n}\n","import { PlayerHookMap } from \"@/types\";\n\ntype MaybePromise<T> = T | Promise<T>;\n\nexport type HookFunction<T> = (ctx: T) => MaybePromise<void | boolean>;\n\nexport default class HookManager {\n  protected hooks: Record<string, HookFunction<any>[]> = {};\n\n  /** 注册钩子 */\n  register<T extends keyof PlayerHookMap>(\n    name: T,\n    func: HookFunction<PlayerHookMap[T]>,\n    before = false\n  ) {\n    let hook = this.hooks[name];\n    if (!hook) {\n      hook = [];\n      this.hooks[name] = hook;\n    }\n    before ? hook.unshift(func) : hook.push(func);\n  }\n\n  /** 移除钩子 */\n  unregister<T extends keyof PlayerHookMap>(name: T, func: HookFunction<PlayerHookMap[T]>) {\n    let hook = this.hooks[name];\n    if (!hook) {\n      hook = [];\n      this.hooks[name] = hook;\n    }\n    const index = hook.indexOf(func);\n    if (index > -1) hook.splice(index, 1);\n  }\n\n  call<T extends keyof PlayerHookMap>(\n    name: PlayerHookMap[T] extends void ? T : never,\n    ctx: void,\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ): Promise<boolean>;\n  call<T extends keyof PlayerHookMap>(\n    name: T,\n    ctx: PlayerHookMap[T],\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ): Promise<boolean>;\n  /** 调用钩子函数\n   * @param name 钩子名称\n   * @param ctx 钩子上下文\n   * @param defaultFunc 钩子在正常遍历完毕后最终执行的钩子函数\n   */\n  async call<T extends keyof PlayerHookMap>(\n    name: T,\n    ctx: PlayerHookMap[T],\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ) {\n    const hook = this.hooks[name];\n    if (hook?.length) {\n      for (const f of hook) {\n        const res = await f(ctx);\n        if (res == true) {\n          console.log(`钩子提前结束调用: ${name}`);\n          console.log(f);\n          return true;\n        } else if (res == false) {\n          console.log(`钩子被拦截: ${name}`);\n          console.log(f);\n          return false;\n        }\n      }\n    }\n    console.log(`钩子调用完毕: ${name}`);\n    console.log(ctx);\n    return defaultFunc?.(ctx as any) ?? true;\n  }\n}\n","import Player from \"@/player\";\nimport { ControlsPlugin, IControls, UIOptionsItem } from \"../plugin\";\nimport { PlayerHookMap } from \"../types\";\n\nexport default class ControlsManager {\n  protected list = new Map<string, IControls>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册控制组件 */\n  register(name: string, controls: IControls | (new (player: Player) => IControls)) {\n    this.list.set(name, typeof controls == \"function\" ? this.build(controls) : controls);\n  }\n\n  /** 移除控制组件 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取控制组件 */\n  get(item: UIOptionsItem<IControls>): IControls | undefined {\n    let controls: IControls | undefined;\n    switch (typeof item) {\n      case \"object\":\n        controls = item;\n        break;\n      case \"function\":\n        controls = this.build(item);\n        break;\n      default:\n        controls = this.list.get(item);\n        break;\n    }\n    return controls?.ignored ? undefined : controls;\n  }\n\n  /** 创建控制组件 */\n  build(func: new (player: Player) => IControls) {\n    const controls = new func(this.player);\n    controls.init?.(this.player);\n    controls.ready?.(this.player);\n    controls.mounted?.(this.player);\n    return controls;\n  }\n}\n","import Player from \"@/player\";\nimport { IPanel, UIOptionsItem } from \"@/plugin\";\nimport { PlayerHookMap } from \"@/types\";\n\nexport default class PanelManager {\n  protected list = new Map<string, IPanel>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册面板 */\n  register(name: string, panel: IPanel | (new (player: Player) => IPanel)) {\n    this.list.set(name, typeof panel == \"function\" ? this.build(panel) : panel);\n  }\n\n  /** 移除面板 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取面板 */\n  get(panel: UIOptionsItem<IPanel>): IPanel | undefined {\n    switch (typeof panel) {\n      case \"object\":\n        return panel;\n      case \"function\":\n        return this.build(panel);\n      default:\n        return this.list.get(panel);\n    }\n  }\n\n  /** 创建面板 */\n  build(func: new (player: Player) => IPanel) {\n    const panel = new func(this.player);\n    panel.init?.(this.player);\n    panel.ready?.(this.player);\n    panel.mounted?.(this.player);\n    return panel;\n  }\n}\n","import Player from \"@/player\";\nimport { IMenu, UIOptionsItem } from \"@/plugin\";\nimport { PlayerHookMap } from \"@/types\";\n\nexport default class MenuManager {\n  protected list = new Map<string, IMenu>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册菜单项 */\n  register(name: string, item: IMenu | (new (player: Player) => IMenu)) {\n    this.list.set(name, typeof item == \"function\" ? this.build(item) : item);\n  }\n\n  /** 移除菜单项 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取菜单项 */\n  get(item: UIOptionsItem<IMenu>): IMenu | undefined {\n    switch (typeof item) {\n      case \"object\":\n        return item;\n      case \"function\":\n        return this.build(item);\n      default:\n        return this.list.get(item);\n    }\n  }\n\n  /** 创建菜单项 */\n  build(func: new (player: Player) => IMenu) {\n    const item = new func(this.player);\n    item.init?.(this.player);\n    item.ready?.(this.player);\n    item.mounted?.(this.player);\n    return item;\n  }\n}\n","import Player from \"@/player\";\nimport { LoadInfo, MediaController, MediaLoader, PlayerHookMap } from \"@/types\";\n\nexport default class LoaderManager {\n  protected list = new Map<string, MediaLoader>();\n  protected player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n\n  /** 注册加载器 */\n  register(name: string, loader: MediaLoader) {\n    this.list.set(name, loader);\n  }\n\n  /** 移除加载器 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 创建媒体控制实例 */\n  create(info: LoadInfo, video: HTMLVideoElement) {\n    for (const [name, loader] of this.list) {\n      if (loader.check(info)) return loader.create(info, video);\n    }\n    return this.createDefault(info, video);\n  }\n\n  /** 常规方式创建实例 */\n  createDefault(info: LoadInfo, video: HTMLVideoElement): MediaController {\n    const { type, url, live, play, time } = info;\n    const controller: MediaController = {\n      type: type || \"\",\n      url: url,\n      live: live || false,\n      mediaElement: video,\n      destroy() {\n        this.mediaElement.src = \"\";\n      },\n    };\n    const t = time === true ? this.player.currentTime : time;\n    video.src = url;\n    video.addEventListener(\n      \"loadeddata\",\n      () => {\n        if (t) {\n          this.player.seek(t);\n        }\n        if (play) {\n          this.player.play();\n        }\n      },\n      { once: true }\n    );\n    return controller;\n  }\n}\n","import { PlayerEventMap } from \"@/types\";\n\nexport default class EventEmitter {\n  protected listeners: Record<string, ((...args: any[]) => void)[]> = {};\n  protected onceListeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  readonly customEventList: string[] = [];\n\n  /** 添加监听 */\n  on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n    this.listeners[name].push(listener);\n  }\n\n  /** 添加一次性监听 */\n  once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.onceListeners[name]) {\n      this.onceListeners[name] = [];\n    }\n    this.onceListeners[name].push(listener);\n  }\n\n  /** 移除监听 */\n  off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n    const index = this.listeners[name].indexOf(listener);\n    if (index > -1) this.listeners[name].splice(index, 1);\n  }\n\n  /** 触发事件 */\n  emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\n    if (this.listeners[name]?.length) {\n      for (let i = 0; i < this.listeners[name].length; i++) {\n        this.listeners[name][i](...args);\n      }\n    }\n    if (this.onceListeners[name]?.length) {\n      for (let i = 0; i < this.onceListeners[name].length; i++) {\n        this.onceListeners[name][i](...args);\n      }\n      this.onceListeners[name] = [];\n    }\n  }\n}\n","import {\n  LoadInfo,\n  MediaController,\n  PlayerPlugins,\n  PlayerPropertyDescriptor,\n  VideoInfo,\n} from \"./types\";\nimport { PlayerOptions } from \"@/types\";\nimport { PlayerEventMap } from \"./types/PlayerEventMap\";\nimport { clamp, createElement } from \"./utils\";\nimport { classPrefix } from \"./config\";\nimport VideoController from \"./module/videoController\";\nimport PluginManager from \"./module/pluginManager\";\nimport HookManager from \"./module/hookManager\";\nimport ControlsManager from \"./module/controlsManager\";\nimport PanelManager from \"./module/panelManager\";\nimport MenuManager from \"./module/menuManager\";\nimport LoaderManager from \"./module/loaderManager\";\nimport EventEmitter from \"./module/eventEmitter\";\nimport * as Util from \"@/utils\";\nimport * as Component from \"@/components\";\n\n/**\n * @event\n */\nexport class Player {\n  static readonly version = __MFUNSPLAYER_VERSION__;\n  static readonly gitHash = __GIT_HASH__;\n  /** 容器 */\n  readonly container: HTMLElement;\n  /** 播放器元素 */\n  readonly $el: HTMLDivElement;\n  /** 播放器主要区域 */\n  readonly $main: HTMLDivElement;\n  /** 播放器视频区域 */\n  readonly $area: HTMLDivElement;\n  /** 播放器视频容器 */\n  readonly $content: HTMLDivElement;\n  /** hook */\n  readonly hook = new HookManager();\n  /** 控制组件 */\n  readonly controls: ControlsManager;\n  /** 面板 */\n  readonly panel: PanelManager;\n  /** 菜单项 */\n  readonly menu: MenuManager;\n  /** 媒体加载器 */\n  readonly loader: LoaderManager;\n  /** 插件 */\n  readonly plugin: PlayerPlugins = {};\n  /** 视频控制 */\n  protected _videoController: VideoController;\n  /** 插件管理 */\n  protected _pluginManager: PluginManager;\n  /** 事件机制 */\n  protected _eventEmitter = new EventEmitter();\n  /** Player类 */\n  readonly Player = Player;\n\n  constructor(options: PlayerOptions) {\n    this.container = options.container;\n\n    this.$el = createElement(\"div\", { class: `${classPrefix} mpui` });\n    this.$main = this.$el.appendChild(createElement(\"div\", { class: `${classPrefix}-main` }));\n    this.$area = this.$main.appendChild(createElement(\"div\", { class: `${classPrefix}-area` }));\n    this.$content = this.$area.appendChild(\n      createElement(\"div\", { class: `${classPrefix}-content` })\n    );\n\n    this._pluginManager = new PluginManager(this);\n    this._videoController = new VideoController(this, options);\n    this.loader = new LoaderManager(this);\n    this.controls = new ControlsManager(this);\n    this.panel = new PanelManager(this);\n    this.menu = new MenuManager(this);\n\n    this.init(options);\n  }\n\n  /** 初始化播放器 */\n  private async init(options: PlayerOptions) {\n    // 状态事件\n    this.on(\"videoChange\", () => {\n      this.$el.classList.add(\"is-start\");\n    });\n    this.$el.classList.add(\"is-paused\");\n    this.on(\"play\", () => {\n      this.$el.classList.remove(\"is-start\");\n      this.$el.classList.remove(\"is-paused\");\n    });\n    this.on(\"pause\", () => {\n      this.$el.classList.add(\"is-paused\");\n    });\n    this.on(\"waiting\", () => {\n      this.$el.classList.add(\"is-loading\");\n    });\n    this.on(\"playing\", () => {\n      this.$el.classList.remove(\"is-loading\");\n    });\n\n    // 注册列表中的插件\n    this._pluginManager.pluginsRegister(options);\n\n    // 播放器挂载\n    this.container.appendChild(this.$el);\n    this._pluginManager.playerMounted();\n\n    this.emit(\"mounted\");\n\n    // 装载视频\n    this._videoController.set(options.video, options.autoPlay, options.time);\n  }\n\n  /** 播放器视频元素 */\n  get $video(): HTMLVideoElement {\n    return this._videoController.$el;\n  }\n\n  /** 获取视频信息 */\n  getVideoInfo() {\n    return this._videoController.getVideoInfo();\n  }\n\n  /** 获取媒体信息 */\n  getMediaInfo() {\n    return this._videoController.getMediaInfo();\n  }\n\n  /** 获取播放器的媒体元素 */\n  getMediaElement(): HTMLVideoElement {\n    return this._videoController.$el;\n  }\n\n  /** 绑定媒体元素 */\n  attachMediaElement(el: HTMLVideoElement) {\n    this._videoController.bind(el);\n  }\n\n  /** 获取媒体控制实例 */\n  getMediaController(): MediaController | null {\n    return this._videoController.mediaController;\n  }\n\n  /** 绑定媒体控制实例 */\n  attachMediaController(controller: MediaController) {\n    this._videoController.mediaController = controller;\n    this._videoController.bind(controller.mediaElement);\n  }\n\n  /** 设置视频内容 */\n  setVideo(info: VideoInfo, play?: boolean, time?: number) {\n    return this._videoController.set(info, play, time);\n  }\n\n  /** 加载视频源 */\n  loadVideo(info: LoadInfo) {\n    return this._videoController.load(info);\n  }\n\n  // --- 播放切换控制 --- //\n\n  /** 切换上一个 */\n  public prev() {\n    this.hook.call(\"prev\");\n  }\n\n  /** 切换下一个 */\n  public next() {\n    this.hook.call(\"next\");\n  }\n\n  // --- 视频播放控制 --- //\n\n  /** 当前播放器暂停状态 */\n  get paused() {\n    return this.$video.paused;\n  }\n\n  /** 当前播放时间 */\n  public get currentTime() {\n    return this.$video.currentTime;\n  }\n\n  /** 当前播放总时间 */\n  public get duration() {\n    return this.$video.duration;\n  }\n\n  /** 当前播放音量 */\n  public get volume() {\n    return this.$video.volume;\n  }\n\n  /** 当前静音状态 */\n  public get muted() {\n    return this.$video.muted;\n  }\n\n  /** 当前播放速度 */\n  public get playbackRate() {\n    return this.$video.playbackRate;\n  }\n\n  /** 当前视频循环 */\n  public get loop() {\n    return this.$video.loop;\n  }\n\n  /** 开始播放 */\n  public play() {\n    this.hook.call(\"play\").then((res) => {\n      if (res) this.$video.play();\n    });\n  }\n\n  /** 暂停播放 */\n  public pause() {\n    this.hook.call(\"pause\").then((res) => {\n      if (res) this.$video.pause();\n    });\n  }\n\n  /** 跳转\n   * @param time 跳转时间点（秒）\n   */\n  public seek(time: number) {\n    this.hook.call(\"seek\").then((res) => {\n      if (res) {\n        this.$video.currentTime = clamp(time, 0, this.$video.duration);\n      }\n    });\n  }\n\n  /** 设置音量\n   * @param volume 音量（0-1）\n   */\n  public setVolume(volume: number) {\n    this.$video.volume = clamp(volume, 0, 1);\n  }\n\n  /** 静音 */\n  public setMuted(flag: boolean) {\n    this.$video.muted = flag;\n  }\n\n  /** 设置倍速 */\n  public setPlaybackRate(value: number) {\n    this.$video.playbackRate = value;\n  }\n\n  /** 设置视频循环 */\n  public setLoop(flag: boolean) {\n    this.$video.loop = flag;\n    this.emit(\"loopChange\", flag);\n  }\n\n  // --- 事件 --- //\n\n  /** 监听事件 */\n  public on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.on(name, listener);\n  }\n\n  /** 取消监听事件 */\n  public off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.off(name, listener);\n  }\n\n  /** 一次性监听事件 */\n  public once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.once(name, listener);\n  }\n\n  /** 发送事件 */\n  public emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\n    this._eventEmitter.emit(name, ...args);\n  }\n\n  /** 定义属性或方法 */\n  public define<T extends keyof Player>(\n    name: Player[T] extends Function | undefined ? T : never,\n    item: Function\n  ): void;\n  public define<T extends keyof Player>(name: T, item: PlayerPropertyDescriptor<Player[T]>): void;\n  public define(name: string, item: Function | PropertyDescriptor) {\n    Object.defineProperty(this, name, typeof item == \"function\" ? { value: item } : item);\n  }\n\n  /** 抛出错误 */\n  public throw(err: Error) {\n    console.error(err);\n    this.emit(\"error\", err);\n  }\n\n  /** 播放器销毁 */\n  public destroy() {\n    // 所有插件执行destroy函数\n    this._pluginManager.destroy();\n  }\n}\n\nexport default Player;\n","import Player from \"@/player\";\nimport \"@css/index.scss\";\n\nconsole.log(\n  `${\"\\n\"} %c mfunsPlayer v${__MFUNSPLAYER_VERSION__} ${__GIT_HASH__} %c https://github.com/Mfuns-cn ${\"\\n\"}${\"\\n\"}`,\n  \"color: #fff; background: #7b7ff7; padding:5px 0;\",\n  \"background: #f5f5f5; padding:5px 0;\"\n);\n\nexport default Player;\n"],"names":["createElement","tagName","attributes","children","el","name","clamp","number","lower","upper","classPrefix","videoEventMap","v","VideoController","player","options","res","info","play","time","_a","_b","url","type","live","loadInfo","video","eventName","values","_c","PluginManager","pluginItem","_d","plugin","HookManager","func","before","hook","index","ctx","defaultFunc","f","ControlsManager","controls","item","PanelManager","panel","MenuManager","LoaderManager","loader","controller","t","EventEmitter","listener","args","i","_Player","volume","flag","value","err","Player"],"mappings":"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"}