{"version":3,"file":"core-player.umd.js","sources":["../src/core/utils/index.ts","../src/core/config.ts","../src/core/module/videoController.ts","../src/core/module/pluginManager.ts","../src/core/module/hookManager.ts","../src/core/module/controlsManager.ts","../src/core/module/panelManager.ts","../src/core/module/menuManager.ts","../src/core/module/loaderManager.ts","../src/core/module/eventEmitter.ts","../src/core/player.ts","../player/core-player.ts"],"sourcesContent":["const isMobile = /mobile/i.test(window.navigator.userAgent);\n\n/** 创建特定长度的填充数组 */\nexport const createArray = <T>(count: number, val: T) => Array.from({ length: count }, () => val);\n\n/** 获取全屏元素 */\nexport const getFullscreenElement = (): HTMLElement | null =>\n  document.fullscreenElement ||\n  (document as any).mozFullScreenElement ||\n  (document as any).webkitFullscreenElement ||\n  (document as any).msFullscreenElement ||\n  null;\n\n/** 是否支持全屏 */\nexport const fullScreenEnabled: boolean =\n  document.fullscreenEnabled ||\n  (document as any).webkitFullscreenEnabled ||\n  (document as any).mozFullScreenEnabled ||\n  (document as any).msFullscreenEnabled ||\n  false;\n\n/** 是否支持画中画 */\nexport const pictureInPictureEnabled = document.pictureInPictureEnabled;\n\n/**\n * 将时间文本转换为秒数\n *\n * @param {String} str 冒号分隔的时间文本，支持全角冒号\n * @return {Number} second\n */\nexport const timeToSecond = (str: string): number => {\n  const arr = str.split(/[:：]/).slice(-3);\n  const sec = parseInt(arr[arr.length - 1]) || 0;\n  const min = parseInt(arr[arr.length - 2]) || 0;\n  const hour = parseInt(arr[arr.length - 3]) || 0;\n  return sec + min * 60 + hour * 3600;\n};\n\n/**\n * 防抖\n * @param {Function} fn 需要防抖处理的函数\n * @param {number} delay 防抖延迟执行时间\n * @param {boolean} immediate 是否立即执行一次\n */\nexport const debounce = (fn: (...args: unknown[]) => void, delay: number, immediate = false) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let isInvoke = false;\n  const f = function (this: unknown, ...args: unknown[]) {\n    if (timer) clearTimeout(timer);\n    if (immediate && !isInvoke) {\n      fn.apply(this, args);\n      isInvoke = true;\n    } else {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n        isInvoke = false;\n      }, delay);\n    }\n  };\n  /*   f.clear = () => {\n    if (timer) clearTimeout(timer);\n  }; */\n  return f;\n};\n\n/** 创建元素 */\nexport function createElement<T extends keyof HTMLElementTagNameMap>(\n  tagName: T,\n  attributes?: Record<string, string>,\n  children?: Node\n) {\n  const el = document.createElement(tagName);\n  if (attributes) {\n    for (const name in attributes) {\n      el.setAttribute(name, attributes[name]);\n    }\n  }\n  if (children) {\n    el.append(children);\n  }\n  return el;\n}\n\n/**\n * 节流\n * @param {Function} fn 需要节流处理的函数\n * @param {number} wait 执行一次后需要等待的时间\n */\nexport const throttle = (fn: (...args: unknown[]) => void, wait: number) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  return function (this: unknown, ...args: unknown[]) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n      }, wait);\n    }\n  };\n};\n/** 限制数值 */\nexport function clamp(number: number, lower: number, upper: number) {\n  return number > lower ? (number < upper ? number : upper) : lower;\n}\n\n// === 未完全重构 ==========\n\n/**\n * 将秒数转换为时间文本\n *\n * @param {Number} second\n * @param {Boolean} showHour\n * @return {String} 00:00 or 00:00:00\n */\nexport const secondToTime = (second: number, showHour = true) => {\n  second = second || 0;\n  if (second === 0 || second === Infinity || second.toString() === \"NaN\") {\n    return \"00:00\";\n  }\n  const add0 = (num: number) => (num < 10 ? `0${num}` : `${num}`);\n  const hour = Math.floor(second / 3600);\n  const min = Math.floor((second - hour * 3600) / 60);\n  const sec = Math.floor(second - hour * 3600 - min * 60);\n  if (showHour) {\n    return (hour > 0 ? [hour, min, sec] : [min, sec]).map(add0).join(\":\");\n  }\n  return [hour * 60 + min, sec].map(add0).join(\":\");\n};\n\nexport const storage = {\n  set: (key: string, value: any) => {\n    localStorage.setItem(key, value);\n  },\n\n  get: (key: string) => localStorage.getItem(key),\n};\n\nexport const nameMap = {\n  dragStart: isMobile ? \"touchstart\" : \"mousedown\",\n  dragMove: isMobile ? \"touchmove\" : \"mousemove\",\n  dragEnd: isMobile ? \"touchend\" : \"mouseup\",\n};\nexport const colorLuminance = (hex: string, lum: number) => {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  let rgb = \"#\";\n  let c;\n  let i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += `00${c}`.substr(c.length);\n  }\n\n  return rgb;\n};\n\nexport const hex2Rgb = (str: string, opacity: number) => {\n  // 16进制转rgb\n  const reg = /^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$/;\n  if (!reg.test(str)) {\n    return;\n  }\n  let newStr = str.toLowerCase().replace(/#/g, \"\");\n  const len = newStr.length;\n  if (len == 3) {\n    let t = \"\";\n    for (let i = 0; i < len; i++) {\n      t += newStr.slice(i, i + 1).concat(newStr.slice(i, i + 1));\n    }\n    newStr = t;\n  }\n  const arr = []; // 将字符串分隔，两个两个的分隔\n  for (let i = 0; i < 6; i += 2) {\n    const s = newStr.slice(i, i + 2);\n    arr.push(parseInt(`0x${s}`));\n  }\n  if (opacity) return `rgba(${arr.join(\",\")},${opacity})`;\n  return `rgb(${arr.join(\",\")})`;\n};\nexport const rgb2Hex = (str: string) => {\n  // rgb转16进制\n  const reg = /^(rgb|RGB)/;\n  if (!reg.test(str)) {\n    return;\n  }\n  const arr = str.slice(4, str.length - 1).split(\",\");\n  let color = \"#\";\n  for (let i = 0; i < arr.length; i++) {\n    let t = Number(arr[i]).toString(16);\n    if (t == \"0\") {\n      // 如果为“0”的话，需要补0操作,否则只有5位数\n      t += \"0\";\n    }\n    color += t;\n  }\n  return color;\n};\nexport const color2Number = (color: string) => {\n  if (color[0] === \"#\") {\n    color = color.substr(1);\n  }\n  if (color.length === 3) {\n    color = `${color[0]}${color[0]}${color[1]}${color[1]}${color[2]}${color[2]}`;\n  }\n  return (parseInt(color, 16) + 0x000000) & 0xffffff;\n};\n\nexport const number2Color = (number: number) => `#${`00000${number.toString(16)}`.slice(-6)}`;\nexport const initHash = () => {\n  let count = 100;\n\n  return function (hashLength: number) {\n    if (!hashLength || typeof Number(hashLength) !== \"number\") {\n      return;\n    }\n    const ar = [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"0\",\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ];\n    const hs = [];\n    const hl = Number(hashLength);\n    const al = ar.length;\n    for (let i = 0; i < hl; i++) {\n      hs.push(ar[Math.floor(Math.random() * al)]);\n    }\n    count++;\n    return `${hs.join(\"\")}${count}`;\n  };\n};\nexport const randomFontsize = (range: number) => {\n  const allSize = [16, 18, 25, 36, 45, 64];\n  const random = Math.floor(Math.random() * range);\n  return allSize[random];\n};\n\nconst dateFormatMap = {\n  yyyy: (d: Date) => d.getFullYear().toString(),\n  yy: (d: Date) => d.getFullYear().toString().slice(-2),\n  MM: (d: Date) => (d.getMonth() + 1).toString().padStart(2, \"0\"),\n  dd: (d: Date) => d.getDate().toString().padStart(2, \"0\"),\n  HH: (d: Date) => d.getHours().toString().padStart(2, \"0\"),\n  mm: (d: Date) => d.getMinutes().toString().padStart(2, \"0\"),\n  ss: (d: Date) => d.getSeconds().toString().padStart(2, \"0\"),\n};\n\n// date: 时间对象, pattern: 日期格式\nexport const dateFormat = (date: Date, format: string) => {\n  return format.replace(/yyyy|yy|MM|dd|HH|mm|ss/g, (match) =>\n    dateFormatMap[match as keyof typeof dateFormatMap]?.(date)\n  );\n};\n","export const classPrefix = \"mfuns-player\";\n\n/** 项目链接 */\nexport const repositoryLink = \"https://github.com/Mfuns-cn/mfunsPlayer/tree/v3-beta\";\n\n/** 开发者列表 */\nexport const developers = [\n  { name: \"Minteea\", id: \"Minteea\", link: \"https://github.com/Minteea\" },\n  { name: \"鲁迪钨丝\", id: \"Rudiusu\", link: \"https://github.com/Rudiusu\" },\n];\n","import { LoadInfo, MediaController, PlayerOptions, VideoInfo } from \"@/types\";\nimport Player from \"@/player\";\nimport { PlayerEventMap } from \"@/types/PlayerEventMap\";\nimport { createElement } from \"@/utils\";\nimport { classPrefix } from \"@/config\";\n\nconst videoEventMap: {\n  [k in keyof PlayerEventMap & keyof HTMLVideoElementEventMap]?: (\n    v: HTMLVideoElement\n  ) => Parameters<PlayerEventMap[k]>;\n} = {\n  play: () => [],\n  pause: () => [],\n  ended: () => [],\n\n  loadeddata: () => [],\n  loadedmetadata: () => [],\n  waiting: () => [],\n  playing: () => [],\n  canplay: () => [],\n  canplaythrough: () => [],\n\n  timeupdate: (v) => [v.currentTime],\n  durationchange: (v) => [v.duration],\n  progress: (v) => [v.buffered],\n  seeking: (v) => [v.currentTime],\n  seeked: (v) => [v.currentTime],\n  volumechange: (v) => [v.volume, v.muted],\n  ratechange: (v) => [v.playbackRate],\n\n  enterpictureinpicture: () => [],\n  leavepictureinpicture: () => [],\n};\n\nexport default class VideoController {\n  /** 播放器主体 */\n  player: Player;\n  /** video对象 */\n  $el: HTMLVideoElement;\n\n  ratio: [number, number] | null = null;\n\n  /** 视频信息 */\n  info: VideoInfo = {};\n\n  mediaController: MediaController | null = null;\n\n  private detachEventController?: AbortController;\n\n  constructor(player: Player, options: PlayerOptions) {\n    this.player = player;\n\n    this.$el = this.player.$content.appendChild(\n      createElement(\"video\", { class: `${classPrefix}-video` })\n    );\n\n    this._attachEvent(this.$el);\n\n    this.player.on(\"ended\", () => {\n      this.player.hook.call(\"end\").then((res) => {\n        if (res) this.player.emit(\"end\");\n      });\n    });\n  }\n\n  /** 设置视频 */\n  public set(info: VideoInfo, play?: boolean, time?: number) {\n    this.player.hook.call(\"video.set\", info).then(async (res) => {\n      if (res) {\n        // 销毁并丢弃原视频控制实例\n        this.mediaController?.destroy?.();\n        this.mediaController = null;\n        // 设置新视频信息\n        this.info = info;\n        this.player.emit(\"videoChange\", { ...info });\n        // 加载视频\n        let { url, type, live } = info;\n        const loadInfo = { url, type, play, time, live };\n        this.player.hook.call(\"video.beforeLoad\", loadInfo).then(() => {\n          if (loadInfo.url) {\n            this.load(loadInfo as LoadInfo);\n          } else {\n            this.player.throw(new Error(\"缺少视频播放信息\"));\n          }\n        });\n      }\n    });\n  }\n\n  /** 加载视频 */\n  public load(info: LoadInfo) {\n    this.player.hook.call(\"video.load\", info).then((res) => {\n      if (res) {\n        this.mediaController = this.player.loader.create(info, this.$el);\n        this.player.emit(\"videoLoad\", info);\n      } else {\n        this.player.throw(new Error(\"视频加载失败\"));\n      }\n    });\n  }\n\n  /** 添加视频事件 */\n  private _attachEvent(video: HTMLVideoElement) {\n    this.detachEventController = new AbortController();\n    for (const eventName in videoEventMap) {\n      const values =\n        videoEventMap[eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap]!;\n      video.addEventListener(\n        eventName,\n        () => {\n          this.player.emit(\n            eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap,\n            ...values(video)\n          );\n        },\n        { signal: this.detachEventController.signal }\n      );\n    }\n  }\n\n  public bind(el: HTMLVideoElement) {\n    this.$el = el;\n    this.detachEventController?.abort();\n    this._attachEvent(el);\n  }\n\n  /** 获取播放信息 */\n  getVideoInfo() {\n    return {\n      ...this.info,\n    };\n  }\n  /** 获取媒体信息 */\n  getMediaInfo() {\n    return {\n      url: this.mediaController?.url,\n      type: this.mediaController?.type || \"\",\n      live: this.mediaController?.live || false,\n    };\n  }\n}\n","import Player from \"@/player\";\nimport { PlayerOptions, PluginItem, PluginConstructor } from \"@/types\";\n\nexport default class PluginManager {\n  player: Player;\n  get plugin() {\n    return this.player.plugin as unknown as Record<string, PluginItem>;\n  }\n  private initialized = false;\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册插件 */\n  register(pluginItem: PluginConstructor | PluginItem, options: PlayerOptions) {\n    const plugin: PluginItem =\n      typeof pluginItem == \"function\" ? new pluginItem(this.player) : pluginItem;\n    plugin.init?.(this.player);\n    if (pluginItem.pluginName) (this.player.plugin as any)[pluginItem.pluginName] = plugin;\n    console.log(pluginItem.pluginName);\n    plugin.apply?.(this.player, options);\n    if (this.initialized) {\n      plugin.ready?.(this.player);\n      plugin.mounted?.(this.player);\n    }\n  }\n  /** 批量注册插件 */\n  pluginsRegister(options: PlayerOptions) {\n    options.plugins?.forEach((pluginItem) => {\n      this.register(pluginItem, options);\n    });\n    this.pluginsReady();\n  }\n  /** 所有插件注册完毕后执行 */\n  pluginsReady() {\n    if (this.initialized) return;\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.ready?.(this.player);\n    }\n    this.initialized = true;\n  }\n  /** 播放器挂载后执行 */\n  playerMounted() {\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.mounted?.(this.player);\n    }\n  }\n  /** 销毁所有插件 */\n  destroy() {\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.destroy?.();\n    }\n  }\n}\n","import { PlayerHookMap } from \"@/types\";\n\ntype MaybePromise<T> = T | Promise<T>;\n\nexport type HookFunction<T> = (ctx: T) => MaybePromise<void | boolean>;\n\nexport default class HookManager {\n  protected hooks: Record<string, HookFunction<any>[]> = {};\n\n  /** 注册钩子 */\n  register<T extends keyof PlayerHookMap>(\n    name: T,\n    func: HookFunction<PlayerHookMap[T]>,\n    before = false\n  ) {\n    let hook = this.hooks[name];\n    if (!hook) {\n      hook = [];\n      this.hooks[name] = hook;\n    }\n    before ? hook.unshift(func) : hook.push(func);\n  }\n\n  /** 移除钩子 */\n  unregister<T extends keyof PlayerHookMap>(name: T, func: HookFunction<PlayerHookMap[T]>) {\n    let hook = this.hooks[name];\n    if (!hook) {\n      hook = [];\n      this.hooks[name] = hook;\n    }\n    const index = hook.indexOf(func);\n    if (index > -1) hook.splice(index, 1);\n  }\n\n  call<T extends keyof PlayerHookMap>(\n    name: PlayerHookMap[T] extends void ? T : never,\n    ctx: void,\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ): Promise<boolean>;\n  call<T extends keyof PlayerHookMap>(\n    name: T,\n    ctx: PlayerHookMap[T],\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ): Promise<boolean>;\n  /** 调用钩子函数\n   * @param name 钩子名称\n   * @param ctx 钩子上下文\n   * @param defaultFunc 钩子在正常遍历完毕后最终执行的钩子函数\n   */\n  async call<T extends keyof PlayerHookMap>(\n    name: T,\n    ctx: PlayerHookMap[T],\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ) {\n    const hook = this.hooks[name];\n    if (hook?.length) {\n      for (const f of hook) {\n        const res = await f(ctx);\n        if (res == true) {\n          console.log(`钩子提前结束调用: ${name}`);\n          console.log(f);\n          return true;\n        } else if (res == false) {\n          console.log(`钩子被拦截: ${name}`);\n          console.log(f);\n          return false;\n        }\n      }\n    }\n    console.log(`钩子调用完毕: ${name}`);\n    console.log(ctx);\n    return defaultFunc?.(ctx as any) ?? true;\n  }\n}\n","import Player from \"@/player\";\nimport { ControlsPlugin, ControlsItem, UIOptionsItem } from \"../plugin\";\nimport { PlayerHookMap } from \"../types\";\n\nexport default class ControlsManager {\n  protected list = new Map<string, ControlsItem>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册控制组件 */\n  register(name: string, controls: ControlsItem | (new (player: Player) => ControlsItem)) {\n    this.list.set(name, typeof controls == \"function\" ? this.build(controls) : controls);\n  }\n\n  /** 移除控制组件 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取控制组件 */\n  get(item: UIOptionsItem<ControlsItem>): ControlsItem | undefined {\n    let controls: ControlsItem | undefined;\n    switch (typeof item) {\n      case \"object\":\n        controls = item;\n        break;\n      case \"function\":\n        controls = this.build(item);\n        break;\n      default:\n        controls = this.list.get(item);\n        break;\n    }\n    return controls?.ignored ? undefined : controls;\n  }\n\n  /** 创建控制组件 */\n  build(func: new (player: Player) => ControlsItem) {\n    const controls = new func(this.player);\n    controls.init?.(this.player);\n    controls.ready?.(this.player);\n    controls.mounted?.(this.player);\n    return controls;\n  }\n}\n","import Player from \"@/player\";\nimport { PanelItem, UIOptionsItem } from \"@/plugin\";\nimport { PlayerHookMap } from \"@/types\";\n\nexport default class PanelManager {\n  protected list = new Map<string, PanelItem>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册面板 */\n  register(name: string, panel: PanelItem | (new (player: Player) => PanelItem)) {\n    this.list.set(name, typeof panel == \"function\" ? this.build(panel) : panel);\n  }\n\n  /** 移除面板 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取面板 */\n  get(panel: UIOptionsItem<PanelItem>): PanelItem | undefined {\n    switch (typeof panel) {\n      case \"object\":\n        return panel;\n      case \"function\":\n        return this.build(panel);\n      default:\n        return this.list.get(panel);\n    }\n  }\n\n  /** 创建面板 */\n  build(func: new (player: Player) => PanelItem) {\n    const panel = new func(this.player);\n    panel.init?.(this.player);\n    panel.ready?.(this.player);\n    panel.mounted?.(this.player);\n    return panel;\n  }\n}\n","import Player from \"@/player\";\nimport { MenuItem, UIOptionsItem } from \"@/plugin\";\nimport { PlayerHookMap } from \"@/types\";\n\nexport default class MenuManager {\n  protected list = new Map<string, MenuItem>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册菜单项 */\n  register(name: string, item: MenuItem | (new (player: Player) => MenuItem)) {\n    this.list.set(name, typeof item == \"function\" ? this.build(item) : item);\n  }\n\n  /** 移除菜单项 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取菜单项 */\n  get(item: UIOptionsItem<MenuItem>): MenuItem | undefined {\n    switch (typeof item) {\n      case \"object\":\n        return item;\n      case \"function\":\n        return this.build(item);\n      default:\n        return this.list.get(item);\n    }\n  }\n\n  /** 创建菜单项 */\n  build(func: new (player: Player) => MenuItem) {\n    const item = new func(this.player);\n    item.init?.(this.player);\n    item.ready?.(this.player);\n    item.mounted?.(this.player);\n    return item;\n  }\n}\n","import Player from \"@/player\";\nimport { LoadInfo, MediaController, MediaLoader, PlayerHookMap } from \"@/types\";\n\nexport default class LoaderManager {\n  protected list = new Map<string, MediaLoader>();\n  protected player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n\n  /** 注册加载器 */\n  register(name: string, loader: MediaLoader) {\n    this.list.set(name, loader);\n  }\n\n  /** 移除加载器 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 创建媒体控制实例 */\n  create(info: LoadInfo, video: HTMLVideoElement) {\n    for (const [name, loader] of this.list) {\n      if (loader.check(info)) return loader.create(info, video);\n    }\n    return this.createDefault(info, video);\n  }\n\n  /** 常规方式创建实例 */\n  createDefault(info: LoadInfo, video: HTMLVideoElement): MediaController {\n    const { type, url, live, play, time } = info;\n    const controller: MediaController = {\n      type: type || \"\",\n      url: url,\n      live: live || false,\n      mediaElement: video,\n      destroy() {\n        this.mediaElement.src = \"\";\n      },\n    };\n    const t = time === true ? this.player.currentTime : time;\n    video.src = url;\n    video.addEventListener(\n      \"loadeddata\",\n      () => {\n        if (t) {\n          this.player.seek(t);\n        }\n        if (play) {\n          this.player.play();\n        }\n      },\n      { once: true }\n    );\n    return controller;\n  }\n}\n","import { PlayerEventMap } from \"@/types\";\n\nexport default class EventEmitter {\n  protected listeners: Record<string, ((...args: any[]) => void)[]> = {};\n  protected onceListeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  readonly customEventList: string[] = [];\n\n  /** 添加监听 */\n  on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n    this.listeners[name].push(listener);\n  }\n\n  /** 添加一次性监听 */\n  once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.onceListeners[name]) {\n      this.onceListeners[name] = [];\n    }\n    this.onceListeners[name].push(listener);\n  }\n\n  /** 移除监听 */\n  off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n    const index = this.listeners[name].indexOf(listener);\n    if (index > -1) this.listeners[name].splice(index, 1);\n  }\n\n  /** 触发事件 */\n  emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\n    if (this.listeners[name]?.length) {\n      for (let i = 0; i < this.listeners[name].length; i++) {\n        this.listeners[name][i](...args);\n      }\n    }\n    if (this.onceListeners[name]?.length) {\n      for (let i = 0; i < this.onceListeners[name].length; i++) {\n        this.onceListeners[name][i](...args);\n      }\n      this.onceListeners[name] = [];\n    }\n  }\n}\n","import {\n  LoadInfo,\n  MediaController,\n  PlayerPlugins,\n  PlayerPropertyDescriptor,\n  VideoInfo,\n} from \"./types\";\nimport { PlayerOptions } from \"@/types\";\nimport { PlayerEventMap } from \"./types/PlayerEventMap\";\nimport { clamp, createElement } from \"./utils\";\nimport { classPrefix } from \"./config\";\nimport VideoController from \"./module/videoController\";\nimport PluginManager from \"./module/pluginManager\";\nimport HookManager from \"./module/hookManager\";\nimport ControlsManager from \"./module/controlsManager\";\nimport PanelManager from \"./module/panelManager\";\nimport MenuManager from \"./module/menuManager\";\nimport LoaderManager from \"./module/loaderManager\";\nimport EventEmitter from \"./module/eventEmitter\";\nimport * as Util from \"@/utils\";\nimport * as Component from \"@/components\";\n\n/**\n * @event\n */\nexport class Player {\n  static readonly version = __MFUNSPLAYER_VERSION__;\n  static readonly gitHash = __GIT_HASH__;\n  /** 容器 */\n  readonly container: HTMLElement;\n  /** 播放器元素 */\n  readonly $el: HTMLDivElement;\n  /** 播放器主要区域 */\n  readonly $main: HTMLDivElement;\n  /** 播放器视频区域 */\n  readonly $area: HTMLDivElement;\n  /** 播放器视频容器 */\n  readonly $content: HTMLDivElement;\n  /** hook */\n  readonly hook = new HookManager();\n  /** 控制组件 */\n  readonly controls: ControlsManager;\n  /** 面板 */\n  readonly panel: PanelManager;\n  /** 菜单项 */\n  readonly menu: MenuManager;\n  /** 媒体加载器 */\n  readonly loader: LoaderManager;\n  /** 插件 */\n  readonly plugin: PlayerPlugins = {};\n  /** 视频控制 */\n  protected _videoController: VideoController;\n  /** 插件管理 */\n  protected _pluginManager: PluginManager;\n  /** 事件机制 */\n  protected _eventEmitter = new EventEmitter();\n  /** Player类 */\n  readonly Player = Player;\n\n  constructor(options: PlayerOptions) {\n    this.container = options.container;\n\n    this.$el = createElement(\"div\", { class: `${classPrefix} mpui` });\n    this.$main = this.$el.appendChild(createElement(\"div\", { class: `${classPrefix}-main` }));\n    this.$area = this.$main.appendChild(createElement(\"div\", { class: `${classPrefix}-area` }));\n    this.$content = this.$area.appendChild(\n      createElement(\"div\", { class: `${classPrefix}-content` })\n    );\n\n    this._pluginManager = new PluginManager(this);\n    this._videoController = new VideoController(this, options);\n    this.loader = new LoaderManager(this);\n    this.controls = new ControlsManager(this);\n    this.panel = new PanelManager(this);\n    this.menu = new MenuManager(this);\n\n    this.init(options);\n  }\n\n  /** 初始化播放器 */\n  private async init(options: PlayerOptions) {\n    // 状态事件\n    this.on(\"videoChange\", () => {\n      this.$el.classList.add(\"is-start\");\n    });\n    this.$el.classList.add(\"is-paused\");\n    this.on(\"play\", () => {\n      this.$el.classList.remove(\"is-start\");\n      this.$el.classList.remove(\"is-paused\");\n    });\n    this.on(\"pause\", () => {\n      this.$el.classList.add(\"is-paused\");\n    });\n    this.on(\"waiting\", () => {\n      this.$el.classList.add(\"is-loading\");\n    });\n    this.on(\"playing\", () => {\n      this.$el.classList.remove(\"is-loading\");\n    });\n\n    // 注册列表中的插件\n    this._pluginManager.pluginsRegister(options);\n\n    // 播放器挂载\n    this.container.appendChild(this.$el);\n    this._pluginManager.playerMounted();\n\n    this.emit(\"mounted\");\n\n    // 装载视频\n    this._videoController.set(options.video, options.autoPlay, options.time);\n  }\n\n  /** 播放器视频元素 */\n  get $video(): HTMLVideoElement {\n    return this._videoController.$el;\n  }\n\n  /** 获取视频信息 */\n  getVideoInfo() {\n    return this._videoController.getVideoInfo();\n  }\n\n  /** 获取媒体信息 */\n  getMediaInfo() {\n    return this._videoController.getMediaInfo();\n  }\n\n  /** 获取播放器的媒体元素 */\n  getMediaElement(): HTMLVideoElement {\n    return this._videoController.$el;\n  }\n\n  /** 绑定媒体元素 */\n  attachMediaElement(el: HTMLVideoElement) {\n    this._videoController.bind(el);\n  }\n\n  /** 获取媒体控制实例 */\n  getMediaController(): MediaController | null {\n    return this._videoController.mediaController;\n  }\n\n  /** 绑定媒体控制实例 */\n  attachMediaController(controller: MediaController) {\n    this._videoController.mediaController = controller;\n    this._videoController.bind(controller.mediaElement);\n  }\n\n  /** 设置视频内容 */\n  setVideo(info: VideoInfo, play?: boolean, time?: number) {\n    return this._videoController.set(info, play, time);\n  }\n\n  /** 加载视频源 */\n  loadVideo(info: LoadInfo) {\n    return this._videoController.load(info);\n  }\n\n  // --- 播放切换控制 --- //\n\n  /** 切换上一个 */\n  public prev() {\n    this.hook.call(\"prev\");\n  }\n\n  /** 切换下一个 */\n  public next() {\n    this.hook.call(\"next\");\n  }\n\n  // --- 视频播放控制 --- //\n\n  /** 当前播放器暂停状态 */\n  get paused() {\n    return this.$video.paused;\n  }\n\n  /** 当前播放时间 */\n  public get currentTime() {\n    return this.$video.currentTime;\n  }\n\n  /** 当前播放总时间 */\n  public get duration() {\n    return this.$video.duration;\n  }\n\n  /** 当前播放音量 */\n  public get volume() {\n    return this.$video.volume;\n  }\n\n  /** 当前静音状态 */\n  public get muted() {\n    return this.$video.muted;\n  }\n\n  /** 当前播放速度 */\n  public get playbackRate() {\n    return this.$video.playbackRate;\n  }\n\n  /** 当前视频循环 */\n  public get loop() {\n    return this.$video.loop;\n  }\n\n  /** 开始播放 */\n  public play() {\n    this.hook.call(\"play\").then((res) => {\n      if (res) this.$video.play();\n    });\n  }\n\n  /** 暂停播放 */\n  public pause() {\n    this.hook.call(\"pause\").then((res) => {\n      if (res) this.$video.pause();\n    });\n  }\n\n  /** 跳转\n   * @param time 跳转时间点（秒）\n   */\n  public seek(time: number) {\n    this.hook.call(\"seek\").then((res) => {\n      if (res) {\n        this.$video.currentTime = clamp(time, 0, this.$video.duration);\n      }\n    });\n  }\n\n  /** 设置音量\n   * @param volume 音量（0-1）\n   */\n  public setVolume(volume: number) {\n    this.$video.volume = clamp(volume, 0, 1);\n  }\n\n  /** 静音 */\n  public setMuted(flag: boolean) {\n    this.$video.muted = flag;\n  }\n\n  /** 设置倍速 */\n  public setPlaybackRate(value: number) {\n    this.$video.playbackRate = value;\n  }\n\n  /** 设置视频循环 */\n  public setLoop(flag: boolean) {\n    this.$video.loop = flag;\n    this.emit(\"loopChange\", flag);\n  }\n\n  // --- 事件 --- //\n\n  /** 监听事件 */\n  public on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.on(name, listener);\n  }\n\n  /** 取消监听事件 */\n  public off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.off(name, listener);\n  }\n\n  /** 一次性监听事件 */\n  public once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.once(name, listener);\n  }\n\n  /** 发送事件 */\n  public emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\n    this._eventEmitter.emit(name, ...args);\n  }\n\n  /** 定义属性或方法 */\n  public define<T extends keyof Player>(\n    name: Player[T] extends Function | undefined ? T : never,\n    item: Function\n  ): void;\n  public define<T extends keyof Player>(name: T, item: PlayerPropertyDescriptor<Player[T]>): void;\n  public define(name: string, item: Function | PropertyDescriptor) {\n    Object.defineProperty(this, name, typeof item == \"function\" ? { value: item } : item);\n  }\n\n  /** 抛出错误 */\n  public throw(err: Error) {\n    console.error(err);\n    this.emit(\"error\", err);\n  }\n\n  /** 播放器销毁 */\n  public destroy() {\n    // 所有插件执行destroy函数\n    this._pluginManager.destroy();\n  }\n}\n\nexport default Player;\n","import Player from \"@/player\";\nimport \"@css/index.scss\";\n\nconsole.log(\n  `${\"\\n\"} %c mfunsPlayer v${__MFUNSPLAYER_VERSION__} ${__GIT_HASH__} %c https://github.com/Mfuns-cn ${\"\\n\"}${\"\\n\"}`,\n  \"color: #fff; background: #7b7ff7; padding:5px 0;\",\n  \"background: #f5f5f5; padding:5px 0;\"\n);\n\nexport default Player;\n"],"names":["createElement","tagName","attributes","children","el","name","clamp","number","lower","upper","classPrefix","videoEventMap","v","VideoController","player","options","res","info","play","time","_b","_a","url","type","live","loadInfo","video","eventName","values","_c","PluginManager","pluginItem","plugin","_d","HookManager","func","before","hook","index","ctx","defaultFunc","f","ControlsManager","controls","item","PanelManager","panel","MenuManager","LoaderManager","loader","controller","t","EventEmitter","listener","args","i","_Player","volume","flag","value","err","Player"],"mappings":"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"}