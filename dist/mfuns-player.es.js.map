{"version":3,"file":"mfuns-player.es.js","sources":["../src/js/plugin/PluginManager.ts","../node_modules/lit-html/lit-html.js","../src/js/const.ts","../src/js/utils/index.ts","../src/js/ui/Controller/ProgressBar.ts","../src/js/ui/Controller/button/ButtonFullscreen.ts","../src/js/ui/Controller/button/ButtonPip.ts","../src/js/ui/Controller/button/ButtonPlay.ts","../src/js/ui/Controller/label/LabelTime.ts","../src/js/ui/Controller/button/ButtonLoop.ts","../src/js/ui/components/Slider.ts","../src/js/ui/components/SliderVertical.ts","../src/js/ui/components/Picker.ts","../src/js/ui/components/MultiPicker.ts","../src/js/ui/components/Checkbox.ts","../src/js/ui/Controller/button/ButtonVolume.ts","../src/js/ui/Controller/button/ButtonSettings.ts","../src/js/ui/Controller/button/ButtonPart.ts","../src/js/ui/Controller/button/ButtonWebfull.ts","../src/js/ui/Controller/button/ButtonPrev.ts","../src/js/ui/Controller/button/ButtonNext.ts","../src/js/utils/KeyCode.enum.ts","../src/js/ui/Controller/button/ButtonDanmakuSwitch.ts","../src/js/ui/Controller/button/ButtonDanmakuSettings.ts","../src/js/ui/Controller/button/ButtonDanmakuStyle.ts","../src/js/ui/Controller/DanmakuBar.ts","../src/js/ui/Controller/index.ts","../src/js/Events/index.ts","../src/js/ui/Template.ts","../src/js/Video/Loader.ts","../src/js/Video/index.ts","../src/js/Mode/ModeFullscreen.ts","../src/js/Mode/ModePip.ts","../src/js/Mode/ModeWebfull.ts","../src/js/Mode/index.ts","../src/js/ui/HotKey/index.ts","../src/js/ui/Side/SidePartList.ts","../src/js/ui/Side/index.ts","../src/js/ui/ContextMenu.ts","../src/js/ui/Modal/ModalAbout.ts","../src/js/ui/Modal/ModalHotkey.ts","../src/js/ui/Modal/index.ts","../src/js/ui/Theme.ts","../src/js/ui/State/index.ts","../src/js/enum.ts","../src/js/Danmaku/DanmakuEngine.ts","../src/js/utils/randomId.ts","../src/js/Danmaku/DanmakuParser.ts","../src/js/Danmaku/DanmakuOperate.ts","../src/js/Danmaku/index.ts","../src/js/player.ts","../src/js/index.ts"],"sourcesContent":["import MfunsPlayer from \"@/player\"\nimport { PlayerOptions, PlayerPlugin } from \"@/types\"\n\nexport class PluginManager {\n  player: MfunsPlayer\n  list: PlayerPlugin[] = []\n  constructor(player: MfunsPlayer, list?: PlayerPlugin[]) {\n    this.player = player\n    const names: string[] = []\n    list?.forEach((plugin) => {\n      if (names.indexOf(plugin.id) > -1) {\n        return\n      } else {\n        names.push(plugin.id)\n        this.list.push(plugin)\n      }\n    })\n  }\n  /** 创建所有插件 */\n  pluginCreate(options: PlayerOptions<PlayerPlugin>) {\n    this.list.forEach((plugin) => {\n      this.player.plugin[plugin.id] = plugin.create?.(this.player, options) || {}\n    })\n  }\n  /** 初始化所有插件 */\n  pluginInit(options: PlayerOptions<PlayerPlugin>) {\n    this.list.forEach((plugin) => {\n      plugin.init?.(this.player, options)\n    })\n  }\n  /** 销毁所有插件 */\n  pluginDestory() {\n    this.list.forEach((plugin) => {\n      plugin.destroy?.(this.player)\n    })\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=window,s=i.trustedTypes,e=s?s.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,o=\"$lit$\",n=`lit$${(Math.random()+\"\").slice(9)}$`,l=\"?\"+n,h=`<${l}>`,r=document,u=()=>r.createComment(\"\"),d=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,c=Array.isArray,v=t=>c(t)||\"function\"==typeof(null==t?void 0:t[Symbol.iterator]),a=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,_=/-->/g,m=/>/g,p=RegExp(`>|${a}(?:([^\\\\s\"'>=/]+)(${a}*=${a}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),g=/'/g,$=/\"/g,y=/^(?:script|style|textarea|title)$/i,w=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=w(1),b=w(2),T=Symbol.for(\"lit-noChange\"),A=Symbol.for(\"lit-nothing\"),E=new WeakMap,C=r.createTreeWalker(r,129,null,!1);function P(t,i){if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==e?e.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,e=[];let l,r=2===i?\"<svg>\":\"\",u=f;for(let i=0;i<s;i++){const s=t[i];let d,c,v=-1,a=0;for(;a<s.length&&(u.lastIndex=a,c=u.exec(s),null!==c);)a=u.lastIndex,u===f?\"!--\"===c[1]?u=_:void 0!==c[1]?u=m:void 0!==c[2]?(y.test(c[2])&&(l=RegExp(\"</\"+c[2],\"g\")),u=p):void 0!==c[3]&&(u=p):u===p?\">\"===c[0]?(u=null!=l?l:f,v=-1):void 0===c[1]?v=-2:(v=u.lastIndex-c[2].length,d=c[1],u=void 0===c[3]?p:'\"'===c[3]?$:g):u===$||u===g?u=p:u===_||u===m?u=f:(u=p,l=void 0);const w=u===p&&t[i+1].startsWith(\"/>\")?\" \":\"\";r+=u===f?s+h:v>=0?(e.push(d),s.slice(0,v)+o+s.slice(v)+n+w):s+n+(-2===v?(e.push(void 0),i):w)}return[P(t,r+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\")),e]};class N{constructor({strings:t,_$litType$:i},e){let h;this.parts=[];let r=0,d=0;const c=t.length-1,v=this.parts,[a,f]=V(t,i);if(this.el=N.createElement(a,e),C.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(h=C.nextNode())&&v.length<c;){if(1===h.nodeType){if(h.hasAttributes()){const t=[];for(const i of h.getAttributeNames())if(i.endsWith(o)||i.startsWith(n)){const s=f[d++];if(t.push(i),void 0!==s){const t=h.getAttribute(s.toLowerCase()+o).split(n),i=/([.?@])?(.*)/.exec(s);v.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?H:\"?\"===i[1]?L:\"@\"===i[1]?z:k})}else v.push({type:6,index:r})}for(const i of t)h.removeAttribute(i)}if(y.test(h.tagName)){const t=h.textContent.split(n),i=t.length-1;if(i>0){h.textContent=s?s.emptyScript:\"\";for(let s=0;s<i;s++)h.append(t[s],u()),C.nextNode(),v.push({type:2,index:++r});h.append(t[i],u())}}}else if(8===h.nodeType)if(h.data===l)v.push({type:2,index:r});else{let t=-1;for(;-1!==(t=h.data.indexOf(n,t+1));)v.push({type:7,index:r}),t+=n.length-1}r++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){var o,n,l,h;if(i===T)return i;let r=void 0!==e?null===(o=s._$Co)||void 0===o?void 0:o[e]:s._$Cl;const u=d(i)?void 0:i._$litDirective$;return(null==r?void 0:r.constructor)!==u&&(null===(n=null==r?void 0:r._$AO)||void 0===n||n.call(r,!1),void 0===u?r=void 0:(r=new u(t),r._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Co)&&void 0!==l?l:h._$Co=[])[e]=r:s._$Cl=r),void 0!==r&&(i=S(t,r._$AS(t,i.values),r,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:r).importNode(s,!0);C.currentNode=o;let n=C.nextNode(),l=0,h=0,u=e[0];for(;void 0!==u;){if(l===u.index){let i;2===u.type?i=new R(n,n.nextSibling,this,t):1===u.type?i=new u.ctor(n,u.name,u.strings,this,t):6===u.type&&(i=new Z(n,this,t)),this._$AV.push(i),u=e[++h]}l!==(null==u?void 0:u.index)&&(n=C.nextNode(),l++)}return C.currentNode=r,o}v(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{constructor(t,i,s,e){var o;this.type=2,this._$AH=A,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cp=null===(o=null==e?void 0:e.isConnected)||void 0===o||o}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cp}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===(null==t?void 0:t.nodeType)&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),d(t)?t===A||null==t||\"\"===t?(this._$AH!==A&&this._$AR(),this._$AH=A):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):v(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==A&&d(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=N.createElement(P(e.h,e.h[0]),this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.v(s);else{const t=new M(o,this),i=t.u(this.options);t.v(s),this.$(i),this._$AH=t}}_$AC(t){let i=E.get(t.strings);return void 0===i&&E.set(t.strings,i=new N(t)),i}T(t){c(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new R(this.k(u()),this.k(u()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cp=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class k{constructor(t,i,s,e,o){this.type=1,this._$AH=A,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=A}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=S(this,t,i,0),n=!d(t)||t!==this._$AH&&t!==T,n&&(this._$AH=t);else{const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=S(this,e[s+l],i,l),h===T&&(h=this._$AH[l]),n||(n=!d(h)||h!==this._$AH[l]),h===A?t=A:t!==A&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h}n&&!e&&this.j(t)}j(t){t===A?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===A?void 0:t}}const I=s?s.emptyScript:\"\";class L extends k{constructor(){super(...arguments),this.type=4}j(t){t&&t!==A?this.element.setAttribute(this.name,I):this.element.removeAttribute(this.name)}}class z extends k{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=S(this,t,i,0))&&void 0!==s?s:A)===T)return;const e=this._$AH,o=t===A&&e!==A||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==A&&(e===A||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class Z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const j={O:o,P:n,A:l,C:1,M:V,L:M,R:v,D:S,I:R,V:k,H:L,N:z,U:H,F:Z},B=i.litHtmlPolyfillSupport;null==B||B(N,R),(null!==(t=i.litHtmlVersions)&&void 0!==t?t:i.litHtmlVersions=[]).push(\"2.8.0\");const D=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new R(i.insertBefore(u(),t),t,void 0,null!=s?s:{})}return l._$AI(t),l};export{j as _$LH,x as html,T as noChange,A as nothing,D as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","export const classPrefix = \"mfuns-player\"\n\n/** 项目链接 */\nexport const repositoryLink = \"https://github.com/Mfuns-cn/mfunsPlayer/tree/v3-beta\"\n\n/** 开发者列表 */\nexport const developers = [\n  { name: \"Minteea\", id: \"Minteea\", link: \"https://github.com/Minteea\" },\n  { name: \"鲁迪钨丝\", id: \"Rudiusu\", link: \"https://github.com/Rudiusu\" },\n]\n","const isMobile = /mobile/i.test(window.navigator.userAgent)\n\n/** 创建特定长度的填充数组 */\nexport const createArray = <T>(count: number, val: T) => Array.from({ length: count }, () => val)\n\n/** 获取全屏元素 */\nexport const getFullscreenElement = (): HTMLElement | null =>\n  document.fullscreenElement ||\n  (document as any).mozFullScreenElement ||\n  (document as any).webkitFullscreenElement ||\n  (document as any).msFullscreenElement ||\n  null\n\n/** 是否支持全屏 */\nexport const fullScreenEnabled: boolean =\n  document.fullscreenEnabled ||\n  (document as any).webkitFullscreenEnabled ||\n  (document as any).mozFullScreenEnabled ||\n  (document as any).msFullscreenEnabled ||\n  false\n\n/** 是否支持画中画 */\nexport const pictureInPictureEnabled = document.pictureInPictureEnabled\n\n/**\n * 将时间文本转换为秒数\n *\n * @param {String} str 冒号分隔的时间文本，支持全角冒号\n * @return {Number} second\n */\nexport const timeToSecond = (str: string): number => {\n  const arr = str.split(/[:：]/).slice(-3)\n  const sec = parseInt(arr[arr.length - 1]) || 0\n  const min = parseInt(arr[arr.length - 2]) || 0\n  const hour = parseInt(arr[arr.length - 3]) || 0\n  return sec + min * 60 + hour * 3600\n}\n\n/**\n * 防抖\n * @param {Function} fn 需要防抖处理的函数\n * @param {number} delay 防抖延迟执行时间\n * @param {boolean} immediate 是否立即执行一次\n */\nexport const debounce = (fn: (...args: unknown[]) => void, delay: number, immediate = false) => {\n  let timer: ReturnType<typeof setTimeout> | null = null\n  let isInvoke = false\n  return function (this: unknown, ...args: unknown[]) {\n    if (timer) clearTimeout(timer)\n    if (immediate && !isInvoke) {\n      fn.apply(this, args)\n      isInvoke = true\n    } else {\n      timer = setTimeout(() => {\n        fn.apply(this, args)\n        clearTimeout(timer!)\n        timer = null\n        isInvoke = false\n      }, delay)\n    }\n  }\n}\n\n/**\n * 节流\n * @param {Function} fn 需要节流处理的函数\n * @param {number} wait 执行一次后需要等待的时间\n */\nexport const throttle = (fn: (...args: unknown[]) => void, wait: number) => {\n  let timer: ReturnType<typeof setTimeout> | null = null\n  return function (this: unknown, ...args: unknown[]) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn.apply(this, args)\n        clearTimeout(timer!)\n        timer = null\n      }, wait)\n    }\n  }\n}\n\n// === 未完全重构 ==========\n\n/**\n * 将秒数转换为时间文本\n *\n * @param {Number} second\n * @param {Boolean} showHour\n * @return {String} 00:00 or 00:00:00\n */\nexport const secondToTime = (second: number, showHour = true) => {\n  second = second || 0\n  if (second === 0 || second === Infinity || second.toString() === \"NaN\") {\n    return \"00:00\"\n  }\n  const add0 = (num: number) => (num < 10 ? `0${num}` : `${num}`)\n  const hour = Math.floor(second / 3600)\n  const min = Math.floor((second - hour * 3600) / 60)\n  const sec = Math.floor(second - hour * 3600 - min * 60)\n  if (showHour) {\n    return (hour > 0 ? [hour, min, sec] : [min, sec]).map(add0).join(\":\")\n  }\n  return [hour * 60 + min, sec].map(add0).join(\":\")\n}\n\nexport const storage = {\n  set: (key: string, value: any) => {\n    localStorage.setItem(key, value)\n  },\n\n  get: (key: string) => localStorage.getItem(key),\n}\n\nexport const nameMap = {\n  dragStart: isMobile ? \"touchstart\" : \"mousedown\",\n  dragMove: isMobile ? \"touchmove\" : \"mousemove\",\n  dragEnd: isMobile ? \"touchend\" : \"mouseup\",\n}\nexport const colorLuminance = (hex: string, lum: number) => {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\")\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  }\n  lum = lum || 0\n\n  // convert to decimal and change luminosity\n  let rgb = \"#\"\n  let c\n  let i\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16)\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16)\n    rgb += `00${c}`.substr(c.length)\n  }\n\n  return rgb\n}\n\nexport const hex2Rgb = (str: string, opacity: number) => {\n  // 16进制转rgb\n  const reg = /^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$/\n  if (!reg.test(str)) {\n    return\n  }\n  let newStr = str.toLowerCase().replace(/#/g, \"\")\n  const len = newStr.length\n  if (len == 3) {\n    let t = \"\"\n    for (let i = 0; i < len; i++) {\n      t += newStr.slice(i, i + 1).concat(newStr.slice(i, i + 1))\n    }\n    newStr = t\n  }\n  const arr = [] // 将字符串分隔，两个两个的分隔\n  for (let i = 0; i < 6; i += 2) {\n    const s = newStr.slice(i, i + 2)\n    arr.push(parseInt(`0x${s}`))\n  }\n  if (opacity) return `rgba(${arr.join(\",\")},${opacity})`\n  return `rgb(${arr.join(\",\")})`\n}\nexport const rgb2Hex = (str: string) => {\n  // rgb转16进制\n  const reg = /^(rgb|RGB)/\n  if (!reg.test(str)) {\n    return\n  }\n  const arr = str.slice(4, str.length - 1).split(\",\")\n  let color = \"#\"\n  for (let i = 0; i < arr.length; i++) {\n    let t = Number(arr[i]).toString(16)\n    if (t == \"0\") {\n      // 如果为“0”的话，需要补0操作,否则只有5位数\n      t += \"0\"\n    }\n    color += t\n  }\n  return color\n}\nexport const color2Number = (color: string) => {\n  if (color[0] === \"#\") {\n    color = color.substr(1)\n  }\n  if (color.length === 3) {\n    color = `${color[0]}${color[0]}${color[1]}${color[1]}${color[2]}${color[2]}`\n  }\n  return (parseInt(color, 16) + 0x000000) & 0xffffff\n}\n\nexport const number2Color = (number: number) => `#${`00000${number.toString(16)}`.slice(-6)}`\nexport const initHash = () => {\n  let count = 100\n\n  return function (hashLength: number) {\n    if (!hashLength || typeof Number(hashLength) !== \"number\") {\n      return\n    }\n    const ar = [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"0\",\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ]\n    const hs = []\n    const hl = Number(hashLength)\n    const al = ar.length\n    for (let i = 0; i < hl; i++) {\n      hs.push(ar[Math.floor(Math.random() * al)])\n    }\n    count++\n    return `${hs.join(\"\")}${count}`\n  }\n}\nexport const randomFontsize = (range: number) => {\n  const allSize = [16, 18, 25, 36, 45, 64]\n  const random = Math.floor(Math.random() * range)\n  return allSize[random]\n}\n\nconst dateFormatMap = {\n  yyyy: (d: Date) => d.getFullYear().toString(),\n  yy: (d: Date) => d.getFullYear().toString().slice(-2),\n  MM: (d: Date) => (d.getMonth() + 1).toString().padStart(2, \"0\"),\n  dd: (d: Date) => d.getDate().toString().padStart(2, \"0\"),\n  HH: (d: Date) => d.getHours().toString().padStart(2, \"0\"),\n  mm: (d: Date) => d.getMinutes().toString().padStart(2, \"0\"),\n  ss: (d: Date) => d.getSeconds().toString().padStart(2, \"0\"),\n}\n\n// date: 时间对象, pattern: 日期格式\nexport const dateFormat = (date: Date, format: string) => {\n  return format.replace(/yy|yyyy|MM|dd|HH|mm|ss/g, (match) =>\n    dateFormatMap[match as keyof typeof dateFormatMap]?.(date)\n  )\n}\n","import { html, render } from \"lit-html\"\nimport { PlayerOptions } from \"@/types\"\nimport { classPrefix } from \"@/const\"\nimport MfunsPlayer from \"@/player\"\nimport Controller from \".\"\nimport { secondToTime } from \"@/utils\"\nimport Video from \"@/Video\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-progress-bar\">\n    <div class=\"${classPrefix}-progress-bar-buffered\"></div>\n    <div class=\"${classPrefix}-progress-bar-played\"></div>\n    <div class=\"${classPrefix}-progress-bar-thumb-track\">\n      <div class=\"${classPrefix}-progress-bar-thumb\"></div>\n    </div>\n    <div class=\"${classPrefix}-progress-bar-preview\">\n      <div class=\"${classPrefix}-progress-bar-thumbnail\"></div>\n      <div class=\"${classPrefix}-progress-bar-time\"></div>\n    </div>\n    <div class=\"${classPrefix}-progress-bar-tip\"></div>\n  </div>\n`\n\n/** 进度条 */\nexport default class ProgressBar {\n  controller: Controller\n  player: MfunsPlayer\n  container: HTMLElement\n  el: HTMLElement\n  $buffered: HTMLElement\n  $played: HTMLElement\n  $thumbTrack: HTMLElement\n  $thumb: HTMLElement\n  $preview: HTMLElement\n  $thumbnail: HTMLElement\n  $time: HTMLElement\n  $tip: HTMLElement\n  video: Video\n  /** 轨道长度 */\n  private trackLength = 0\n  /** 鼠标与轨道距离 */\n  private distance = 0\n  /** 滑块可滑动距离 */\n  private nMax = 0\n  /** 滑块轨道位置 */\n  private nLeft = 0\n  /** 滑动距离 */\n  get nLength(): number {\n    const nLength = this.distance - this.thumbTrackX\n    // 限制滑块移动位置\n    return nLength >= this.nMax ? this.nMax : nLength <= 0 ? 0 : nLength\n  }\n  /** 滑块轨道与总轨道距离差 */\n  get thumbTrackX(): number {\n    return (this.trackLength - this.nMax) / 2\n  }\n  /** 滑动值 */\n  get nValue(): number {\n    return (this.nLength / this.nMax) * this.video.duration\n  }\n  private isDragging = false\n  private isHover = false\n  private isActive = false\n\n  constructor(controller: Controller, options: PlayerOptions) {\n    this.controller = controller\n    this.player = controller.player\n    this.container = controller.$progress\n    render(template(), this.container)\n\n    this.el = this.container.querySelector(`.${classPrefix}-progress-bar`)!\n    this.$buffered = this.el.querySelector(`.${classPrefix}-progress-bar-buffered`)!\n    this.$played = this.el.querySelector(`.${classPrefix}-progress-bar-played`)!\n    this.$thumbTrack = this.el.querySelector(`.${classPrefix}-progress-bar-thumb-track`)!\n    this.$thumb = this.el.querySelector(`.${classPrefix}-progress-bar-thumb`)!\n    this.$preview = this.el.querySelector(`.${classPrefix}-progress-bar-preview`)!\n    this.$thumbnail = this.el.querySelector(`.${classPrefix}-progress-bar-thumbnail`)!\n    this.$time = this.el.querySelector(`.${classPrefix}-progress-bar-time`)!\n    this.$tip = this.el.querySelector(`.${classPrefix}-progress-bar-tip`)!\n\n    this.video = this.player.video\n\n    // 点按进度条事件\n    this.container.addEventListener(\"mousedown\", (e: MouseEvent) => {\n      const { clientX } = e\n      // 更新滑动条位置信息\n      this.trackLength = this.el.offsetWidth\n      this.nMax = this.$thumbTrack.offsetWidth || this.trackLength\n      this.nLeft = this.container.getBoundingClientRect().left\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft\n      this.setBarPlayed(this.nValue)\n      this.el.classList.add(`${classPrefix}-progress-bar-dragging`)\n      this.isDragging = true\n      document.addEventListener(\"mousemove\", dragMoveEvent)\n      document.addEventListener(\"mouseup\", dragEndEvent)\n    })\n\n    // 滑动进度条事件\n    const dragMoveEvent = (e: MouseEvent) => {\n      // 鼠标X位置\n      const { clientX } = e\n      // 鼠标移动时取消默认行为，避免选中其他元素或文字\n      e.preventDefault()\n      e.stopPropagation()\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft\n      this.setBarPlayed(this.nValue)\n      // 更新指针显示\n      this.updateTip()\n      window.getSelection()?.removeAllRanges()\n    }\n\n    // 松开进度条事件\n    const dragEndEvent = (e: MouseEvent) => {\n      e.stopPropagation()\n      window.getSelection()?.removeAllRanges()\n      document.removeEventListener(\"mousemove\", dragMoveEvent)\n      document.removeEventListener(\"mouseup\", dragEndEvent)\n      this.el.classList.remove(`${classPrefix}-progress-bar-dragging`)\n      this.isDragging = false\n      if (!this.isHover) this.setActive(false)\n      // 跳转\n      this.player.seek(this.nValue)\n      this.player.play()\n    }\n\n    // 鼠标离开进度条区域\n    this.container.addEventListener(\"mouseenter\", () => {\n      this.isHover = true\n      if (!this.isDragging) this.updateTip()\n    })\n    // 鼠标在进度条区域内移动\n    this.container.addEventListener(\"mousemove\", (e: MouseEvent) => {\n      // 如果进度条处于拖动状态，则无需重复显示进度条指针\n      if (this.isDragging) return\n      // 鼠标X位置\n      const { clientX } = e\n      // 更新滑动条位置信息\n      this.trackLength = this.el.offsetWidth\n      this.nMax = this.$thumbTrack.offsetWidth || this.trackLength\n      this.nLeft = this.container.getBoundingClientRect().left\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft\n      // 更新指针显示\n      this.updateTip()\n    })\n    // 鼠标离开进度条区域\n    this.container.addEventListener(\"mouseleave\", () => {\n      this.isHover = false\n      if (!this.isDragging) this.setActive(false)\n    })\n\n    // 视频播放时间更新\n    this.player.on(\"timeupdate\", (time) => {\n      if (!this.isDragging) this.setBarPlayed(time)\n    })\n\n    // 视频缓存更新\n    this.player.on(\"progress\", (time) => {\n      this.setBarBuffered(time)\n    })\n  }\n\n  /** 设置已播放进度条位置 */\n  public setBarPlayed(time: number) {\n    // 计算进度比值\n    const per = time / this.video.duration || 0\n    // 修改滑块位置\n    this.$thumb.style.left = `${per * 100}%`\n    // 修改滑动痕迹宽度\n    this.$played.style.width = `${per * 100}%`\n  }\n\n  /** 设置已播放进度条位置 */\n  public setBarBuffered(time: number) {\n    // 计算进度比值\n    const per = time / this.video.duration || 0\n    // 修改滑动痕迹宽度\n    this.$buffered.style.width = `${per * 100}%`\n  }\n\n  /** 设置进度条活跃状态 */\n  private setActive(flag: boolean) {\n    this.isActive = flag\n    this.el.classList.toggle(`${classPrefix}-progress-bar-active`, flag)\n    if (flag) {\n      this.controller.setControl(true)\n    } else {\n      this.controller.setControl(false)\n    }\n  }\n\n  /** 更新指针位置 */\n  public updateTip() {\n    if (!this.isActive) this.setActive(true)\n    let per = this.distance / this.trackLength\n    per = per >= 1 ? 1 : per <= 0 ? 0 : per\n    this.$tip.style.left = `${per * 100}%`\n    this.$preview.style.left = `${per * 100}%`\n    this.$time.innerText = secondToTime(this.nValue)\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-fullscreen\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-fullscreen\"></i>\n      <i class=\"${classPrefix}-controller-icon mp-icon-fullscreen-exit\"></i>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">进入全屏</div>\n  </div>\n`\n\nexport default class ButtonFullscreen {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.player.on(\"fullscreen\", () => {\n      this.el.classList.add(\"state-fullscreen\")\n      this.$tooltip.innerText = \"退出全屏\"\n    })\n    this.player.on(\"fullscreen_exit\", () => {\n      this.el.classList.remove(\"state-fullscreen\")\n      this.$tooltip.innerText = \"进入全屏\"\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      if (this.player.isFullscreen) {\n        this.player.exitFullscreen()\n      } else {\n        this.player.fullscreen()\n      }\n    })\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-pip\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-pip\"></i>\n      <i class=\"${classPrefix}-controller-icon mp-icon-pip-exit\"></i>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">画中画</div>\n  </div>\n`\n\nexport default class ButtonPip {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.player.on(\"pip\", () => {\n      this.el.classList.add(\"state-pip\")\n      this.$tooltip.innerText = \"退出画中画\"\n    })\n    this.player.on(\"pip_exit\", () => {\n      this.el.classList.remove(\"state-pip\")\n      this.$tooltip.innerText = \"画中画\"\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      if (this.player.isPip) {\n        this.player.exitPip()\n      } else {\n        this.player.pip()\n      }\n    })\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-play state-paused\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-play\"></i>\n      <i class=\"${classPrefix}-controller-icon mp-icon-pause\"></i>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">播放</div>\n  </div>\n`\n\nexport default class ButtonPlay {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.player.on(\"pause\", () => {\n      this.el.classList.add(\"state-paused\")\n      this.$tooltip.innerText = \"播放\"\n    })\n    this.player.on(\"play\", () => {\n      this.el.classList.remove(\"state-paused\")\n      this.$tooltip.innerText = \"暂停\"\n    })\n    this.player.on(\"part\", () => {\n      this.el.classList.add(\"state-paused\")\n      this.$tooltip.innerText = \"播放\"\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      this.player.toggle()\n    })\n  }\n}\n","import { html, render } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\nimport MfunsPlayer from \"@/player\"\nimport { secondToTime, timeToSecond } from \"@/utils\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-time\">\n    <div class=\"${classPrefix}-controller-time-label\">\n      <span class=\"${classPrefix}-controller-time-current\">00:00</span>\n      <span>/</span>\n      <span class=\"${classPrefix}-controller-time-total\">00:00</span>\n    </div>\n    <input class=\"${classPrefix}-controller-time-input mp-input\" />\n  </div>\n`\n\nexport default class LabelTime {\n  player: MfunsPlayer\n  el: HTMLElement\n  $label: HTMLElement\n  $current: HTMLElement\n  $total: HTMLElement\n  $input: HTMLInputElement\n  /** 点按时的值 */\n  private valueBeforeEdited = \"\"\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-time`)!\n    this.$label = fragment.querySelector(`.${classPrefix}-controller-time-label`)!\n    this.$current = fragment.querySelector(`.${classPrefix}-controller-time-current`)!\n    this.$total = fragment.querySelector(`.${classPrefix}-controller-time-total`)!\n    this.$input = fragment.querySelector(`.${classPrefix}-controller-time-input`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  init() {\n    this.player.on(\"timeupdate\", (time) => {\n      this.$current.innerText = secondToTime(time)\n    })\n    this.player.on(\"durationchange\", (time) => {\n      this.$total.innerText = secondToTime(time)\n    })\n    this.$label.addEventListener(\"click\", () => {\n      this.el.classList.add(\"state-input\")\n      this.$input.value = secondToTime(this.player.time)\n      this.valueBeforeEdited = this.$input.value\n      this.$input.focus()\n    })\n    this.$input.addEventListener(\"blur\", () => {\n      const inputVal = this.$input.value\n      if (inputVal != this.valueBeforeEdited) {\n        // 如果输入值有改动，则跳转\n        this.player.seek(timeToSecond(inputVal))\n        this.player.play()\n      }\n      this.exitInput()\n    })\n    this.$input.addEventListener(\"keydown\", (event) => {\n      const e = event || window.event\n      if (e.keyCode == 13) {\n        this.player.seek(timeToSecond(this.$input.value))\n        this.player.play()\n        this.exitInput()\n      }\n      if (e.keyCode == 27) {\n        this.exitInput()\n      }\n    })\n  }\n\n  /** 退出输入模式 */\n  exitInput() {\n    this.el.classList.remove(\"state-input\")\n    this.$input.value = \"\"\n    this.valueBeforeEdited = \"\"\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-loop\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-loop\"></i>\n      <i class=\"${classPrefix}-controller-icon mp-icon-loop-off\"></i>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">洗脑循环</div>\n  </div>\n`\n\nexport default class ButtonLoop {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.player.on(\"change:loop\", (flag) => {\n      this.el.classList.toggle(\"state-loop\", flag)\n      this.$tooltip.innerText = flag ? \"关闭洗脑循环\" : \"洗脑循环\"\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      if (this.player.video.loop) {\n        this.player.video.setLoop(false)\n      } else {\n        this.player.video.setLoop(true)\n      }\n    })\n  }\n}\n","import { html, render } from \"lit-html\"\nimport { createArray, nameMap } from \"@/utils\"\nimport { classPrefix } from \"@/const\"\n\nconst template = ({ divider }: { divider: number }) => html` <div\n  class=\"${classPrefix}-slider ${classPrefix}-slider-horizontal\"\n  style=\"position: relative; width: 100%; height: 100%\"\n>\n  <div\n    class=\"${classPrefix}-slider-track\"\n    style=\"\n      position: absolute;\n      width: 100%;\n      top: 50%;\n      transform: translateY(-50%);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    \"\n  >\n    <div class=\"${classPrefix}-slider-bar\" style=\"position: absolute; left: 0; height: 100%\"></div>\n    <div class=\"${classPrefix}-slider-thumb-track\" style=\"height: 0px\">\n      <div\n        class=\"${classPrefix}-slider-thumb\"\n        style=\"position: absolute; transform: translate(-50%, -50%)\"\n      ></div>\n      ${divider\n        ? html`\n            <ul class=\"${classPrefix}-slider-divider\">\n              ${createArray(divider, html`<li class=\"${classPrefix}-slider-divider-dot\"></li>`)}\n            </ul>\n          `\n        : \"\"}\n    </div>\n  </div>\n</div>`\n\ninterface SliderOptions {\n  /** 挂载容器 */\n  container: HTMLElement\n  /** 最小值 */\n  min: number\n  /** 最大值 */\n  max: number\n  /** 步长(若不填或为0，则没有步长限制) */\n  step?: number\n  /** 分割线 */\n  divider?: number | boolean\n  /** 默认值(不填的情况下默认值为0) */\n  value?: number\n  /** 数值更改时触发 */\n  onChange?: (value: number) => void\n  /** 拖动引发数值更改时触发 */\n  onDrag?: (value: number) => void\n  /** 开始拖动时触发 */\n  onDragStart?: (value: number) => void\n  /** 结束拖动时触发 */\n  onDragEnd?: (value: number) => void\n}\n\n/** 横向滑动条 */\nexport class Slider implements SliderOptions {\n  readonly container: HTMLElement\n  readonly min: number\n  readonly max: number\n  /** 步长 */\n  readonly step: number\n  /** 分割线 */\n  readonly divider: number\n  /** 数值 */\n  value: number\n  onChange?: (value: number) => void\n  onDragStart?: (value: number) => void\n  onDragEnd?: (value: number) => void\n  onDrag?: (value: number) => void\n\n  // 部件\n  el: HTMLElement\n\n  $track: HTMLElement\n\n  $bar: HTMLElement\n\n  $thumbTrack: HTMLElement\n\n  $thumb: HTMLElement\n\n  constructor({\n    container,\n    min,\n    max,\n    step,\n    divider = 0,\n    value = 0,\n    onChange,\n    onDragStart,\n    onDragEnd,\n    onDrag,\n  }: SliderOptions) {\n    this.container = container\n    this.min = min\n    this.max = max\n    this.step = step || 0\n    this.divider = divider ? (typeof divider === \"boolean\" ? this.step : divider) : 0\n    this.value = isNaN(value) ? value : Number(value)\n    this.onChange = onChange\n    this.onDragStart = onDragStart\n    this.onDragEnd = onDragEnd\n    this.onDrag = onDrag\n\n    render(template({ divider: this.divider }), container)\n\n    this.el = this.container.querySelector(`.${classPrefix}-slider`)!\n    this.$track = this.el.querySelector(`.${classPrefix}-slider-track`)! // 滑动条轨道\n    this.$bar = this.$track.querySelector(`.${classPrefix}-slider-bar`)! // 滑动条痕迹\n    this.$thumbTrack = this.$track.querySelector(`.${classPrefix}-slider-thumb-track`)! // 滑块轨道\n    this.$thumb = this.$track.querySelector(`.${classPrefix}-slider-thumb`)! // 滑块\n\n    // 滑动条事件\n    this.el.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      const e: MouseEvent = event\n      // 鼠标X位置\n      const { clientX } = e\n      // 滑块长度\n      const trackLength = this.$track.offsetWidth\n      // 滑块可滑动距离\n      let nMax = this.$thumbTrack.offsetWidth\n      nMax = nMax || trackLength\n      // 滑块轨道与总轨道距离差\n      const thumbTrackX = (trackLength - nMax) / 2\n      // 滑动条位置\n      const nLeft = this.el.getBoundingClientRect().left\n      // 计算滑块位置\n      let nLength = clientX - nLeft - thumbTrackX\n      // 限制滑块移动位置\n      nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength\n      const value = this.step\n        ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step + this.min\n        : (nLength / nMax) * (this.max - this.min) + this.min\n      // 开始滑动事件\n      this.onDragStart?.(value)\n      // 监测数据更新并执行函数\n      if (this.value != value) {\n        this.drag(value)\n      }\n\n      const mousemoveEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event\n        // 鼠标X位置\n        const { clientX } = e\n        // 鼠标移动时取消默认行为，避免选中其他元素或文字\n        e.preventDefault()\n        e.stopPropagation()\n        // 获取鼠标移动后滑块应该移动到的位置\n        let nLength = clientX - nLeft - thumbTrackX\n        // 限制滑块移动位置\n        nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength\n\n        const value = this.step\n          ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step +\n            this.min\n          : (nLength / nMax) * (this.max - this.min) + this.min\n        // 监测数据更新并执行函数\n        if (this.value != value) {\n          this.drag(value)\n        }\n        window.getSelection()?.removeAllRanges()\n      }\n\n      const removeEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event\n        e.stopPropagation()\n        window.getSelection()?.removeAllRanges()\n        document.removeEventListener(\"mousemove\", mousemoveEvent)\n        document.removeEventListener(\"mouseup\", removeEvent)\n        this.onDragEnd?.(value)\n      }\n\n      document.addEventListener(\"mousemove\", mousemoveEvent)\n      document.addEventListener(\"mouseup\", removeEvent)\n    })\n\n    // 设置滑块初始位置\n    this.setValue(this.value)\n  }\n\n  /** 设置滑动条值 */\n  public setValue(value: number) {\n    this.value = value <= this.min ? this.min : value >= this.max ? this.max : value\n    // 计算滑块位置\n    const per = (this.value - this.min) / (this.max - this.min)\n    // 修改滑块位置\n    this.$thumb.style.left = `${per * 100}%`\n    // 修改滑动痕迹高度\n    this.$bar.style.width = `${per * 100}%`\n    // 触发数据更改事件\n    this.onChange?.(this.value)\n  }\n\n  /** 拖动滑动条到特定的值 */\n  public drag(value: number) {\n    this.setValue(value)\n    // 触发拖动事件\n    this.onDrag?.(this.value)\n  }\n}\n","import { html, render } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div\n    class=\"${classPrefix}-slider ${classPrefix}-slider-vertical\"\n    style=\"position: relative; width: 100%; height: 100%\"\n  >\n    <div\n      class=\"${classPrefix}-slider-track\"\n      style=\"\n        position: absolute;\n        height: 100%;\n        left: 50%;\n        transform: translateX(-50%);\n        display: flex;\n        justify-content: center;\n        align-items: center\n      \"\n    >\n      <div\n        class=\"${classPrefix}-slider-bar\"\n        style=\"position: absolute; bottom: 0; width: 100%\"\n      ></div>\n      <div class=\"${classPrefix}-slider-thumb-track\" style=\"width: 0px\">\n        <div\n          class=\"${classPrefix}-slider-thumb\"\n          style=\"position: absolute; transform: translate(-50%, -50%)\"\n        ></div>\n      </div>\n    </div>\n  </div>\n`\n\ninterface SliderVerticalOptions {\n  /** 挂载容器 */\n  container: HTMLElement\n  /** 最小值 */\n  min: number\n  /** 最大值 */\n  max: number\n  /** 步长(若不填或为0，则没有步长限制) */\n  step?: number\n  /** 默认值(不填的情况下默认值为0) */\n  value?: number\n  /** 数值更改时触发 */\n  onChange?: (value: number) => void\n  /** 拖动引发数值更改时触发 */\n  onDrag?: (value: number) => void\n  /** 开始拖动时触发 */\n  onDragStart?: (value: number) => void\n  /** 结束拖动时触发 */\n  onDragEnd?: (value: number) => void\n}\n\n/** 横向滑动条 */\nexport class SliderVertical implements SliderVerticalOptions {\n  readonly container: HTMLElement\n  readonly min: number\n  readonly max: number\n  /** 步长 */\n  readonly step: number\n  /** 数值 */\n  value: number\n  onChange?: (value: number) => void\n  onDragStart?: (value: number) => void\n  onDragEnd?: (value: number) => void\n  onDrag?: (value: number) => void\n  // 部件\n  el: HTMLElement\n  $track: HTMLElement\n  $bar: HTMLElement\n  $thumbTrack: HTMLElement\n  $thumb: HTMLElement\n\n  constructor({\n    container,\n    min,\n    max,\n    step,\n    value = 0,\n    onChange,\n    onDragStart,\n    onDragEnd,\n    onDrag,\n  }: SliderVerticalOptions) {\n    this.container = container\n    this.min = min\n    this.max = max\n    this.step = step || 0\n    this.value = isNaN(value) ? value : Number(value)\n    this.onChange = onChange\n    this.onDragStart = onDragStart\n    this.onDragEnd = onDragEnd\n    this.onDrag = onDrag\n\n    render(template(), container)\n\n    this.el = this.container.querySelector(`.${classPrefix}-slider`)!\n    this.$track = this.el.querySelector(`.${classPrefix}-slider-track`)! // 滑动条轨道\n    this.$bar = this.$track.querySelector(`.${classPrefix}-slider-bar`)! // 滑动条痕迹\n    this.$thumbTrack = this.$track.querySelector(`.${classPrefix}-slider-thumb-track`)! // 滑块轨道\n    this.$thumb = this.$track.querySelector(`.${classPrefix}-slider-thumb`)! // 滑块\n\n    // 滑动条事件\n    // 点击鼠标事件\n    this.el.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      const e: MouseEvent = event\n      // 鼠标Y位置\n      const { clientY } = e\n      // 滑块长度\n      const trackLength = this.$track.offsetHeight\n      // 滑块可滑动距离\n      let nMax = this.$thumbTrack.offsetHeight\n      nMax = nMax || trackLength\n      // 滑块轨道与总轨道距离差\n      const thumbTrackY = (trackLength - nMax) / 2\n      // 滑动条位置\n      const nTop = this.el.getBoundingClientRect().top\n      // 计算滑块位置\n      let nLength = nMax - (clientY - nTop - thumbTrackY)\n      // 限制滑块移动位置\n      nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength\n      const value = this.step\n        ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step + this.min\n        : (nLength / nMax) * (this.max - this.min) + this.min\n      // 开始滑动事件\n      this.onDragStart?.(value)\n      // 监测数据更新并执行函数\n      if (this.value != value) {\n        this.drag(value)\n      }\n\n      const mousemoveEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event\n        // 鼠标X位置\n        const { clientY } = e\n        // 鼠标移动时取消默认行为，避免选中其他元素或文字\n        e.preventDefault()\n        e.stopPropagation()\n        // 获取鼠标移动后滑块应该移动到的位置\n        let nLength = nMax - (clientY - nTop - thumbTrackY)\n        // 限制滑块移动位置\n        nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength\n\n        const value = this.step\n          ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step +\n            this.min\n          : (nLength / nMax) * (this.max - this.min) + this.min\n        // 监测数据更新并执行函数\n        if (this.value != value) {\n          this.drag(value)\n        }\n        window.getSelection()?.removeAllRanges()\n      }\n      const removeEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event\n        e.stopPropagation()\n        window.getSelection()?.removeAllRanges()\n        document.removeEventListener(\"mousemove\", mousemoveEvent)\n        document.removeEventListener(\"mouseup\", removeEvent)\n        this.onDragEnd?.(value)\n      }\n\n      document.addEventListener(\"mousemove\", mousemoveEvent)\n      document.addEventListener(\"mouseup\", removeEvent)\n    })\n    // 设置滑块初始位置\n    this.setValue(this.value)\n  }\n\n  /** 设置滑动条值 */\n  setValue(value: number) {\n    // this.value = value <= this.min ? this.min : value >= this.max ? this.max : value;\n    this.value = Math.max(Math.min(value, this.max), this.min)\n    // 计算滑块位置\n    const per = (this.value - this.min) / (this.max - this.min)\n    // 修改滑块位置\n    this.$thumb.style.top = `${(1 - per) * 100}%`\n    // 修改滑动痕迹高度\n    this.$bar.style.height = `${Math.max(Math.min(per, 1), 0) * 100}%`\n    // 执行相应函数\n    this.onChange?.(value)\n  }\n\n  /** 拖动滑动条到特定的值 */\n  private drag(value: number) {\n    this.setValue(value)\n    // 触发拖动事件\n    this.onDrag?.(this.value)\n  }\n}\n","import { html, render, TemplateResult } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\n\nconst templateWrap = ({\n  list,\n  template,\n}: {\n  list: PickerOptionsItem[]\n  template?: PickerItemTemplate\n}) => html`\n  <ul class=\"${classPrefix}-picker\">\n    ${list.map(\n      (item, index) => html`\n        <li class=\"${classPrefix}-picker-item\" data-value=\"${item.value}\">\n          ${template?.(item, index) || item.label || item.value}\n        </li>\n      `\n    )}\n  </ul>\n`\n\n/** 选择器函数 */\ntype PickerItemTemplate = (item: PickerOptionsItem, index?: number) => string | TemplateResult\n\ninterface PickerOptionsItem {\n  value: string | number\n  label?: string\n  disabled?: boolean\n  [key: string]: any\n}\n\ninterface PickerOptions {\n  /** 挂载容器 */\n  container: HTMLElement\n  /** 选择列表 */\n  list: PickerOptionsItem[]\n  /** 选择项标签模板 */\n  template?: PickerItemTemplate\n  /** 默认值(不填的情况下默认值为null) */\n  value?: string | number | null\n  /** 值更改时触发 */\n  onChange?: (value: string | number | null) => void\n  /** 选择某一项时触发 */\n  onPick?: (value: string | number | null) => void\n  /** 相等条件 */\n  condition?: (item: string, value: string | number | null) => boolean\n}\n\n/** 单选选择器 */\nexport class Picker implements PickerOptions {\n  readonly container: HTMLElement\n\n  readonly template?: PickerItemTemplate\n\n  list: PickerOptionsItem[]\n\n  /** 已选值 */\n  value: string | number | null\n\n  onChange?: (value: string | number | null) => void\n\n  onPick?: (value: string | number | null) => void\n\n  el!: HTMLElement\n\n  /** 相等条件 */\n  condition?: (item: string, value: string | number | null) => boolean\n\n  /** 选择项标签集合 */\n  private $items!: NodeListOf<HTMLElement>\n\n  constructor({ container, value, onChange, onPick, list, template, condition }: PickerOptions) {\n    this.container = container\n    this.list = list\n    this.value = value ?? null\n    this.onChange = onChange // 更新数据时需要执行的函数\n    this.onPick = onPick // 更新数据时需要执行的函数\n    this.template = template\n    this.condition = condition\n    this.reload()\n  }\n\n  /** 重载，一般用于列表项更改 */\n  public reload(value?: string) {\n    render(templateWrap({ list: this.list, template: this.template }), this.container)\n    this.el = this.container.querySelector(`.${classPrefix}-picker`)!\n    this.$items = this.el.querySelectorAll(`.${classPrefix}-picker-item`) // 标签集合\n    this.$items.forEach((item) => {\n      item.addEventListener(\"click\", () => {\n        this.pick(item.getAttribute(\"data-value\"))\n      })\n    })\n    this.setValue(value ?? this.value)\n  }\n\n  /** 设置值 */\n  public setValue(value: string | number | null) {\n    this.$items.forEach((n, i) => {\n      if (\n        this.condition\n          ? this.condition(n.getAttribute(\"data-value\")!, value)\n          : n.getAttribute(\"data-value\") == value\n      ) {\n        n.classList.add(\"state-picked\")\n      } else {\n        n.classList.remove(\"state-picked\")\n      }\n    })\n    this.value = value\n    this.onChange?.(value)\n  }\n\n  /** 点选一个选项 */\n  public pick(value: string | null) {\n    this.setValue(value)\n    this.onPick?.(value)\n  }\n}\n","import { html, render, TemplateResult } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\n\nconst templateWrap = ({\n  list,\n  template,\n}: {\n  list: PickerOptionsItem[]\n  template?: PickerItemTemplate\n}) => html`\n  <ul class=\"${classPrefix}-picker\">\n    ${list.map(\n      (item, index) => html`\n        <li class=\"${classPrefix}-picker-item\" data-value=\"${item.value}\">\n          ${template?.(item, index) || item.label || item.value}\n        </li>\n      `\n    )}\n  </ul>\n`\n\n/** 选择器函数 */\ntype PickerItemTemplate = (item: PickerOptionsItem, index?: number) => string | TemplateResult\n\ninterface PickerOptionsItem {\n  value: string\n  label?: string\n  disabled?: boolean\n  [key: string]: any\n}\n\ninterface MultiPickerOptions {\n  /** 绑定的dom对象 */\n  container: HTMLElement\n  /** 选择列表 */\n  list: PickerOptionsItem[]\n  /** 选择项标签模板 */\n  template?: PickerItemTemplate\n  /** 默认值(不填的情况下默认值为[]) */\n  value?: string[]\n  /** 值更改时触发 */\n  onChange?: (value: string[]) => void\n  /** 选择/取消选择某一项时触发 */\n  onToggle?: (value: string, flag: boolean) => void\n}\n\n/** 多项选择器 */\nexport class MultiPicker implements MultiPickerOptions {\n  readonly container: HTMLElement\n\n  readonly template?: PickerItemTemplate\n\n  list: PickerOptionsItem[]\n\n  valueSet: Set<string>\n\n  /** 已选值 */\n  get value() {\n    return [...this.valueSet]\n  }\n\n  onChange?: (value: string[]) => void\n\n  onToggle?: (value: string, flag: boolean) => void\n\n  el!: HTMLElement\n\n  /** 选择项标签集合 */\n  private $items!: NodeListOf<HTMLElement>\n\n  constructor({ container, value = [], list, onChange, onToggle }: MultiPickerOptions) {\n    this.container = container\n    this.list = list\n    this.valueSet = new Set(value)\n    this.onChange = onChange // 更新数据时需要执行的函数\n    this.onToggle = onToggle // 更新数据时需要执行的函数\n    this.reload()\n  }\n\n  /** 重载，一般用于列表项更改 */\n  public reload(value?: string[]) {\n    render(templateWrap({ list: this.list, template: this.template }), this.container)\n    this.el = this.container.querySelector(`.${classPrefix}-picker`)!\n    this.$items = this.el.querySelectorAll(`.${classPrefix}-picker-item`) // 标签集合\n    this.$items.forEach((item) => {\n      item.addEventListener(\"click\", () => {\n        this.toggle(item.getAttribute(\"data-value\")!)\n      })\n    })\n    this.setValue(value ?? this.value)\n  }\n\n  /** 设置值 */\n  public setValue(value: string[]) {\n    this.valueSet = new Set(value)\n    this.$items.forEach((n, i) => {\n      if (this.valueSet.has(n.getAttribute(\"data-value\")!)) {\n        n.classList.add(\"state-picked\")\n      } else {\n        n.classList.remove(\"state-picked\")\n      }\n    })\n    this.onChange?.(value)\n  }\n\n  /** 切换一个选项的选择状态 */\n  public toggle(value: string, flag?: boolean) {\n    const b = flag == null ? !this.valueSet.has(value) : flag\n    if (b) {\n      this.valueSet.add(value)\n    } else {\n      this.valueSet.delete(value)\n    }\n    this.$items.forEach((n, i) => {\n      if (n.getAttribute(\"data-value\") == value) {\n        n.classList.toggle(\"state-picked\", b)\n      }\n    })\n    this.onChange?.(this.value)\n    this.onToggle?.(value, b)\n  }\n}\n","import { html, render } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\n\nconst templateWrap = ({ label }: { label?: string }) => html`\n  <div class=\"${classPrefix}-checkbox\">\n    <div class=\"${classPrefix}-checkbox-icon\"></div>\n    <div class=\"${classPrefix}-checkbox-label\">${label}</div>\n  </div>\n`\n\ninterface CheckboxOptions {\n  /** 挂载容器 */\n  container: HTMLElement\n  /** 标签 */\n  label?: string\n  /** 不可点选 */\n  disabled?: boolean\n  /** 默认值(不填的情况下默认值为false) */\n  value?: boolean\n  /** 值更改时触发 */\n  onChange?: (value: boolean) => void\n  /** 切换状态时触发 */\n  onToggle?: (value: boolean) => void\n}\n\n/** 开关 */\nexport class Checkbox implements CheckboxOptions {\n  readonly container: HTMLElement\n\n  onChange?: (value: boolean) => void\n\n  onToggle?: (value: boolean) => void\n\n  label?: string\n\n  /** 当前值 */\n  value: boolean\n\n  el: HTMLElement\n\n  constructor({ container, value = false, onChange, onToggle, label }: CheckboxOptions) {\n    this.container = container\n    this.value = value\n    this.onChange = onChange // 更新数据时需要执行的函数\n    this.onToggle = onToggle\n    this.label = label\n    // 注入模板\n    render(templateWrap({ label: this.label }), this.container)\n\n    this.el = this.container.querySelector(`.${classPrefix}-checkbox`)!\n    this.el.addEventListener(\"click\", () => {\n      this.toggle()\n    })\n\n    this.setValue(this.value)\n  }\n\n  /** 设置开关状态 */\n  public setValue(value: boolean) {\n    this.value = value\n    this.el.classList.toggle(\"state-checked\", value)\n    this.onChange?.(value)\n  }\n\n  /** 点按开关 */\n  public toggle(value = !this.value) {\n    this.setValue(value)\n    this.onToggle?.(value)\n  }\n}\n","import { html, render } from \"lit-html\"\nimport { SliderVertical } from \"@/ui/components\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-volume\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-volume\"></i>\n      <i class=\"${classPrefix}-controller-icon mp-icon-volume-off\"></i>\n    </div>\n\n    <div class=\"${classPrefix}-controller-panel-wrap\">\n      <div class=\"${classPrefix}-controller-panel\">\n        <div class=\"${classPrefix}-controller-volume-text\">0</div>\n        <div class=\"${classPrefix}-controller-volume-slider\"></div>\n      </div>\n    </div>\n  </div>\n`\n\nexport default class ButtonVolume {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $slider: HTMLElement\n  $text: HTMLElement\n  slider!: SliderVertical\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$slider = fragment.querySelector(`.${classPrefix}-controller-volume-slider`)!\n    this.$text = fragment.querySelector(`.${classPrefix}-controller-volume-text`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.slider = new SliderVertical({\n      container: this.$slider,\n      min: 0,\n      max: 100,\n      step: 1,\n      value: this.player.video.el.volume * 100,\n      onChange: (value) => {\n        this.$text.innerText = value.toString()\n      },\n      onDrag: (value) => {\n        this.player.setVolume(value / 100)\n      },\n      onDragStart: (value) => {\n        if (this.player.video.el.muted && value != 0) {\n          this.player.mute(false)\n        }\n        this.el.classList.add(\"state-control\")\n        this.player.controller.setControl(true)\n      },\n      onDragEnd: () => {\n        this.el.classList.remove(\"state-control\")\n        this.player.controller.setControl(false)\n      },\n    })\n    this.player.on(\"volumechange\", (value: number, muted: boolean) => {\n      if (muted) {\n        this.el.classList.add(\"state-muted\")\n        this.slider.setValue(0)\n      } else {\n        this.el.classList.remove(\"state-muted\")\n        this.slider.setValue(Math.round(value * 100))\n      }\n      if (value == 0) {\n        this.el.classList.add(\"state-muted\")\n      }\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      if (this.player.video.el.muted || this.player.video.el.volume == 0) {\n        if (this.player.video.el.volume == 0) {\n          this.player.video.el.volume = 0.1\n        }\n        this.player.mute(false)\n      } else {\n        this.player.mute(true)\n      }\n    })\n  }\n}\n","import { html, render } from \"lit-html\"\nimport { Picker, Slider, Checkbox } from \"@/ui/components\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\nimport { PlayerOptions } from \"@/types\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-settings\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-settings\"></i>\n    </div>\n    <div class=\"${classPrefix}-controller-panel-wrap\">\n      <div class=\"${classPrefix}-controller-panel ${classPrefix}-controller-panel-settings\">\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">播放倍速</div>\n          <div class=\"${classPrefix}-settings-rate-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">视频比例</div>\n          <div class=\"${classPrefix}-settings-scale-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">界面设置</div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-settings-solid-checkbox\"></div>\n          <div class=\"${classPrefix}-settings-showPrevButton-checkbox\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n`\n\nexport default class ButtonSettings {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n\n  $ratePicker: HTMLElement\n  $scalePicker: HTMLElement\n  $solidCheckbox: HTMLElement\n  $showPrevButtonCheckbox: HTMLElement\n\n  pickerRate!: Picker\n  pickerScale!: Picker\n  checkboxSolid!: Checkbox\n  checkboxShowPrevButton!: Checkbox\n\n  constructor(player: MfunsPlayer, container: HTMLElement, options: PlayerOptions) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = this.el.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n\n    this.$ratePicker = this.el.querySelector(`.${classPrefix}-settings-rate-picker`)!\n    this.$scalePicker = this.el.querySelector(`.${classPrefix}-settings-scale-picker`)!\n    this.$solidCheckbox = this.el.querySelector(`.${classPrefix}-settings-solid-checkbox`)!\n    this.$showPrevButtonCheckbox = this.el.querySelector(\n      `.${classPrefix}-settings-showPrevButton-checkbox`\n    )!\n\n    this.init(options)\n    container.appendChild(fragment)\n  }\n\n  private init(options: PlayerOptions) {\n    this.pickerRate = new Picker({\n      container: this.$ratePicker,\n      list: [\n        { value: 0.5, label: \"0.5\" },\n        { value: 0.75, label: \"0.75\" },\n        { value: 1, label: \"1.0\" },\n        { value: 1.25, label: \"1.25\" },\n        { value: 1.5, label: \"1.5\" },\n        { value: 2, label: \"2.0\" },\n      ],\n      value: 1,\n      onPick: (value) => {\n        this.player.setPlaybackRate(Number(value))\n      },\n    })\n    this.player.on(\"ratechange\", (rate: number) => {\n      this.pickerRate.setValue(rate)\n    })\n\n    this.pickerScale = new Picker({\n      container: this.$scalePicker,\n      list: [{ value: \"\", label: \"自动\" }, { value: \"16:9\" }, { value: \"4:3\" }],\n      value: \"\",\n      onPick: (value) => {\n        this.player.video.setRatio(\n          value ? ((value as string).split(\":\").map((v) => Number(v)) as [number, number]) : null\n        )\n      },\n    })\n    this.player.on(\"change:aspectRatio\", (ratio) => {\n      this.pickerRate.setValue(ratio ? ratio.join(\":\") : \"\")\n    })\n\n    if (options.feature?.solid) {\n      this.checkboxSolid = new Checkbox({\n        container: this.$solidCheckbox,\n        label: \"固定控制栏\",\n        onToggle: (value) => {\n          this.player.mode.solid(value)\n        },\n      })\n    }\n    this.checkboxShowPrevButton = new Checkbox({\n      container: this.$showPrevButtonCheckbox,\n      label: \"显示上一P按钮（多P下生效）\",\n      onToggle: (value) => {\n        this.player.controller.buttonPrev.show(value)\n      },\n    })\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-part\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <div class=\"${classPrefix}-controller-texticon\">P0</div>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">分P列表</div>\n  </div>\n`\n\nexport default class ButtonPart {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n  $texticon: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.$texticon = fragment.querySelector(`.${classPrefix}-controller-texticon`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    if (this.player.video.list.length < 2) {\n      this.el.classList.add(\"state-singlepart\")\n    }\n    this.$iconWrap.addEventListener(\"click\", () => {\n      this.player.side.toggle(\"partlist\")\n    })\n    this.player.on(\"part\", (p) => {\n      this.$texticon.innerText = `P${p}`\n    })\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-webfull\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-webfull\"></i>\n      <i class=\"${classPrefix}-controller-icon mp-icon-webfull-exit\"></i>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">网页全屏</div>\n  </div>\n`\n\nexport default class ButtonWebfull {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.player.on(\"webfull\", () => {\n      this.el.classList.add(\"state-webfull\")\n      this.$tooltip.innerText = \"退出网页全屏\"\n    })\n    this.player.on(\"webfull_exit\", () => {\n      this.el.classList.remove(\"state-webfull\")\n      this.$tooltip.innerText = \"网页全屏\"\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      if (this.player.isWebfull) {\n        this.player.exitWebfull()\n      } else {\n        this.player.webfull()\n      }\n    })\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-prev\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-prev\"></i>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">上一P</div>\n  </div>\n`\n\nexport default class ButtonPrev {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.player.on(\"part\", (p) => {\n      if (p > 1) {\n        this.el.classList.remove(\"state-firstpart\")\n      } else {\n        this.el.classList.add(\"state-firstpart\")\n      }\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      this.player.prev()\n    })\n  }\n  public show(flag: boolean) {\n    this.el.style.display = flag ? \"\" : \"none\"\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-next\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-next\"></i>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">下一P</div>\n  </div>\n`\n\nexport default class ButtonNext {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.player.on(\"part\", (p) => {\n      if (p < this.player.video.list.length) {\n        this.el.classList.remove(\"state-lastpart\")\n      } else {\n        this.el.classList.add(\"state-lastpart\")\n      }\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      this.player.next()\n    })\n  }\n}\n","export enum keyCode {\n  Backspace = 8,\n  Tab = 9,\n  Enter = 13,\n  Shift = 16,\n  Ctrl = 17,\n  Alt = 18,\n  PauseBreak = 19,\n  CapsLock = 20,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n\n  Insert = 45,\n  Delete = 46,\n\n  Zero = 48,\n  ClosedParen = Zero,\n  One = 49,\n  ExclamationMark = One,\n  Two = 50,\n  AtSign = Two,\n  Three = 51,\n  PoundSign = Three,\n  Hash = PoundSign,\n  Four = 52,\n  DollarSign = Four,\n  Five = 53,\n  PercentSign = Five,\n  Six = 54,\n  Caret = Six,\n  Hat = Caret,\n  Seven = 55,\n  Ampersand = Seven,\n  Eight = 56,\n  Star = Eight,\n  Asterik = Star,\n  Nine = 57,\n  OpenParen = Nine,\n\n  A = 65,\n  B = 66,\n  C = 67,\n  D = 68,\n  E = 69,\n  F = 70,\n  G = 71,\n  H = 72,\n  I = 73,\n  J = 74,\n  K = 75,\n  L = 76,\n  M = 77,\n  N = 78,\n  O = 79,\n  P = 80,\n  Q = 81,\n  R = 82,\n  S = 83,\n  T = 84,\n  U = 85,\n  V = 86,\n  W = 87,\n  X = 88,\n  Y = 89,\n  Z = 90,\n\n  LeftWindowKey = 91,\n  RightWindowKey = 92,\n  SelectKey = 93,\n\n  Numpad0 = 96,\n  Numpad1 = 97,\n  Numpad2 = 98,\n  Numpad3 = 99,\n  Numpad4 = 100,\n  Numpad5 = 101,\n  Numpad6 = 102,\n  Numpad7 = 103,\n  Numpad8 = 104,\n  Numpad9 = 105,\n\n  Multiply = 106,\n  Add = 107,\n  Subtract = 109,\n  DecimalPoint = 110,\n  Divide = 111,\n\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n\n  NumLock = 144,\n  ScrollLock = 145,\n\n  SemiColon = 186,\n  Equals = 187,\n  Comma = 188,\n  Dash = 189,\n  Period = 190,\n  UnderScore = Dash,\n  PlusSign = Equals,\n  ForwardSlash = 191,\n  Tilde = 192,\n  GraveAccent = Tilde,\n\n  OpenBracket = 219,\n  ClosedBracket = 221,\n  Quote = 222,\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-danmaku-switch state-on\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-danmaku\"></i>\n      <i class=\"${classPrefix}-controller-icon mp-icon-danmaku-off\"></i>\n    </div>\n    <div class=\"${classPrefix}-tooltip\">关闭弹幕</div>\n  </div>\n`\n\nexport default class ButtonDanmakuSwitch {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  constructor(player: MfunsPlayer, container: HTMLElement) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = fragment.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = fragment.querySelector(`.${classPrefix}-tooltip`)!\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    this.player.on(\"danmaku:off\", () => {\n      this.el.classList.remove(\"state-on\")\n      this.$tooltip.innerText = \"开启弹幕\"\n    })\n    this.player.on(\"danmaku:on\", () => {\n      this.el.classList.add(\"state-on\")\n      this.$tooltip.innerText = \"关闭弹幕\"\n    })\n    this.$iconWrap.addEventListener(\"click\", () => {\n      this.player.danmaku.toggle()\n    })\n  }\n}\n","import { MultiPicker, Picker, Slider } from \"@/ui/components\"\nimport { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\nimport { PlayerOptions } from \"@/types\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-danmaku-settings\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-danmaku-settings\"></i>\n    </div>\n    <div class=\"${classPrefix}-controller-panel-wrap\">\n      <div class=\"${classPrefix}-controller-panel ${classPrefix}-controller-panel-danmaku-settings\">\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">弹幕类型屏蔽</div>\n          <div class=\"${classPrefix}-danmaku-settings-filter-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">不透明度</div>\n          <div\n            class=\"${classPrefix}-danmaku-settings-opacity-slider ${classPrefix}-slider-wrap\"\n          ></div>\n          <div class=\"${classPrefix}-danmaku-settings-opacity-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">显示区域</div>\n          <div class=\"${classPrefix}-danmaku-settings-area-slider ${classPrefix}-slider-wrap\"></div>\n          <div class=\"${classPrefix}-danmaku-settings-area-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">文字大小</div>\n          <div class=\"${classPrefix}-danmaku-settings-size-slider ${classPrefix}-slider-wrap\"></div>\n          <div class=\"${classPrefix}-danmaku-settings-size-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">弹幕速度</div>\n          <div\n            class=\"${classPrefix}-danmaku-settings-speed-slider  ${classPrefix}-slider-wrap\"\n          ></div>\n          <div class=\"${classPrefix}-danmaku-settings-speed-value ${classPrefix}-row-value\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n`\n\nexport default class ButtonDanmakuSettings {\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n\n  $filterPicker: HTMLElement\n  $opacitySlider: HTMLElement\n  $areaSlider: HTMLElement\n  $sizeSlider: HTMLElement\n  $speedSlider: HTMLElement\n\n  $opacityValue: HTMLElement\n  $areaValue: HTMLElement\n  $sizeValue: HTMLElement\n  $speedValue: HTMLElement\n\n  pickerFilter!: MultiPicker\n  sliderOpacity!: Slider\n  sliderArea!: Slider\n  sliderSize!: Slider\n  sliderSpeed!: Slider\n\n  constructor(player: MfunsPlayer, container: HTMLElement, options?: PlayerOptions) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = this.el.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n\n    this.$filterPicker = this.el.querySelector(`.${classPrefix}-danmaku-settings-filter-picker`)!\n    this.$opacitySlider = this.el.querySelector(`.${classPrefix}-danmaku-settings-opacity-slider`)!\n    this.$areaSlider = this.el.querySelector(`.${classPrefix}-danmaku-settings-area-slider`)!\n    this.$sizeSlider = this.el.querySelector(`.${classPrefix}-danmaku-settings-size-slider`)!\n    this.$speedSlider = this.el.querySelector(`.${classPrefix}-danmaku-settings-speed-slider`)!\n\n    this.$opacityValue = this.el.querySelector(`.${classPrefix}-danmaku-settings-opacity-value`)!\n    this.$areaValue = this.el.querySelector(`.${classPrefix}-danmaku-settings-area-value`)!\n    this.$sizeValue = this.el.querySelector(`.${classPrefix}-danmaku-settings-size-value`)!\n    this.$speedValue = this.el.querySelector(`.${classPrefix}-danmaku-settings-speed-value`)!\n\n    this.init()\n    container.appendChild(fragment)\n  }\n\n  private init() {\n    // 弹幕类型屏蔽\n    this.pickerFilter = new MultiPicker({\n      container: this.$filterPicker,\n      value: [],\n      list: [\n        { value: \"roll\", label: \"滚动\" },\n        { value: \"top\", label: \"顶部\" },\n        { value: \"bottom\", label: \"底部\" },\n        { value: \"color\", label: \"彩色\" },\n        { value: \"special\", label: \"特殊\" },\n      ],\n      onToggle: (value, flag) => {\n        this.player.danmaku.filter(value, flag)\n      },\n    })\n    // 不透明度\n    this.sliderOpacity = new Slider({\n      container: this.$opacitySlider,\n      min: 10,\n      max: 100,\n      step: 1,\n      value: 100,\n      onDrag: (value) => {\n        this.player.danmaku.setOpacity(value / 100)\n      },\n      onChange: (value) => {\n        this.$opacityValue.innerText = `${value}%`\n      },\n    })\n    // 显示区域\n    this.sliderArea = new Slider({\n      container: this.$areaSlider,\n      min: 1,\n      max: 9,\n      step: 1,\n      value: 2,\n      divider: true,\n      onDrag: (value) => {\n        const area = value / 8\n        this.player.danmaku.setArea(area == 9 ? 0 : area)\n      },\n      onChange: (value) => {\n        this.$areaValue.innerText = value < 8 ? `${value / 8}` : value == 8 ? \"不重叠\" : \"无限\"\n      },\n    })\n    // 文字大小\n    this.sliderSize = new Slider({\n      container: this.$sizeSlider,\n      min: 50,\n      max: 200,\n      step: 1,\n      value: 100,\n      onDrag: (value) => {\n        this.player.danmaku.setScale(value / 100)\n      },\n      onChange: (value) => {\n        this.$sizeValue.innerText = `${value}%`\n      },\n    })\n    // 弹幕速度\n    this.sliderSpeed = new Slider({\n      container: this.$speedSlider,\n      min: 20,\n      max: 180,\n      step: 10,\n      value: 100,\n      divider: 5,\n      onDrag: (value) => {\n        this.player.danmaku.setSpeed(value / 100)\n      },\n      onChange: (value) => {\n        this.$speedValue.innerText = `${value}%`\n      },\n    })\n  }\n}\n","import { PlayerOptions } from \"@/types\"\nimport { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\nimport { Picker } from \"@/ui/components\"\nimport { color2Number } from \"@/utils\"\nimport DanmakuBar from \"../DanmakuBar\"\n\ndeclare global {\n  class EyeDropper {\n    open: () => Promise<{ sRGBHex: string }>\n  }\n}\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-button ${classPrefix}-controller-danmaku-style\">\n    <div class=\"${classPrefix}-controller-icon-wrap\">\n      <i class=\"${classPrefix}-controller-icon mp-icon-text\"></i>\n    </div>\n    <div class=\"${classPrefix}-controller-panel-wrap\">\n      <div class=\"${classPrefix}-controller-panel ${classPrefix}-controller-panel-danmaku-style\">\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">字号</div>\n          <div class=\"${classPrefix}-danmaku-style-fontsize-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">模式</div>\n          <div class=\"${classPrefix}-danmaku-style-mode-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">颜色</div>\n          <input class=\"${classPrefix}-danmaku-style-color-input mp-input\" type=\"text\" value=\"#\" />\n          <div class=\"${classPrefix}-danmaku-style-color-preview\"></div>\n          ${EyeDropper\n            ? html`<button class=\"${classPrefix}-danmaku-style-color-dropper mp-button\">\n                拾取\n              </button>`\n            : \"\"}\n        </div>\n        <div class=\"${classPrefix}-danmaku-style-color-picker\"></div>\n      </div>\n    </div>\n  </div>\n`\n\nexport default class ButtonDanmakuStyle {\n  danmakuBar: DanmakuBar\n  player: MfunsPlayer\n  el: HTMLElement\n  $iconWrap: HTMLElement\n  $tooltip: HTMLElement\n\n  $fontsizePicker: HTMLElement\n  $modePicker: HTMLElement\n  $colorPicker: HTMLElement\n  $colorInput: HTMLInputElement\n  $colorPreview: HTMLElement\n  $colorDropper: HTMLElement | null\n\n  pickerFontsize!: Picker\n  pickerMode!: Picker\n  pickerColor!: Picker\n\n  constructor(danmakuBar: DanmakuBar, container: HTMLElement, options: PlayerOptions) {\n    this.danmakuBar = danmakuBar\n    this.player = danmakuBar.player\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller-button`)!\n    this.$iconWrap = this.el.querySelector(`.${classPrefix}-controller-icon-wrap`)!\n    this.$tooltip = this.el.querySelector(`.${classPrefix}-tooltip`)!\n\n    this.$fontsizePicker = this.el.querySelector(`.${classPrefix}-danmaku-style-fontsize-picker`)!\n    this.$modePicker = this.el.querySelector(`.${classPrefix}-danmaku-style-mode-picker`)!\n    this.$colorPicker = this.el.querySelector(`.${classPrefix}-danmaku-style-color-picker`)!\n    this.$colorInput = this.el.querySelector(`.${classPrefix}-danmaku-style-color-input`)!\n    this.$colorPreview = this.el.querySelector(`.${classPrefix}-danmaku-style-color-preview`)!\n    this.$colorDropper = this.el.querySelector(`.${classPrefix}-danmaku-style-color-dropper`)\n\n    this.init(options)\n    container.appendChild(fragment)\n  }\n\n  private init(options: PlayerOptions) {\n    this.pickerFontsize = new Picker({\n      container: this.$fontsizePicker,\n      value: 25,\n      list: (options.danmakuBar?.fontSizeList || defaultFontSizeList).map(([value, label]) => ({\n        value,\n        label,\n      })),\n      onChange: (value) => {\n        this.danmakuBar.danmakuFontSize = Number(value)\n      },\n    })\n    this.pickerMode = new Picker({\n      container: this.$modePicker,\n      value: 1,\n      list: [\n        { value: 1, label: \"滚动\" },\n        { value: 5, label: \"顶部\" },\n        { value: 4, label: \"底部\" },\n        { value: 6, label: \"逆向\" },\n      ].filter(\n        (item) => (options.danmakuBar?.modeList || defaultModeList).indexOf(item.value) > -1\n      ),\n      onChange: (value) => {\n        this.danmakuBar.danmakuMode = Number(value) || 1\n      },\n    })\n    this.pickerColor = new Picker({\n      container: this.$colorPicker,\n      value: \"#FFFFFF\",\n      list: (options.danmakuBar?.colorList || defaultColorList).map((item) => ({ value: item })),\n      onPick: (value) => {\n        this.danmakuBar.danmakuColor = color2Number(value as string)\n      },\n      onChange: (value) => {\n        this.$colorInput.value = value as string\n        this.$colorPreview.style.backgroundColor = value as string\n      },\n      template: (item) => html` <div style=\"background-color: ${item.value}\"></div> `,\n      condition: (item, value) => {\n        return item.toLowerCase() == (value as string).toLowerCase()\n      },\n    })\n    this.$colorInput.addEventListener(\"input\", (e) => {\n      const value = this.$colorInput.value\n      this.$colorInput.value = \"#\" + value.replace(/[^0-9A-Fa-f]/g, \"\").slice(0, 6)\n      if (/^#([0-9A-Fa-f]{6}|[0-9A-Fa-f]{3})$/.test(value)) {\n        this.pickerColor.pick(value)\n      }\n    })\n    if (this.$colorDropper) {\n      this.$colorDropper.onclick = () => {\n        if (EyeDropper) {\n          const dropper = new EyeDropper()\n          dropper.open().then(({ sRGBHex }) => {\n            this.pickerColor.pick(sRGBHex)\n          })\n        }\n      }\n    }\n  }\n}\n\nconst defaultFontSizeList: [number, string][] = [\n  [18, \"小\"],\n  [25, \"中\"],\n  [36, \"大\"],\n]\n\nconst defaultModeList = [1, 5, 4]\n\nconst defaultColorList = [\n  \"#FE0302\",\n  \"#FFFF00\",\n  \"#00CD00\",\n  \"#00FF00\",\n  \"#4E6EF2\",\n  \"#89D5FF\",\n  \"#7B7FF7\",\n  \"#757575\",\n  \"#FFFFFF\",\n  \"#FB7229\",\n]\n","import { DanmakuItem, DanmakuSendItem } from \"@/types\"\nimport { keyCode } from \"./../../utils/KeyCode.enum\"\nimport { PlayerOptions } from \"../../types\"\nimport MfunsPlayer from \"@/player\"\nimport { classPrefix } from \"@/const\"\nimport { html, render } from \"lit-html\"\nimport ButtonDanmakuSwitch from \"./button/ButtonDanmakuSwitch\"\nimport ButtonDanmakuSettings from \"./button/ButtonDanmakuSettings\"\nimport ButtonDanmakuStyle from \"./button/ButtonDanmakuStyle\"\nimport Controller from \".\"\n\nconst template = html`\n  <div class=\"${classPrefix}-danmakubar\">\n    <div class=\"${classPrefix}-danmakubar-slot\"></div>\n    <div class=\"${classPrefix}-danmakubar-input-wrap\">\n      <div class=\"${classPrefix}-danmakubar-input-slot\"></div>\n      <input type=\"text\" autocompleted=\"new-password\" class=\"${classPrefix}-danmakubar-input\" />\n      <!-- \n      <div class=\"${classPrefix}-danmakubar-status-loading\">弹幕功能加载中...</div>\n      <div class=\"${classPrefix}-danmakubar-status-login\">需要登录后才能发送弹幕哦~</div>\n      -->\n      <div class=\"${classPrefix}-danmakubar-send\">发送</div>\n    </div>\n  </div>\n`\n\nexport default class DanmakuBar {\n  buttonDanmakuSwitch: ButtonDanmakuSwitch\n  buttonDanmakuSettings: ButtonDanmakuSettings\n  buttonDanmakuStyle: ButtonDanmakuStyle\n\n  el: HTMLElement\n  $send: HTMLElement\n  $input: HTMLInputElement\n  $slot: HTMLElement\n  $inputSlot: HTMLElement\n\n  controller: Controller\n  player: MfunsPlayer\n\n  danmakuColor = 16777215\n  danmakuMode = 1\n  danmakuFontSize = 25\n\n  /** 冷却计时器 */\n  coolDownTimer = 0\n\n  constructor(controller: Controller, options: PlayerOptions) {\n    this.controller = controller\n    this.player = controller.player\n    // const container = this.controller.$center\n    const container = this.player.template.$footbar\n    render(template, container)\n    this.el = container.querySelector(`.${classPrefix}-danmakubar`)!\n    this.$send = this.el.querySelector(`.${classPrefix}-danmakubar-send`)!\n    this.$input = this.el.querySelector(`.${classPrefix}-danmakubar-input`)!\n    this.$slot = this.el.querySelector(`.${classPrefix}-danmakubar-slot`)!\n    this.$inputSlot = this.el.querySelector(`.${classPrefix}-danmakubar-input-slot`)!\n\n    this.buttonDanmakuSwitch = new ButtonDanmakuSwitch(this.player, this.$slot)\n    this.buttonDanmakuSettings = new ButtonDanmakuSettings(this.player, this.$slot)\n\n    this.buttonDanmakuStyle = new ButtonDanmakuStyle(this, this.$inputSlot, options)\n\n    this.player.on(\"fullscreen\", () => {\n      this.moveToController()\n    })\n    this.player.on(\"webfull\", () => {\n      this.moveToController()\n    })\n    this.player.on(\"fullscreen_exit\", () => {\n      this.moveToFootbar()\n    })\n    this.player.on(\"webfull_exit\", () => {\n      this.moveToFootbar()\n    })\n    this.$input.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode == keyCode.Enter) {\n        this.send()\n      }\n    })\n    this.$send.onclick = () => {\n      this.send()\n    }\n\n    this.setPlaceHolder(options.danmakuBar?.placeholder || defaultPlaceholder)\n  }\n  private moveToFootbar() {\n    this.player.template.$footbar.appendChild(this.el)\n    this.controller.$center.classList.remove(\"state-bar\")\n  }\n  private moveToController() {\n    this.controller.$center.appendChild(this.el)\n    this.controller.$center.classList.add(\"state-bar\")\n  }\n  setPlaceHolder(placeholder: string) {\n    this.$input.placeholder = placeholder\n  }\n  /** 执行弹幕发送操作 */\n  private send() {\n    // 如果内容为空或只有空格，则不进行发送操作\n    if (!this.$input.value.trim() || this.coolDownTimer) return\n    this.player.danmaku.operate.send(this.generateDanmaku())\n    this.$input.value = \"\"\n  }\n  /** 设置弹幕发送冷却 */\n  public setCoolDown(time: number) {\n    if (this.coolDownTimer) {\n      window.clearInterval(this.coolDownTimer)\n    }\n    let t = Math.round(time)\n    this.$send.classList.add(\"state-disabled\")\n    this.$send.innerText = `${t}秒`\n    this.coolDownTimer = window.setInterval(() => {\n      t -= 1\n      if (t) {\n        this.$send.innerText = `${t}秒`\n      } else {\n        this.$send.innerText = \"发送\"\n        this.$send.classList.remove(\"state-disabled\")\n        window.clearInterval(this.coolDownTimer)\n        this.coolDownTimer = 0\n      }\n    }, 1000)\n  }\n  generateDanmaku(): DanmakuSendItem {\n    return {\n      time: this.player.time,\n      content: this.$input.value,\n      mode: this.danmakuMode,\n      color: this.danmakuColor,\n      size: this.danmakuFontSize,\n    }\n  }\n}\n\nconst defaultPlaceholder = \"发条弹幕吧~\"\n","import { html, render } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\nimport MfunsPlayer from \"@/player\"\nimport { PlayerOptions } from \"@/types\"\nimport ProgressBar from \"./ProgressBar\"\nimport { fullScreenEnabled, pictureInPictureEnabled } from \"@/utils\"\nimport ButtonFullscreen from \"./button/ButtonFullscreen\"\nimport ButtonPip from \"./button/ButtonPip\"\nimport ButtonPlay from \"./button/ButtonPlay\"\nimport LabelTime from \"./label/LabelTime\"\nimport ButtonLoop from \"./button/ButtonLoop\"\nimport ButtonVolume from \"./button/ButtonVolume\"\nimport ButtonSettings from \"./button/ButtonSettings\"\nimport ButtonPart from \"./button/ButtonPart\"\nimport ButtonWebfull from \"./button/ButtonWebfull\"\nimport ButtonPrev from \"./button/ButtonPrev\"\nimport ButtonNext from \"./button/ButtonNext\"\nimport ButtonDanmakulist from \"./button/ButtonDanmakulist\"\nimport DanmakuBar from \"./DanmakuBar\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-mask\"></div>\n  <div class=\"${classPrefix}-controller mp-crystal\">\n    <div class=\"${classPrefix}-controller-progress\"></div>\n    <div class=\"${classPrefix}-controller-content\">\n      <div class=\"${classPrefix}-controller-left\"></div>\n      <div class=\"${classPrefix}-controller-center\"></div>\n      <div class=\"${classPrefix}-controller-right\"></div>\n    </div>\n  </div>\n`\n\n/** 控制栏 */\nexport default class Controller {\n  player: MfunsPlayer\n  container: HTMLElement\n  el: HTMLElement\n\n  $progress: HTMLElement\n  $content: HTMLElement\n  $left: HTMLElement\n  $center: HTMLElement\n  $right: HTMLElement\n\n  progressBar: ProgressBar\n  danmakuBar: DanmakuBar\n\n  buttonPlay: ButtonPlay\n  buttonPrev: ButtonPrev\n  buttonNext: ButtonNext\n  buttonLoop: ButtonLoop\n  buttonVolume: ButtonVolume\n  buttonSettings: ButtonSettings\n  // buttonDanmakulist: ButtonDanmakulist\n  buttonPart: ButtonPart\n  buttonPip?: ButtonPip\n  buttonWebfull?: ButtonWebfull\n  buttonFullScreen?: ButtonFullscreen\n\n  labelTime: LabelTime\n\n  isHover = false\n  isControl = false\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.container = player.template.$controllerWrap\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-controller`)!\n    this.$progress = this.el.querySelector(`.${classPrefix}-controller-progress`)!\n    this.$content = this.el.querySelector(`.${classPrefix}-controller-content`)!\n    this.$left = this.el.querySelector(`.${classPrefix}-controller-left`)!\n    this.$center = this.el.querySelector(`.${classPrefix}-controller-center`)!\n    this.$right = this.el.querySelector(`.${classPrefix}-controller-right`)!\n\n    // 进度条\n    this.progressBar = new ProgressBar(this, options)\n    // 弹幕栏\n    this.danmakuBar = new DanmakuBar(this, options)\n\n    // 控制栏左侧部件\n    this.buttonPrev = new ButtonPrev(this.player, this.$left)\n    this.buttonPlay = new ButtonPlay(this.player, this.$left)\n    this.buttonNext = new ButtonNext(this.player, this.$left)\n    this.labelTime = new LabelTime(this.player, this.$left)\n    this.buttonLoop = new ButtonLoop(this.player, this.$left)\n    // 控制栏右侧部件\n    // this.buttonDanmakulist = new ButtonDanmakulist(this.player, this.$right)\n    this.buttonPart = new ButtonPart(this.player, this.$right)\n    this.buttonVolume = new ButtonVolume(this.player, this.$right)\n    this.buttonSettings = new ButtonSettings(this.player, this.$right, options)\n    if (pictureInPictureEnabled) this.buttonPip = new ButtonPip(this.player, this.$right)\n    if (options.feature?.webfull) this.buttonWebfull = new ButtonWebfull(this.player, this.$right)\n    if (fullScreenEnabled) this.buttonFullScreen = new ButtonFullscreen(this.player, this.$right)\n\n    this.init()\n\n    this.container.appendChild(fragment)\n  }\n  init() {\n    this.buttonPrev.show(false)\n    this.container.addEventListener(\"mouseenter\", () => {\n      this.isHover = true\n    })\n    this.container.addEventListener(\"mouseleave\", () => {\n      this.isHover = false\n    })\n  }\n  /** 设置播放器控制状态 */\n  setControl(flag: boolean) {\n    this.isControl = flag\n    if (!flag) {\n      this.player.state.removeActive()\n    }\n  }\n}\n","import { PlayerEventsMap } from \"./PlayerEventsMap\"\n\nexport default class Events {\n  protected events: Record<string, ((...args: any[]) => void)[]> = {}\n\n  readonly customEventList: string[] = []\n\n  constructor() {}\n\n  /** 添加监听 */\n  on<T extends keyof PlayerEventsMap>(name: T, listener: PlayerEventsMap[T]) {\n    if (!this.events[name]) {\n      this.events[name] = []\n    }\n    this.events[name].push(listener)\n  }\n\n  /** 移除监听 */\n  off<T extends keyof PlayerEventsMap>(name: T, listener: PlayerEventsMap[T]) {\n    if (!this.events[name]) {\n      this.events[name] = []\n    }\n    const index = this.events[name].indexOf(listener)\n    if (index > -1) this.events[name].splice(index, 1)\n  }\n\n  /** 触发事件 */\n  trigger<T extends keyof PlayerEventsMap>(name: T, ...args: Parameters<PlayerEventsMap[T]>) {\n    if (this.events[name] && this.events[name].length) {\n      for (let i = 0; i < this.events[name].length; i++) {\n        this.events[name][i](...args)\n      }\n    }\n  }\n}\n","import { html, render } from \"lit-html\"\nimport MfunsPlayer from \"@/player\"\nimport { colorLuminance } from \"@/utils\"\nimport { classPrefix } from \"@/const\"\nimport { PlayerOptions, ThemeOptions } from \"@/types\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}\">\n    <div class=\"${classPrefix}-main\">\n      <div class=\"${classPrefix}-video-area\">\n        <div class=\"${classPrefix}-video-wrap\">\n          <video class=\"${classPrefix}-video\"></video>\n        </div>\n        <div class=\"${classPrefix}-danmaku-wrap\"></div>\n        <div class=\"${classPrefix}-state-wrap\"></div>\n        <div class=\"${classPrefix}-toast-wrap\"></div>\n      </div>\n      <div class=\"${classPrefix}-side-wrap\"></div>\n      <div class=\"${classPrefix}-modal-wrap\"></div>\n      <div class=\"${classPrefix}-contextmenu-wrap\"></div>\n      <div class=\"${classPrefix}-header-wrap\"></div>\n      <div class=\"${classPrefix}-controller-wrap\"></div>\n    </div>\n    <div class=\"${classPrefix}-footbar mp-solid\"></div>\n    <div class=\"${classPrefix}-miniplayer\">\n      <div class=\"${classPrefix}-miniplayer-content\"></div>\n    </div>\n  </div>\n`\n\nexport default class Template {\n  player: MfunsPlayer\n  /** 播放器容器 */\n  container: HTMLElement\n  /** 播放器主体元素 */\n  el!: HTMLElement\n  // 播放器部件\n  $main!: HTMLElement\n  $video!: HTMLVideoElement\n  $videoArea!: HTMLElement\n  $videoWrap!: HTMLElement\n  $danmakuWrap!: HTMLElement\n  $toastWrap!: HTMLElement\n  $stateWrap!: HTMLElement\n  $headerWrap!: HTMLElement\n  $contextmenuWrap!: HTMLElement\n  $modalWrap!: HTMLElement\n  $controllerWrap!: HTMLElement\n  $sideWrap!: HTMLElement\n  $footbar!: HTMLElement\n  $miniplayer!: HTMLElement\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.container = this.player.container\n    this.init()\n  }\n\n  /** 初始化模板绑定 */\n  private init() {\n    render(template(), this.container)\n    const $ = this.container.querySelector.bind(this.container)\n    this.el = $(`.${classPrefix}`)!\n    this.$main = $(`.${classPrefix}-main`)!\n    this.$video = $(`.${classPrefix}-video`)!\n    this.$videoArea = $(`.${classPrefix}-video-area`)!\n    this.$videoWrap = $(`.${classPrefix}-video-wrap`)!\n    this.$danmakuWrap = $(`.${classPrefix}-danmaku-wrap`)!\n    this.$toastWrap = $(`.${classPrefix}-toast-wrap`)!\n    this.$stateWrap = $(`.${classPrefix}-state-wrap`)!\n    this.$headerWrap = $(`.${classPrefix}-header-wrap`)!\n    this.$contextmenuWrap = $(`.${classPrefix}-contextmenu-wrap`)!\n    this.$modalWrap = $(`.${classPrefix}-modal-wrap`)!\n    this.$controllerWrap = $(`.${classPrefix}-controller-wrap`)!\n    this.$sideWrap = $(`.${classPrefix}-side-wrap`)!\n    this.$footbar = $(`.${classPrefix}-footbar`)!\n    this.$miniplayer = $(`.${classPrefix}-miniplayer`)!\n  }\n}\n","import FlvJs from \"@lib/types/flv\"\nimport HlsJs from \"@lib/types/hls\"\nimport DashJs from \"@lib/types/dash\"\nimport MfunsPlayer from \"@/player\"\nimport Video from \"@/Video\"\nimport { VideoSource } from \"@/types\"\n\ndeclare global {\n  let flvjs: typeof FlvJs | undefined\n  let Hls: typeof HlsJs | undefined\n  let dashjs: typeof DashJs | undefined\n}\n\ninterface CurrentSource extends VideoSource {\n  destroy: () => void\n}\n\nexport default class VideoLoader {\n  video: Video\n  current: CurrentSource | null = null\n  list: Map<string, (player: MfunsPlayer, url: string) => void> = new Map()\n  constructor(video: Video) {\n    this.video = video\n  }\n  /** 加载视频源 */\n  public load(src: VideoSource) {\n    this.destroyCurrent()\n    switch (src.type) {\n      case \"flv\":\n        this.loadFlv(src)\n        break\n      case \"dash\":\n        this.loadDash(src)\n        break\n      case \"hls\":\n      case \"m3u8\":\n        this.loadHls(src)\n        break\n      default:\n        this.loadNormal(src)\n    }\n  }\n  /** 一般加载方式 */\n  public loadNormal(src: VideoSource) {\n    this.video.el.src = src.url\n    this.current = {\n      ...src,\n      destroy: () => {\n        this.video.el.src = \"\"\n      },\n    }\n  }\n  /** 加载flv */\n  public loadFlv(src: VideoSource) {\n    if (flvjs?.isSupported()) {\n      const flvPlayer = flvjs.createPlayer({\n        type: src.type,\n        url: src.url,\n        cors: true,\n      })\n      flvPlayer.attachMediaElement(this.video.el)\n      flvPlayer.load()\n      this.current = {\n        ...src,\n        destroy: () => {\n          flvPlayer.destroy()\n        },\n      }\n    } else {\n      console.error(\"不支持flv加载\")\n    }\n  }\n  /** 加载hls */\n  public loadHls(src: VideoSource) {\n    if (Hls?.isSupported()) {\n      const hls = new Hls()\n      hls.attachMedia(this.video.el)\n      hls.loadSource(src.url)\n      this.current = {\n        ...src,\n        destroy: () => {\n          hls.destroy()\n        },\n      }\n    } else {\n      console.error(\"不支持hls加载\")\n    }\n  }\n  /** 加载dash */\n  public loadDash(src: VideoSource) {\n    if (dashjs) {\n      // eslint-disable-next-line new-cap\n      const dashPlayer = dashjs.MediaPlayer().create()\n      dashPlayer.initialize(this.video.el, src.url, true)\n      this.current = {\n        ...src,\n        destroy: () => {\n          dashPlayer.destroy()\n        },\n      }\n    } else {\n      console.error(\"不支持dash加载\")\n    }\n  }\n  /** 销毁当前播放 */\n  private destroyCurrent() {\n    this.current?.destroy()\n    this.current = null\n  }\n}\n","import { PlayerOptions, VideoInfo, VideoPart, VideoSource } from \"@/types\"\nimport MfunsPlayer from \"@/player\"\nimport VideoLoader from \"./Loader\"\n\nexport default class Video {\n  /** 播放器主体 */\n  player: MfunsPlayer\n  /** video对象 */\n  el: HTMLVideoElement\n  /** 视频加载模块 */\n  loader: VideoLoader\n  /** 视频分P列表 */\n  list: VideoPart[]\n  /** 当前视频分P */\n  private currentPart: number\n  /** 当前视频质量 */\n  private quality = \"1080P\"\n\n  ratio: [number, number] | null = null\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.el = this.player.template.$video\n    this.loader = new VideoLoader(this)\n    this.list = options.video.list\n    this.currentPart = options.video.part || 1\n    this.setRatio(options.aspectRatio || null)\n\n    this.initEvent()\n    this.initKeepRatio()\n  }\n\n  /** 设置视频 */\n  async setVideo(video: VideoInfo, play = false) {\n    const p = video.part || 1\n    this.list = video.list\n    this.currentPart = p\n    // 选择合适的播放源\n    this.load(this.findSourceByQuality(this.partInfo.src, this.quality), play)\n    this.player.events.trigger(\"video\")\n    this.player.events.trigger(\"part\", p)\n    this.seek(0)\n  }\n\n  /** 设置分P */\n  async setPart(p: number, play = false) {\n    this.currentPart = p\n    // 选择合适的播放源\n    this.load(this.findSourceByQuality(this.partInfo.src, this.quality), play)\n    this.player.events.trigger(\"part\", p)\n    this.seek(0)\n  }\n\n  /** 切换视频质量 */\n  async setQuality(quality: string) {\n    const currentVideoSource = this.partInfo.src\n    let source = currentVideoSource.find((src) => src.quality == quality)\n    if (!source) source = this.findSourceByQuality(currentVideoSource, quality)\n    this.load(source, !this.paused, this.duration)\n  }\n\n  /** 加载视频 */\n  load(src: VideoSource, play?: boolean, time?: number) {\n    this.loader.load(src)\n    const onloadedmetadata = () => {\n      this.player.events.trigger(\"video:load_end\")\n      if (time) {\n        this.seek(time)\n      }\n      if (play) {\n        this.play()\n      } else {\n        this.player.template.el.classList.add(\"state-paused\")\n      }\n      this.el.removeEventListener(\"loadedmetadata\", onloadedmetadata)\n    }\n    this.el.addEventListener(\"loadedmetadata\", onloadedmetadata)\n  }\n\n  /** 根据视频质量选择合适的视频源\n   * 返回小于等于该质量的视频源中最大的一个\n   */\n  private findSourceByQuality(sourceList: VideoSource[], quality: string) {\n    // 视频质量从高到低排序\n    const sortedSources: VideoSource[] = [...sourceList].sort(\n      (a, b) => parseInt(b.quality || \"\") - parseInt(a.quality || \"\")\n    )\n    // 从前向后找，找到小于等于该分辨率的即可\n    let source = sortedSources.find((src) => parseInt(src.quality || \"\") <= parseInt(quality))\n    if (!source) {\n      source = sortedSources[sortedSources.length - 1]\n    }\n    return source\n  }\n\n  /** 视频分P */\n  get part() {\n    return this.currentPart\n  }\n\n  get partInfo() {\n    return this.list[this.currentPart - 1]\n  }\n\n  /** 上一P */\n  public prev() {\n    if (this.currentPart > 1) this.setPart(this.currentPart - 1, true)\n  }\n  /** 下一P */\n  public next() {\n    if (this.currentPart < this.list.length) this.setPart(this.currentPart + 1, true)\n    this.play()\n  }\n\n  // 同步视频方法\n\n  /** 播放 */\n  public play() {\n    this.el.play()\n  }\n\n  /** 暂停 */\n  public pause() {\n    this.el.pause()\n  }\n\n  /** 跳转 */\n  public seek(value: number) {\n    this.el.currentTime = value > 0 ? (value < this.el.duration ? value : this.el.duration) : 0\n  }\n\n  // 同步设置视频属性\n\n  /** 设置音量 */\n  public setVolume(value: number) {\n    this.el.volume = value > 0 ? (value < 1 ? value : 1) : 0\n  }\n\n  /** 设置倍速 */\n  public setPlaybackRate(value: number) {\n    this.el.playbackRate = value\n  }\n\n  // 视频播放属性\n\n  /** 设置循环播放 */\n  public setLoop(flag: boolean) {\n    this.el.loop = flag\n    this.player.events.trigger(\"change:loop\", flag)\n  }\n\n  /** 设置视频比例 */\n  public setRatio(value: [number, number] | null) {\n    this.ratio = value\n    this.el.style.width = \"\"\n    this.el.style.height = \"\"\n    if (value) {\n      const [ratioW, ratioH] = value\n      this.el.style.aspectRatio = `${ratioW}/${ratioH}`\n      this.el.style.objectFit = \"fill\"\n      const { width, height } = this.el.getBoundingClientRect()\n      const { width: cWidth, height: cHeight } =\n        this.player.template.$videoArea.getBoundingClientRect()\n      if (width == cWidth && height == cHeight) {\n        this.rescale(width, height, ratioW, ratioH)\n      }\n    } else {\n      this.el.style.aspectRatio = \"\"\n      this.el.style.objectFit = \"\"\n    }\n    this.player.events.trigger(\"change:aspectRatio\", value)\n  }\n\n  /** 静音 */\n  public mute(flag = true) {\n    this.el.muted = flag\n  }\n\n  get muted(): boolean {\n    return this.el.muted\n  }\n\n  get playbackRate(): number {\n    return this.el.playbackRate\n  }\n\n  get loop(): boolean {\n    return this.el.loop\n  }\n\n  get volume(): number {\n    return this.el.volume\n  }\n\n  get paused(): boolean {\n    return this.el.paused\n  }\n\n  get duration(): number {\n    return this.el.duration\n  }\n\n  get currentTime(): number {\n    return this.el.currentTime\n  }\n\n  /** 监听视频事件 */\n  public on<K extends keyof HTMLVideoElementEventMap>(\n    type: K,\n    listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    this.el.addEventListener(type, listener, options)\n  }\n\n  /** 移除视频事件 */\n  public off<K extends keyof HTMLVideoElementEventMap>(\n    type: K,\n    listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n    options?: boolean | EventListenerOptions\n  ): void {\n    this.el.removeEventListener(type, listener, options)\n  }\n\n  private initEvent() {\n    this.on(\"play\", () => {\n      this.player.events.trigger(\"play\")\n      this.player.template.el.classList.remove(\"state-paused\")\n    })\n    this.on(\"pause\", () => {\n      this.player.events.trigger(\"pause\")\n      this.player.template.el.classList.add(\"state-paused\")\n    })\n    this.on(\"ended\", () => {\n      this.player.events.trigger(\"ended\")\n    })\n    this.on(\"waiting\", () => {\n      this.player.events.trigger(\"waiting\")\n      this.player.template.el.classList.add(\"state-loading\")\n    })\n    this.on(\"playing\", () => {\n      this.player.events.trigger(\"playing\")\n      this.player.template.el.classList.remove(\"state-loading\")\n    })\n    this.on(\"seeking\", () => {\n      this.player.events.trigger(\"seeking\", this.currentTime)\n      this.player.template.el.classList.add(\"state-seeking\")\n    })\n    this.on(\"seeked\", () => {\n      this.player.events.trigger(\"seeked\", this.currentTime)\n      this.player.template.el.classList.remove(\"state-seeking\")\n    })\n    this.on(\"timeupdate\", () => {\n      this.player.events.trigger(\"timeupdate\", this.currentTime)\n    })\n    this.on(\"progress\", () => {\n      const buffered = this.el.buffered\n      this.player.events.trigger(\n        \"progress\",\n        buffered.length ? buffered.end(buffered.length - 1) : 0\n      )\n    })\n    this.on(\"durationchange\", () => {\n      this.player.events.trigger(\"durationchange\", this.duration)\n    })\n    this.on(\"volumechange\", () => {\n      this.player.events.trigger(\"volumechange\", this.volume, this.muted)\n    })\n    this.on(\"ratechange\", () => {\n      this.player.events.trigger(\"ratechange\", this.playbackRate)\n    })\n  }\n  /** 保持视频比例 */\n  private initKeepRatio() {\n    this.player.on(\"resize\", ([cWidth, cHeight]) => {\n      if (this.ratio) {\n        this.el.style.width = \"\"\n        this.el.style.height = \"\"\n        const [ratioW, ratioH] = this.ratio\n        const { width, height } = this.el.getBoundingClientRect()\n        console.log(`${width} x ${height} -- ${cWidth} x ${cHeight}`)\n        if (Math.abs(width - cWidth) < 1 && Math.abs(height - cHeight) < 1) {\n          // 该情况表示播放器大小可能已被固定，需要重新计算宽高\n          this.rescale(cWidth, cHeight, ratioW, ratioH)\n        }\n      }\n    })\n  }\n\n  /** 根据当前视频宽高重新维持视频比例 */\n  private rescale(width: number, height: number, ratioW: number, ratioH: number) {\n    const rwxh = ratioW * height\n    const rhxw = ratioH * width\n    if (rwxh < rhxw) {\n      this.el.style.width = `${(rwxh / rhxw) * 100}%`\n      this.el.style.height = \"100%\"\n    } else {\n      this.el.style.width = \"100%\"\n      this.el.style.height = `${(rhxw / rwxh) * 100}%`\n    }\n  }\n}\n","import MfunsPlayer from \"@/player\"\nimport { getFullscreenElement } from \"@/utils\"\n\nexport default class ModeFullscreen {\n  player: MfunsPlayer\n\n  el: HTMLElement\n\n  constructor(player: MfunsPlayer) {\n    this.player = player\n    this.el = this.player.template.$main\n\n    const fullScreenChangeHandler = () => {\n      if (this.value) {\n        this.player.template.el.classList.add(\"mode-fullscreen\")\n        this.player.events.trigger(\"fullscreen\")\n      } else {\n        this.player.template.el.classList.remove(\"mode-fullscreen\")\n        this.player.events.trigger(\"fullscreen_exit\")\n      }\n    }\n    this.el.addEventListener(\"fullscreenchange\", fullScreenChangeHandler)\n    this.el.addEventListener(\"webkitfullscreenchange\", fullScreenChangeHandler)\n    this.el.addEventListener(\"mozfullscreenchange\", fullScreenChangeHandler)\n    this.el.addEventListener(\"msfullscreenchange\", fullScreenChangeHandler)\n  }\n\n  /** 进入全屏模式 */\n  enter() {\n    if (this.value) return\n    const el: any = this.el\n    if (el.requestFullscreen) {\n      el.requestFullscreen()\n    } else if (el.mozRequestFullScreen) {\n      el.mozRequestFullScreen()\n    } else if (el.webkitRequestFullscreen) {\n      el.webkitRequestFullscreen()\n    } else if (el.webkitEnterFullscreen) {\n      // Safari for iOS\n      el.webkitEnterFullscreen()\n    } else if (el.webkitEnterFullScreen) {\n      el.webkitEnterFullScreen()\n    } else if (el.msRequestFullscreen) {\n      el.msRequestFullscreen()\n    }\n  }\n\n  /** 退出全屏模式 */\n  exit() {\n    if (!this.value) return\n    const doc: any = document\n    if (document.exitFullscreen) {\n      document.exitFullscreen()\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen()\n    } else if (doc.webkitExitFullscreen) {\n      doc.webkitExitFullscreen()\n    } else if (doc.webkitExitFullScreen) {\n      doc.webkitExitFullScreen()\n    } else if ((this.el as any).msExitFullscreen!) {\n      ;(this.el as any).msExitFullscreen()\n    }\n  }\n\n  /** 是否处于全屏模式 */\n  get value(): boolean {\n    return !!(getFullscreenElement() == this.el)\n  }\n}\n","import MfunsPlayer from \"@/player\"\n\nexport default class ModePip {\n  player: MfunsPlayer\n\n  video: HTMLVideoElement\n\n  constructor(player: MfunsPlayer) {\n    this.player = player\n    this.video = this.player.video.el\n\n    this.video.addEventListener(\"enterpictureinpicture\", () => {\n      this.player.template.el.classList.add(\"mode-pip\")\n      this.player.events.trigger(\"pip\")\n    })\n    this.video.addEventListener(\"leavepictureinpicture\", () => {\n      this.player.template.el.classList.remove(\"mode-pip\")\n      this.player.events.trigger(\"pip_exit\")\n    })\n  }\n\n  /** 进入画中画模式 */\n  enter() {\n    if (this.value) return\n    this.video.requestPictureInPicture()\n  }\n\n  /** 退出画中画模式 */\n  exit() {\n    if (!this.value) return\n    document.exitPictureInPicture()\n  }\n\n  /** 是否已进入画中画模式 */\n  get value(): boolean {\n    return !!(document.pictureInPictureElement == this.video)\n  }\n}\n","import MfunsPlayer from \"@/player\"\n\nexport default class ModeWebfull {\n  player: MfunsPlayer\n\n  el: HTMLElement\n\n  constructor(player: MfunsPlayer) {\n    this.player = player\n    this.el = this.player.template.el\n  }\n\n  /** 进入网页全屏 */\n  enter() {\n    this.el.classList.add(\"mode-webfull\")\n    this.player.events.trigger(\"webfull\")\n  }\n\n  /** 退出网页全屏 */\n  exit() {\n    this.el.classList.remove(\"mode-webfull\")\n    this.player.events.trigger(\"webfull_exit\")\n  }\n\n  /** 是否处于网页全屏模式 */\n  get value(): boolean {\n    return this.el.classList.contains(\"mode-webfull\")\n  }\n}\n","import MfunsPlayer from \"@/player\"\nimport { PlayerOptions } from \"@/types\"\nimport ModeFullscreen from \"./ModeFullscreen\"\nimport ModePip from \"./ModePip\"\nimport ModeWebfull from \"./ModeWebfull\"\n\nexport default class Mode {\n  player: MfunsPlayer\n\n  protected modeFullscreen: ModeFullscreen\n  protected modeWebfull: ModeWebfull\n  protected modePip: ModePip\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.modeWebfull = new ModeWebfull(this.player)\n    this.modeFullscreen = new ModeFullscreen(this.player)\n    this.modePip = new ModePip(this.player)\n    this.init()\n  }\n  init() {\n    this.player.on(\"webfull\", () => {\n      this.player.exitFullscreen()\n    })\n    this.player.on(\"fullscreen\", () => {\n      this.player.exitWebfull()\n    })\n\n    const observer = new ResizeObserver(([item]) => {\n      const { width, height } = item.contentRect\n      this.player.events.trigger(\"resize\", [width, height])\n    })\n\n    observer.observe(this.player.template.$videoWrap)\n  }\n  fullscreen() {\n    this.modeFullscreen.enter()\n  }\n\n  exitFullscreen() {\n    this.modeFullscreen.exit()\n  }\n\n  get isFullscreen() {\n    return this.modeFullscreen.value\n  }\n\n  pip() {\n    this.modePip.enter()\n  }\n\n  exitPip() {\n    this.modePip.exit()\n  }\n\n  get isPip() {\n    return this.modePip.value\n  }\n\n  webfull() {\n    this.modeWebfull.enter()\n  }\n\n  exitWebfull() {\n    this.modeWebfull.exit()\n  }\n\n  get isWebfull() {\n    return this.modeWebfull.value\n  }\n\n  wide() {}\n\n  exitWide() {}\n\n  get isWide() {\n    return false\n  }\n\n  /** 设置控制栏固定 */\n  solid(flag: boolean) {\n    this.player.template.el.classList.toggle(\"mode-solid\", flag)\n    this.player.events.trigger(flag ? \"solid\" : \"solid_off\")\n  }\n}\n","import { PlayerOptions } from \"@/types\"\nimport MfunsPlayer from \"@/player\"\nimport { keyCode } from \"@/utils/KeyCode.enum\"\n\nexport default class HotKey {\n  player: MfunsPlayer\n  controlMask: HTMLElement\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.controlMask = this.player.template.$videoArea\n    this.initKey()\n    this.initMask()\n  }\n\n  initKey() {\n    document.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n      if (this.player.state.focused) {\n        switch (e.keyCode) {\n          case keyCode.Space:\n            e.preventDefault()\n            this.player.toggle()\n            break\n          case keyCode.LeftArrow:\n            e.preventDefault()\n            this.player.seek(this.player.time - 5)\n            break\n          case keyCode.RightArrow:\n            e.preventDefault()\n            this.player.seek(this.player.time + 5)\n            break\n          case keyCode.UpArrow:\n            e.preventDefault()\n            this.player.setVolume(this.player.volume + 0.1)\n            break\n          case keyCode.DownArrow:\n            e.preventDefault()\n            this.player.setVolume(this.player.volume - 0.1)\n            break\n        }\n      }\n    })\n  }\n\n  initMask() {\n    this.controlMask.addEventListener(\"click\", () => {\n      this.player.toggle()\n    })\n  }\n}\n","import MfunsPlayer from \"@/player\"\nimport { classPrefix, developers, repositoryLink } from \"@/const\"\nimport { html, render } from \"lit-html\"\nimport { VideoPart } from \"@/types\"\n\nconst template = (list: VideoPart[], setPart: (p: number) => void) => html`\n  <div class=\"${classPrefix}-side-panel ${classPrefix}-partlist\">\n    <div class=\"${classPrefix}-partlist-list\">\n      ${list.map(\n        ({ title }, index) => html`\n          <div\n            class=\"${classPrefix}-partlist-list-item\"\n            @click=${() => {\n              setPart(index + 1)\n            }}\n          >\n            <div class=\"${classPrefix}-partlist-list-id\">P${index + 1}</div>\n            <div class=\"${classPrefix}-partlist-list-title\">${title}</div>\n          </div>\n        `\n      )}\n    </div>\n  </div>\n`\n\nexport default class SidePartList {\n  player: MfunsPlayer\n  title = \"分P列表\"\n  /** 是否挂载到播放器外部 */\n  mounted = false\n  el: HTMLElement\n  constructor(player: MfunsPlayer) {\n    this.player = player\n    const fragment = new DocumentFragment()\n    render(\n      template(player.video.list, (p) => {\n        this.player.setPart(p, true)\n        this.player.side.hide()\n      }),\n      fragment\n    )\n    this.el = fragment.querySelector(`.${classPrefix}-side-panel`)!\n  }\n}\n","import { html, render } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\nimport MfunsPlayer from \"@/player\"\nimport { PlayerOptions } from \"@/types\"\nimport SidePartList from \"./SidePartList\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-side-mask\"></div>\n  <div class=\"${classPrefix}-side\">\n    <div class=\"${classPrefix}-side-head\">\n      <div class=\"${classPrefix}-side-title\"></div>\n      <div class=\"${classPrefix}-side-close\">\n        <i class=\"${classPrefix}-controller-icon mp-icon-close\"></i>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-side-content\"></div>\n  </div>\n`\n\nexport interface SidePanel {\n  title: string\n  el: HTMLElement\n  mounted: boolean\n}\n\nexport default class Side {\n  player: MfunsPlayer\n  container: HTMLElement\n  el: HTMLElement\n  $mask: HTMLElement\n  $content: HTMLElement\n  $title: HTMLElement\n  $close: HTMLElement\n  list: Record<string, SidePanel> = {}\n  current = \"\"\n  get isShow(): boolean {\n    return this.container.classList.contains(\"state-show\")\n  }\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.container = player.template.$sideWrap\n    render(template(), this.container)\n    this.el = this.container.querySelector(`.${classPrefix}-side`)!\n    this.$mask = this.container.querySelector(`.${classPrefix}-side-mask`)!\n    this.$content = this.el.querySelector(`.${classPrefix}-side-content`)!\n    this.$title = this.el.querySelector(`.${classPrefix}-side-title`)!\n    this.$close = this.el.querySelector(`.${classPrefix}-side-close`)!\n\n    // --- 事件 --- //\n    this.$mask.addEventListener(\"click\", () => {\n      this.hide()\n    })\n    this.$close.addEventListener(\"click\", () => {\n      this.hide()\n    })\n\n    // --- 预装功能 --- //\n    this.add(\"partlist\", new SidePartList(this.player))\n  }\n\n  /** 显示特定侧边面板 */\n  show(id: string) {\n    const panel = this.list[id]\n    if (panel && !panel.mounted) {\n      if (id != this.current) {\n        this.removeCurrent()\n        this.current = id\n        this.$title.innerText = panel.title\n        panel.el.classList.add(\"state-show\")\n        this.player.events.trigger(\"side:show\", id)\n      }\n      this.container.classList.add(\"state-show\")\n    } else {\n      this.hide()\n    }\n    if (panel.mounted) {\n      this.player.events.trigger(\"side:show_mounted\", id)\n    }\n  }\n\n  /** 切换面板状态 */\n  toggle(id: string) {\n    if (id == this.current && this.isShow) {\n      this.hide()\n    } else {\n      this.show(id)\n    }\n  }\n\n  /** 隐藏侧边面板 */\n  hide() {\n    this.container.classList.remove(\"state-show\")\n  }\n  /** 添加面板 */\n  add(id: string, panel: SidePanel) {\n    this.list[id] = panel\n    this.$content.append(panel.el)\n  }\n\n  mount(container: HTMLElement | null) {\n    ;(container || this.el).append(this.$content)\n  }\n\n  /** 侧边面板挂载到其他元素 */\n  mountPanel(id: string, container?: HTMLElement) {\n    const panel = this.list[id]\n    if (panel) {\n      ;(container || this.$content).append(panel.el)\n      panel.el.classList.remove(\"state-show\")\n      if (container) {\n        panel.mounted = true\n      } else {\n        panel.mounted = false\n      }\n    }\n    if (id == this.current) {\n      this.removeCurrent()\n    }\n  }\n\n  /** 清除当前面板显示 */\n  private removeCurrent() {\n    const panel = this.list[this.current]\n    if (panel) panel.el.classList.remove(\"state-show\")\n    this.player.events.trigger(\"side:hide\", this.current)\n    this.$title.innerText = \"\"\n    this.current = \"\"\n  }\n}\n","import { classPrefix } from \"@/const\"\nimport MfunsPlayer from \"@/player\"\nimport { DanmakuApiOptions, DanmakuItem, PlayerOptions } from \"@/types\"\nimport { html, render } from \"lit-html\"\n\nconst template = (list: MenuItem[]) => html`\n  <div class=\"${classPrefix}-contextmenu\">\n    <ul class=\"${classPrefix}-contextmenu-danmaku mp-black\"></ul>\n    <ul class=\"${classPrefix}-contextmenu-menu mp-black\">\n      ${list.map(\n        ({ name, onClick }) => html`\n          <li class=\"${classPrefix}-contextmenu-item\" @click=${onClick}>${name}</li>\n        `\n      )}\n    </ul>\n  </div>\n`\nconst templateDanmaku = (\n  danmaku: DanmakuItem[],\n  operation: (dm: DanmakuItem) => [string, (dm: DanmakuItem) => void, unknown][]\n) => html`\n  ${danmaku.map(\n    (dm) => html`\n      <li class=\"${classPrefix}-contextmenu-danmaku-item\">\n        <div class=\"${classPrefix}-contextmenu-danmaku-item-content\">${dm.content}</div>\n        <div class=\"${classPrefix}-contextmenu-danmaku-item-operate\">\n          ${operation(dm).map(\n            ([label, onClick]) => html`<div\n              class=\"${classPrefix}-contextmenu-danmaku-item-operate-btn\"\n              @click=${() => {\n                onClick(dm)\n              }}\n            >\n              ${label}\n            </div>`\n          )}\n        </div>\n      </li>\n    `\n  )}\n`\n\nconst copyClip = (content: string) => {\n  navigator.clipboard.writeText(content).then(\n    (res) => {\n      // success\n    },\n    (rej) => {\n      // fail\n    }\n  )\n}\n\ninterface MenuItem {\n  name: string\n  onClick?: () => void\n}\n\nexport default class ContextMenu {\n  player: MfunsPlayer\n  container: HTMLElement\n  el: HTMLElement\n  $danmaku: HTMLElement\n  $menu: HTMLElement\n  private isShow = false\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n\n    const menuList: MenuItem[] = [\n      {\n        name: \"快捷键说明\",\n        onClick: () => {\n          this.player.modal.show(\"hotkey\")\n        },\n      },\n      {\n        name: `Mfuns Player v${MfunsPlayer.version}-${MfunsPlayer.gitHash}`,\n        onClick: () => {\n          this.player.modal.show(\"about\")\n        },\n      },\n    ]\n\n    this.container = this.player.template.$contextmenuWrap\n    render(template(menuList), this.container)\n    this.el = this.container.querySelector(`.${classPrefix}-contextmenu`)!\n    this.$danmaku = this.el.querySelector(`.${classPrefix}-contextmenu-danmaku`)!\n    this.$menu = this.el.querySelector(`.${classPrefix}-contextmenu-menu`)!\n    this.player.template.$videoArea.addEventListener(\"contextmenu\", (e: MouseEvent) => {\n      e.preventDefault()\n      const clientRect = this.player.template.$videoArea.getBoundingClientRect()\n      const x = e.clientX - clientRect.left\n      const y = e.clientY - clientRect.top\n      this.show(x, y)\n      const captured = this.player.danmaku.engine.captureDanmaku(x, y, 4)\n      this.showDanmaku(captured)\n    })\n    this.container.addEventListener(\"contextmenu\", (e: MouseEvent) => {\n      e.preventDefault()\n      const clientRect = this.container.getBoundingClientRect()\n      const x = e.clientX - clientRect.left\n      const y = e.clientY - clientRect.top\n      this.show(x, y)\n      const captured = this.player.danmaku.engine.captureDanmaku(x, y, 4)\n      this.showDanmaku(captured)\n    })\n    document.addEventListener(\"click\", () => {\n      if (this.isShow) {\n        this.hide()\n      }\n    })\n  }\n  show(x: number, y: number) {\n    this.container.classList.add(\"state-show\")\n    const clientRect = this.player.template.$videoArea.getBoundingClientRect()\n    if (x + this.el.offsetWidth >= clientRect.width) {\n      this.el.style.right = clientRect.width - x + \"px\"\n      this.el.style.left = \"initial\"\n    } else {\n      this.el.style.left = x + \"px\"\n      this.el.style.right = \"initial\"\n    }\n    if (y + this.el.offsetHeight >= clientRect.height) {\n      this.el.style.bottom = clientRect.height - y + \"px\"\n      this.el.style.top = \"initial\"\n    } else {\n      this.el.style.top = y + \"px\"\n      this.el.style.bottom = \"initial\"\n    }\n    this.isShow = true\n  }\n  showDanmaku(danmaku: DanmakuItem[]) {\n    const api = this.player.danmaku.api\n    const operate = this.player.danmaku.operate\n    if (danmaku.length) {\n      this.$danmaku.style.display = \"\"\n    } else {\n      this.$danmaku.style.display = \"none\"\n    }\n    render(\n      templateDanmaku(danmaku, (dm) => {\n        const myDanmaku = dm.user == this.player.userId\n        return [\n          [\n            \"举报\",\n            (dm: DanmakuItem) => {\n              operate.report(dm)\n            },\n            !myDanmaku && api?.report,\n          ],\n          [\n            \"屏蔽\",\n            (dm: DanmakuItem) => {\n              operate.blockUser(dm.user, true)\n            },\n            !myDanmaku && api?.blockUser,\n          ],\n          [\n            \"撤回\",\n            (dm: DanmakuItem) => {\n              operate.recall(dm)\n            },\n            myDanmaku && api?.recall,\n          ],\n          [\n            \"复制\",\n            (dm: DanmakuItem) => {\n              copyClip(dm.content)\n            },\n            true,\n          ],\n        ].filter((v) => v[2]) as [string, (dm: DanmakuItem) => void, unknown][]\n      }),\n      this.$danmaku\n    )\n  }\n  hide() {\n    this.container.classList.remove(\"state-show\")\n    this.isShow = false\n  }\n}\n","import MfunsPlayer from \"@/player\"\nimport { classPrefix, developers, repositoryLink } from \"@/const\"\nimport { html, render } from \"lit-html\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-modal-panel ${classPrefix}-about\">\n    <div class=\"${classPrefix}-about-logo\"></div>\n    <div class=\"${classPrefix}-about-version\">\n      version ${MfunsPlayer.version}-${MfunsPlayer.gitHash}\n    </div>\n    <div>github: <a href=\"${repositoryLink}\" target=\"_blank\">github</a></div>\n    <div>开发者</div>\n    <ul class=\"${classPrefix}-about-developers\">\n      ${developers.map(\n        ({ name, id, link }) => html`\n          <li>\n            <a href=\"${link}\" target=\"_blank\">${name}</a>\n          </li>\n        `\n      )}\n      <li></li>\n    </ul>\n  </div>\n`\n\nexport default class ModalAbout {\n  title = \"关于\"\n  el: HTMLElement\n  constructor() {\n    const fragment = new DocumentFragment()\n    render(template(), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-modal-panel`)!\n  }\n}\n","import MfunsPlayer from \"@/player\"\nimport { classPrefix, developers, repositoryLink } from \"@/const\"\nimport { html, render } from \"lit-html\"\n\nconst template = (list: HotkeyInfo[]) => html`\n  <div class=\"${classPrefix}-modal-panel ${classPrefix}-hotkey\">\n    <div class=\"${classPrefix}-hotkey-list\">\n      ${list.map(\n        ({ key, description }) => html`\n          <div class=\"${classPrefix}-hotkey-list-item\">\n            <div class=\"${classPrefix}-hotkey-list-key\">${key}</div>\n            <div class=\"${classPrefix}-hotkey-list-description\">${description}</div>\n          </div>\n        `\n      )}\n    </div>\n  </div>\n`\n\ninterface HotkeyInfo {\n  key: string\n  description: string\n}\n\nexport default class ModalHotkey {\n  title = \"快捷键说明\"\n  el: HTMLElement\n  constructor() {\n    const hotkeyInfoList = [\n      { key: \"Space\", description: \"播放/暂停\" },\n      { key: \"→\", description: \"快进5秒\" },\n      { key: \"←\", description: \"快退5秒\" },\n      { key: \"↑\", description: \"音量增加10%\" },\n      { key: \"↓\", description: \"音量降低10%\" },\n    ]\n\n    const fragment = new DocumentFragment()\n    render(template(hotkeyInfoList), fragment)\n    this.el = fragment.querySelector(`.${classPrefix}-modal-panel`)!\n  }\n}\n","import { html, render } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\nimport MfunsPlayer from \"@/player\"\nimport { PlayerOptions } from \"@/types\"\nimport ModalAbout from \"./ModalAbout\"\nimport ModalHotkey from \"./ModalHotkey\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-modal-mask\"></div>\n  <div class=\"${classPrefix}-modal\">\n    <div class=\"${classPrefix}-modal-head\">\n      <div class=\"${classPrefix}-modal-title\"></div>\n      <div class=\"${classPrefix}-modal-close\">\n        <i class=\"${classPrefix}-controller-icon mp-icon-close\"></i>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-modal-content\"></div>\n  </div>\n`\n\nexport interface ModalPanel {\n  title: string\n  el: HTMLElement\n}\n\nexport default class Modal {\n  player: MfunsPlayer\n  container: HTMLElement\n  el: HTMLElement\n  $mask: HTMLElement\n  $content: HTMLElement\n  $title: HTMLElement\n  $close: HTMLElement\n  list: Record<string, ModalPanel> = {}\n  current = \"\"\n  get isShow(): boolean {\n    return this.container.classList.contains(\"state-show\")\n  }\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.container = player.template.$modalWrap\n    render(template(), this.container)\n    this.el = this.container.querySelector(`.${classPrefix}-modal`)!\n    this.$mask = this.container.querySelector(`.${classPrefix}-modal-mask`)!\n    this.$content = this.el.querySelector(`.${classPrefix}-modal-content`)!\n    this.$title = this.el.querySelector(`.${classPrefix}-modal-title`)!\n    this.$close = this.el.querySelector(`.${classPrefix}-modal-close`)!\n\n    this.init(options)\n  }\n\n  private init(options: PlayerOptions) {\n    this.$mask.addEventListener(\"click\", () => {\n      this.hide()\n    })\n    this.$close.addEventListener(\"click\", () => {\n      this.hide()\n    })\n    this.add(\"about\", new ModalAbout())\n    this.add(\"hotkey\", new ModalHotkey())\n  }\n\n  show(id: string) {\n    if (id != this.current) {\n      const panel = this.list[id]\n      if (panel) {\n        this.removeCurrent()\n        this.current = id\n        this.$title.innerText = panel.title\n        panel.el.classList.add(\"state-show\")\n      }\n    }\n    this.container.classList.add(\"state-show\")\n  }\n\n  toggle(id: string) {\n    if (id == this.current && this.isShow) {\n      this.hide()\n    } else {\n      this.show(id)\n    }\n  }\n\n  hide() {\n    this.container.classList.remove(\"state-show\")\n  }\n\n  add(id: string, panel: ModalPanel) {\n    this.list[id] = panel\n    this.$content.append(panel.el)\n  }\n\n  private removeCurrent() {\n    const panel = this.list[this.current]\n    if (panel) panel.el.classList.remove(\"state-show\")\n    this.$title.innerText = \"\"\n    this.current = \"\"\n  }\n}\n","import MfunsPlayer from \"@/player\"\nimport { PlayerOptions, ThemeOptions } from \"@/types\"\nconst themeOptionsVars = {\n  primaryColor: \"--mp-primary-color\",\n  secondaryColor: \"--mp-secondary-color\",\n  borderRadius: \"--mp-border-radius\",\n  bgWhite: \"--mp-bg-white\",\n  bgBlack: \"--mp-bg-black\",\n  panelWhite: \"--mp-panel-white\",\n  panelBlack: \"--mp-panel-black\",\n}\n\nexport default class Theme implements ThemeOptions {\n  player: MfunsPlayer\n  primaryColor?: string\n  secondaryColor?: string\n  borderRadius?: string\n  bgWhite?: string\n  bgBlack?: string\n  panelWhite?: string\n  panelBlack?: string\n  /** 绑定了主题变量的DOM元素 */\n  private themeElement: HTMLElement[]\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.themeElement = [this.player.container]\n    this.setTheme(options.theme || {})\n  }\n  /** 设置主题 */\n  setTheme(theme: ThemeOptions) {\n    Object.assign(this, theme)\n    this.themeElement.forEach((el) => {\n      let name: keyof ThemeOptions\n      for (name in theme) {\n        el.style.setProperty(themeOptionsVars[name], theme[name]!)\n      }\n    })\n  }\n  /** 设置某个主题属性 */\n  setThemeProperty(name: keyof ThemeOptions, value: string) {\n    this[name] = value\n    this.themeElement.forEach((el) => {\n      el.style.setProperty(themeOptionsVars[name], value)\n    })\n  }\n  /** 为元素绑定主题变量 */\n  public addThemeElement(el: HTMLElement) {\n    this.themeElement.push(el)\n    let name: keyof typeof themeOptionsVars\n    for (name in themeOptionsVars) {\n      const value = this[name]\n      value && el.style.setProperty(themeOptionsVars[name], value)\n    }\n  }\n}\n","import { classPrefix } from \"@/const\"\nimport { debounce } from \"@/utils/index\"\nimport MfunsPlayer from \"@/player\"\nimport { PlayerOptions } from \"@/types\"\nimport { html, render } from \"lit-html\"\n\nconst template = () => html`\n  <div class=\"${classPrefix}-state-loading\"></div>\n  <div class=\"${classPrefix}-state-volume\"></div>\n  <div class=\"${classPrefix}-state-paused\"></div>\n`\nexport default class State {\n  player: MfunsPlayer\n  container: HTMLElement\n  $stateLoading: HTMLElement\n  $stateVolume: HTMLElement\n  $statePaused: HTMLElement\n\n  /** 播放器聚焦状态，在点选播放器后聚焦 */\n  focused = false\n  /** 播放器活跃状态 */\n  active = false\n  /** 播放器鼠标活跃状态，鼠标在播放器区域内移动时活跃 */\n  mousemove = false\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.container = player.template.$stateWrap\n    this.$stateLoading = this.container.querySelector(`.${classPrefix}-state-loading`)!\n    this.$stateVolume = this.container.querySelector(`.${classPrefix}-state-volume`)!\n    this.$statePaused = this.container.querySelector(`.${classPrefix}-state-paused`)!\n\n    render(template(), this.container)\n    this.init()\n  }\n  init() {\n    // 播放器聚焦\n    document.addEventListener(\n      \"click\",\n      () => {\n        this.focused = false\n      },\n      true\n    )\n    this.player.template.el.addEventListener(\n      \"click\",\n      () => {\n        this.focused = true\n      },\n      true\n    )\n    // 播放器活跃\n    const debounceRemoveActive = debounce(() => {\n      this.mousemove = false\n      this.removeActive()\n    }, 3000)\n    this.player.template.$main.addEventListener(\"mousemove\", () => {\n      this.mousemove = true\n      this.setActive()\n      debounceRemoveActive()\n    })\n    this.player.template.$main.addEventListener(\"mouseleave\", () => {\n      this.mousemove = false\n      this.removeActive()\n    })\n  }\n  /** 设置播放器活跃状态 */\n  public setActive() {\n    if (this.active) return\n    this.player.template.el.classList.add(\"state-active\")\n    this.active = true\n  }\n  /** 试图移除播放器活跃状态 */\n  public removeActive() {\n    if (\n      !this.active ||\n      this.player.controller.isHover ||\n      this.player.controller.isControl ||\n      this.mousemove\n    ) {\n      return\n    }\n    this.player.template.el.classList.remove(\"state-active\")\n    this.active = false\n  }\n}\n\n/**\n * 活跃状态Active判定:\n * - 鼠标位于播放器主体范围内并持续移动，超过一定时间不移动或移出区域会取消Active状态\n * - 鼠标位于控制栏/顶栏区域\n * - 控制栏处于正在控制状态\n */\n","/** 弹幕模式 */\nexport enum DanmakuMode {\n  roll = 1,\n  bottom = 4,\n  top = 5,\n  reverse = 6,\n  special = 7,\n  advanced = 9,\n}\n","import { DanmakuMode } from \"./../enum\"\n/** 播放器弹幕引擎 */\n\nimport { DanmakuItem } from \"@/types\"\nimport { createArray, number2Color } from \"@/utils\"\n\nexport type TrackType = \"roll\" | \"reverse\" | \"top\" | \"bottom\"\n\ninterface DanmakuEngineOptions {\n  fontScale?: number\n  fontFamily?: string\n  fontWeight?: string\n  speed?: number\n  opacity?: number\n  limitArea?: number\n  classPrefix?: string\n  /** 颜色限制 */\n  colorFilter?: boolean\n  /** 获取当前时间函数 */\n  getTime: () => number\n}\n\nexport default class DanmakuEngine {\n  /** 暂停状态 */\n  public paused = false\n\n  /** 隐藏状态 */\n  public hidden = false\n\n  /** 弹幕容器 */\n  public readonly container: HTMLDivElement\n  /** 弹幕字号缩放 */\n  public fontScale: number\n  /** 字体 */\n  public fontFamily: string\n  /** 字重 */\n  public fontWeight: string\n  /** 弹幕移动速度 */\n  public speed: number\n  /** 弹幕不透明度 */\n  public opacity: number\n  /** 基准轨道高度 */\n  public baseTrackHeight: number\n  /** 轨道边距 */\n  public trackPadding: number\n  /** 限制区域 */\n  public limitArea: number\n  /** 颜色屏蔽 */\n  public colorFilter: boolean\n  /** 轨道屏蔽 */\n  public trackFilter: Record<TrackType, boolean> = {\n    roll: false,\n    reverse: false,\n    top: false,\n    bottom: false,\n  }\n  public userFilter: (string | number)[] = []\n  public contentFilter: (string | RegExp)[] = []\n  /** 允许重叠 */\n  public overlap: boolean\n  /** 类名前缀 */\n  public classPrefix: string\n  /** 获取当前时间函数 */\n  public getTime: () => number\n  /** 当前时间 */\n  private time = 0\n\n  /** 弹幕池 */\n  private danmakuPool: DanmakuItem[] = []\n  /** 待添加弹幕索引 */\n  private currentIndex = 0\n  /** 文字测量上下文 */\n  private measureContext: CanvasRenderingContext2D | null = null\n\n  /** 弹幕发射位置与播放器边界的距离 */\n  public startDistance = 2\n  /** 时间偏移 */\n  public timeOffset = 0\n  /** 滚动弹幕基准速度 */\n  public baseSpeed = 100\n  /** 静止弹幕基准持续时间 */\n  public baseDuration = 5\n  /** 弹幕速度增加率k值\n   * 弹幕速度 = baseSpeed * (1 + deltaSpeed * 弹幕宽度)\n   */\n  public deltaSpeed = 0.002\n\n  /** 弹幕轨道高度 */\n  private trackHeights: Record<TrackType, number[]> = {\n    roll: [],\n    reverse: [],\n    top: [],\n    bottom: [],\n  }\n\n  /** 弹幕轨道 */\n  private danmakuTracks: Record<TrackType, HTMLElement[][]> = {\n    roll: [],\n    reverse: [],\n    top: [],\n    bottom: [],\n  }\n\n  constructor(container: HTMLDivElement, options: DanmakuEngineOptions) {\n    this.container = container\n    this.fontScale = options.fontScale ?? 1\n    this.baseTrackHeight = 28\n    this.trackPadding = 6\n    this.speed = options.speed ?? 1\n    this.opacity = options.opacity ?? 1\n    this.limitArea = 1\n    this.overlap = false\n    this.fontFamily = options.fontFamily ?? \"SimHei\"\n    this.fontWeight = options.fontWeight ?? \"bold\"\n    this.classPrefix = options.classPrefix ?? \"mfuns\"\n    this.colorFilter = options.colorFilter || false\n    this.getTime = options.getTime\n\n    this.container.classList.add(`${this.classPrefix}-danmaku`)\n    this.checkDanmaku()\n  }\n\n  play() {\n    this.paused = false\n    this.container.classList.remove(\"state-paused\")\n  }\n\n  pause() {\n    this.paused = true\n    this.container.classList.add(\"state-paused\")\n  }\n\n  /** 发生跳转 */\n  seek() {\n    // 清屏\n    this.clear()\n    // 重新获取当前时间及待添加弹幕索引\n    this.time = this.getTime()\n    const index = this.danmakuPool.findIndex((d) => this.time <= d.time)\n    this.currentIndex = index === -1 ? this.danmakuPool.length : index\n  }\n\n  /** 设置弹幕池 */\n  setPool(dan: DanmakuItem[]) {\n    // 直接设置弹幕池并排序\n    this.danmakuPool = [...dan]\n    this.danmakuPool.sort((a, b) => a.time - b.time)\n    const index = this.danmakuPool.findIndex((d) => this.time <= d.time)\n    this.currentIndex = index === -1 ? this.danmakuPool.length : index\n  }\n\n  /** 重置弹幕池 */\n  reset() {\n    this.clear()\n    this.danmakuPool = []\n    this.currentIndex = 0\n  }\n\n  /** 弹幕池添加弹幕 */\n  add(dan: DanmakuItem[]) {\n    dan.forEach((dm) => {\n      /** 按时间顺序插入弹幕 */\n      const index = this.danmakuPool.findIndex((d) => dm.time <= d.time)\n      this.danmakuPool.splice(index === -1 ? this.danmakuPool.length : index, 0, dm)\n      // 若插入弹幕的时间小于当前时间，则待添加弹幕索引+1\n      if (dm.time < this.time) this.currentIndex += 1\n    })\n  }\n\n  /** 弹幕池移除符合id的弹幕 */\n  remove(ids: (string | number)[]) {\n    const displayed = [\n      ...this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-item`),\n    ]\n    ids.forEach((id) => {\n      const index = this.danmakuPool.findIndex((dm) => dm.id == id)\n      if (index === -1) return\n      this.danmakuPool.splice(index, 1)\n      // 移除位置若小于当前待添加弹幕位置，则待添加弹幕索引-1\n      if (index < this.currentIndex) this.currentIndex -= 1\n      // 从DOM中移除弹幕\n      const el = displayed.find((d) => d.dataset.id === id.toString())\n      if (el) {\n        // 此处不移除DOM是为了使弹幕顺利完成动画，以便轨道自动清除弹幕DOM\n        el.innerHTML = \"\"\n      }\n    })\n  }\n\n  /** 弹幕清屏 */\n  clear(type?: TrackType) {\n    if (type) {\n      this.danmakuTracks[type] = []\n      return\n    }\n    this.danmakuTracks = {\n      roll: [],\n      reverse: [],\n      top: [],\n      bottom: [],\n    }\n    this.trackHeights = {\n      roll: [],\n      reverse: [],\n      top: [],\n      bottom: [],\n    }\n    this.container.innerHTML = \"\"\n  }\n\n  /** 检查弹幕是否需要进入弹幕池 */\n  checkDanmaku() {\n    if (this.danmakuPool.length && !this.paused && !this.hidden) {\n      let item = this.danmakuPool[this.currentIndex]\n      const dan = []\n      // 刷新当前时间\n      this.time = this.getTime()\n      // 若待添加弹幕时间小于当前时间，则持续添加弹幕直到下一条弹幕的时间不小于当前时间为止\n      while (item && item.time < this.time) {\n        if (\n          this.checkTrackFilter(item) &&\n          this.checkColorFilter(item) &&\n          this.checkUserFilter(item) &&\n          this.checkContentFilter(item)\n        ) {\n          dan.push(item)\n        }\n        this.currentIndex += 1\n        item = this.danmakuPool[this.currentIndex]\n      }\n      // console.log(this.currentIndex)\n      this.draw(dan)\n    }\n    window.requestAnimationFrame(() => {\n      this.checkDanmaku()\n    })\n  }\n\n  /** 设置弹幕类型过滤 */\n  setTrackFilter(type: TrackType, value: boolean) {\n    this.trackFilter[type] = value\n    if (value) {\n      this.container\n        .querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-${type}`)\n        .forEach((el) => {\n          el.innerHTML = \"\"\n        })\n    }\n  }\n\n  /** 检查弹幕类型过滤 */\n  checkTrackFilter(dm: DanmakuItem) {\n    return !this.trackFilter[DanmakuMode[dm.mode] as TrackType]\n  }\n\n  /** 设置弹幕颜色过滤 */\n  setColorFilter(value: boolean) {\n    this.colorFilter = value\n    if (value) {\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      )\n      items.forEach((el) => {\n        if (el.style.color !== \"rgb(255, 255, 255)\") {\n          el.innerHTML = \"\"\n        }\n      })\n    }\n  }\n\n  /** 检查弹幕颜色过滤 */\n  checkColorFilter(dm: DanmakuItem) {\n    return !this.colorFilter || dm.color === 16777215\n  }\n\n  /** 设置内容过滤 */\n  setContentFilter(content: string | RegExp, value: boolean) {\n    const contentIndex = this.contentFilter.indexOf(content)\n    if (value) {\n      if (contentIndex > -1) {\n        return\n      }\n      this.contentFilter.push(content)\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      )\n      if (typeof content == \"string\") {\n        items.forEach((el) => {\n          if (el.innerText.includes(content)) {\n            el.innerHTML = \"\"\n          }\n        })\n      } else {\n        items.forEach((el) => {\n          if (content.test(el.innerText)) {\n            el.innerHTML = \"\"\n          }\n        })\n      }\n    } else {\n      contentIndex > -1 && this.contentFilter.splice(contentIndex, 1)\n    }\n  }\n  /** 检查弹幕内容过滤 */\n  checkContentFilter(dm: DanmakuItem) {\n    for (const keyword of this.contentFilter) {\n      if (typeof keyword == \"string\") {\n        if (dm.content.search(keyword)) return false\n      } else if (keyword.test(dm.content)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  /** 设置用户过滤 */\n  setUserFilter(user: string | number, value: boolean) {\n    const contentIndex = this.userFilter.indexOf(user)\n    if (value) {\n      if (contentIndex > -1) {\n        return\n      }\n      this.userFilter.push(user)\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      )\n      items.forEach((el) => {\n        if (el.dataset.user == user) {\n          el.innerHTML = \"\"\n        }\n      })\n    } else {\n      contentIndex > -1 && this.userFilter.splice(contentIndex, 1)\n    }\n  }\n  /** 检查用户过滤 */\n  checkUserFilter(dm: DanmakuItem) {\n    return this.userFilter.indexOf(dm.user) == -1\n  }\n\n  /** 绘制弹幕 */\n  draw(dan: DanmakuItem[]) {\n    /** 弹幕轨道高度 */\n    const itemHeight = this.baseTrackHeight * this.fontScale\n    /** 弹幕容器宽度 */\n    const containerWidth = this.container.offsetWidth\n    /** 弹幕区域高度 */\n    const containerHeight = this.container.offsetHeight * this.limitArea\n    /** 轨道数量 */\n    const itemY = Math.floor(containerHeight / itemHeight)\n    // console.log(itemY);\n    if (this.trackHeights.roll.length !== itemY) {\n      this.trackHeights.roll = createArray(itemY, itemHeight)\n    }\n    if (this.trackHeights.reverse.length !== itemY) {\n      this.trackHeights.reverse = createArray(itemY, itemHeight)\n    }\n    if (this.trackHeights.top.length !== itemY) {\n      this.trackHeights.top = createArray(itemY, itemHeight)\n    }\n    if (this.trackHeights.bottom.length !== itemY) {\n      this.trackHeights.bottom = createArray(itemY, itemHeight)\n    }\n    /** 弹幕与弹幕容器右侧的距离(滚动弹幕) */\n    const danItemRight = (el: HTMLElement) => {\n      const containerRight = this.container.getBoundingClientRect().right\n      const elRight = el.getBoundingClientRect().right\n      return containerRight - elRight\n    }\n    /** 弹幕与弹幕容器左侧的距离(逆向弹幕) */\n    const danItemLeft = (el: HTMLElement) => {\n      const containerLeft = this.container.getBoundingClientRect().left\n      const elLeft = el.getBoundingClientRect().left\n      return elLeft - containerLeft\n    }\n    /** 获取弹幕速度 */\n    const getSpeed = (width: number) => this.baseSpeed * (1 + this.deltaSpeed * width) * this.speed\n    /** 获取单个轨道内所有弹幕 */\n    const getDOMTrack = (type: string, i: number) => {\n      return [\n        ...this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-${type}`),\n      ].filter((el: HTMLElement) => el.dataset.track === `${i}`)\n    }\n    /** 获取弹幕可进入的轨道 */\n    const getTrack = (ele: HTMLElement, type: TrackType, width: number) => {\n      // 对可用范围内的轨道进行一次遍历\n      forTrack: for (let i = 0; this.overlap || i < itemY; i++) {\n        const DOMTrack = getDOMTrack(type, i)\n        /** 该轨道内的所有弹幕 */\n        let track = this.danmakuTracks[type][i]\n        this.danmakuTracks[type][i] = DOMTrack\n        if (track && track.length) {\n          // 如果该轨道存在弹幕\n          if (type === \"roll\") {\n            /** 弹幕从发射到触碰另一边边界到所需要的时间 */\n            const enterTime = containerWidth / getSpeed(width)\n            if (track.length !== DOMTrack.length) {\n              //\n              track = DOMTrack\n            }\n            for (const dm of track) {\n              const danRight = danItemRight(dm) - 10\n              this.trackHeights[type][i] = parseInt(dm.style.fontSize) + this.trackPadding\n              // 如果滚动弹幕存在同一轨道碰撞的可能，则该轨道不可装填弹幕\n              if (\n                danRight <=\n                  containerWidth - enterTime * getSpeed(dm.getBoundingClientRect().width) ||\n                danRight <= 0\n              ) {\n                // 轨道高度设置为该条弹幕的高度\n                continue forTrack\n              }\n            }\n          } else if (type === \"reverse\") {\n            /** 弹幕从发射到触碰另一边边界到所需要的时间 */\n            const enterTime = containerWidth / getSpeed(width)\n            if (track.length !== DOMTrack.length) {\n              //\n              track = DOMTrack\n            }\n            for (const dm of track) {\n              const danLeft = danItemLeft(dm) - 10\n              this.trackHeights[type][i] = parseInt(dm.style.fontSize) + this.trackPadding\n              // 如果逆向弹幕存在同一轨道碰撞的可能，则该轨道不可装填弹幕\n              if (\n                danLeft <=\n                  containerWidth - enterTime * getSpeed(dm.getBoundingClientRect().width) ||\n                danLeft <= 0\n              ) {\n                continue forTrack\n              }\n            }\n          } else {\n            // 非滚动弹幕该轨道不可装填\n            continue forTrack\n          }\n          // 轨道弹幕组遍历完毕，组内所有弹幕均完全进入容器，可以向该轨道装填弹幕\n          this.danmakuTracks[type][i].push(ele)\n          // 动画结束后，需从轨道弹幕组中移除该弹幕\n          ele.addEventListener(\"animationend\", () => {\n            const index = this.danmakuTracks[type][i]?.indexOf(ele)\n            index && this.danmakuTracks[type][i]?.splice(index, 1)\n          })\n          return i\n        } else {\n          // 如果该轨道没有弹幕，可以向该轨道装填弹幕\n          if (Array.isArray(this.danmakuTracks[type][i])) {\n            this.danmakuTracks[type][i].push(ele)\n          } else {\n            this.danmakuTracks[type][i] = [ele]\n          }\n\n          ele.addEventListener(\"animationend\", () => {\n            const index = this.danmakuTracks[type][i]?.indexOf(ele)\n            index && this.danmakuTracks[type][i]?.splice(index, 1)\n          })\n          return i\n        }\n      }\n      // 遍历完毕，所有轨道都不可用，返回-1\n      return -1\n    }\n\n    const docFragment = document.createDocumentFragment()\n\n    for (let i = 0; i < dan.length; i++) {\n      const dm = dan[i]\n      /** 忽略非普通弹幕 */\n      if (dm.mode >= 7) {\n        continue\n      }\n      /** 弹幕DOM */\n      const item = document.createElement(\"div\")\n      item.classList.add(`${this.classPrefix}-danmaku-item`)\n      item.classList.add(`${this.classPrefix}-danmaku-${DanmakuMode[dm.mode]}`)\n      item.innerHTML = `<span>${dm.content.replace(/(\\\\n)/g, \"\\n\")}</span>`\n      if (typeof dm.color == \"number\") {\n        item.style.color = number2Color(dm.color)\n      } else {\n        item.style.color = dm.color\n      }\n      item.style.opacity = this.opacity.toString()\n      item.style.fontSize = +dm.size * this.fontScale + \"px\"\n      /** 弹幕运动结束后，从DOM中移除该弹幕 */\n      item.addEventListener(\"animationend\", () => {\n        if ([...this.container.children].indexOf(item) > -1) this.container.removeChild(item)\n      })\n\n      /** 弹幕内容宽度 */\n      const itemWidth = this.measureTextWidth(\n        dm.content,\n        `${this.fontWeight} ${+dm.size * this.fontScale}px ${this.fontFamily}`\n      )\n\n      /** 轨道类型 */\n      let trackType = DanmakuMode[dm.mode] as TrackType\n      /** 轨道位置 */\n      let track: number\n      /** 轨道序号 */\n      let trackIndex\n      // adjust\n      switch (trackType) {\n        case \"roll\":\n        case \"reverse\":\n          // 无限弹幕模式下轨道序号可能大于itemY，可通过取余得到实际轨道位置\n          trackIndex = getTrack(item, trackType, itemWidth)\n          track = trackIndex % itemY\n          // console.log(track);\n          if (track >= 0) {\n            const maxTop = this.trackHeights[trackType]\n              .slice(0, itemY)\n              .reduce((prev, cur) => prev + cur, 0)\n            const top =\n              this.trackHeights[trackType].slice(0, track).reduce((prev, cur) => prev + cur, 0) %\n              maxTop\n            // console.log(top, track);\n            if (top + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop()\n              return\n            }\n            const speed = getSpeed(itemWidth)\n            const distance = itemWidth + containerWidth + this.startDistance * 2\n            item.dataset.track = trackIndex.toString()\n            item.style.width = itemWidth + 1 + \"px\"\n            item.style.top = top + \"px\"\n            item.style.fontFamily = this.fontFamily\n            item.style.fontWeight = this.fontWeight\n            item.style.setProperty(\"--duration\", `${distance / speed}s`) // 持续时间\n            item.style.setProperty(\"--offset\", `${containerWidth + this.startDistance}px`) // 起始位置\n            item.style.setProperty(\"--translateX\", `${-distance}px`) // 位移距离\n          }\n          break\n        case \"top\":\n          track = getTrack(item, trackType, 0) % itemY\n          if (track >= 0) {\n            const topArr: HTMLElement[] = []\n            const topDan = this.danmakuTracks.top\n            for (const t of topDan) {\n              topArr.push(...t)\n            }\n            const top = topArr\n              .map((el) => {\n                return parseInt(el.style.fontSize) + this.trackPadding\n              })\n              .slice(0, track)\n              .reduce((prev, cur) => prev + cur, 0)\n\n            if (top + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop()\n              return\n            }\n            item.dataset.track = track.toString()\n            item.style.width = itemWidth + 1 + \"px\"\n            item.style.marginLeft = `-${(itemWidth + 1) * 0.5}px`\n            item.style.top = top + \"px\"\n            item.style.fontFamily = this.fontFamily\n            item.style.fontWeight = this.fontWeight\n            item.style.setProperty(\"--duration\", `${this.baseDuration / this.speed}s`) // 持续时间\n          }\n          break\n        case \"bottom\":\n          trackType = \"bottom\"\n          track = getTrack(item, trackType, 0) % itemY\n          if (track >= 0) {\n            const bottomArr: HTMLElement[] = []\n            const bottomDan = this.danmakuTracks.bottom\n            for (const t of bottomDan) {\n              bottomArr.push(...t)\n            }\n            const bottom = bottomArr\n              .map((el) => {\n                return parseInt(el.style.fontSize) + this.trackPadding\n              })\n              .slice(0, track)\n              .reduce((prev, cur) => prev + cur, 0)\n\n            if (bottom + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop()\n              return\n            }\n            item.dataset.track = track.toString()\n            item.style.width = itemWidth + 1 + \"px\"\n            item.style.marginLeft = `-${(itemWidth + 1) * 0.5}px`\n            item.style.bottom = bottom + \"px\"\n            item.style.fontFamily = this.fontFamily\n            item.style.fontWeight = this.fontWeight\n            item.style.setProperty(\"--duration\", `${this.baseDuration / this.speed}s`) // 持续时间\n          }\n          break\n        default:\n          track = -1\n          console.error(`无法处理的弹幕模式: ${dm.mode}`)\n      }\n      if (track >= 0) {\n        item.dataset.id = dm.id.toString()\n        item.dataset.user = dm.user.toString()\n        // 添加弹幕到容器\n        this.container.appendChild(item)\n      }\n    }\n    return docFragment\n  }\n  /** 测量字体宽度 */\n  measureTextWidth(text: string, font: string) {\n    if (!this.measureContext) {\n      this.measureContext = document.createElement(\"canvas\").getContext(\"2d\")!\n    }\n    this.measureContext.font = font\n    return this.measureContext.measureText(text).width\n  }\n  /** 根据某一坐标捕获弹幕DOM */\n  captureDanmakuDOM(x: number, y: number, range: number, single = false) {\n    const result: HTMLElement[] = []\n    // 遍历所有在屏上的弹幕\n    const items = this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-item`)\n    for (const el of items) {\n      if (el.innerHTML) {\n        // 获取检测边界\n        const elRect = el.getBoundingClientRect()\n        const containerRect = this.container.getBoundingClientRect()\n        const edgeLeft = elRect.left - containerRect.left\n        const edgeRight = elRect.right - containerRect.left\n        const edgeTop = elRect.top - containerRect.top\n        const edgeBottom = elRect.bottom - containerRect.top\n        if (\n          x >= edgeLeft - range &&\n          x <= edgeRight + range &&\n          y >= edgeTop - range &&\n          y <= edgeBottom + range\n        ) {\n          result.push(el)\n          // 如果只要求获取一个元素，则停止遍历以优化性能\n          if (single) return result\n        }\n      }\n    }\n    return result\n  }\n  /** 根据某一坐标捕获弹幕 */\n  captureDanmaku(x: number, y: number, range: number, single = false) {\n    const resultDOM = this.captureDanmakuDOM(x, y, range, single)\n    const result: DanmakuItem[] = []\n    for (const el of resultDOM) {\n      const dm = this.getDanmakuById(el.dataset.id!)\n      if (dm) {\n        result.push(dm)\n      }\n    }\n    return result\n  }\n  /** 根据id获取弹幕 */\n  getDanmakuById(id: string | number) {\n    return this.danmakuPool.find((dm) => dm.id.toString() === id.toString())\n  }\n\n  /** 显示弹幕 */\n  show() {\n    this.hidden = false\n  }\n\n  /** 隐藏弹幕 */\n  hide() {\n    this.hidden = true\n    this.clear()\n  }\n}\n","let count = 1000\nconst ar = [\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"0\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n]\n\nexport function randomId() {\n  const hs = []\n  const al = ar.length\n  for (let i = 0; i < 8; i++) {\n    hs.push(ar[Math.floor(Math.random() * al)])\n  }\n  count++\n  return hs.join(\"\") + `${count}`\n}\n","import { randomId } from \"@/utils/randomId\"\nimport { DanmakuItem } from \"../types\"\n\ninterface DanmakuParseItem {\n  data: any\n  type: string\n  origin?: string\n}\n\ninterface DanmakuParserOptions {\n  defaultParser: string\n  list?: Record<string, DanmakuParserFunction>\n}\n\ntype DanmakuParserFunction = (data: any) => DanmakuItem[]\n\n/** 弹幕格式转换，将获取到的弹幕转换为播放器弹幕格式 */\nexport default class DanmakuParser {\n  defaultParser: string\n\n  list: Record<string, DanmakuParserFunction>\n\n  constructor({ defaultParser }: DanmakuParserOptions) {\n    this.defaultParser = defaultParser || \"bilibili-xml\"\n    this.list = {\n      dplayer: (data: [number, number, number, number | string, string, number, number][]) =>\n        data.map((item, i) => ({\n          time: item[0],\n          mode: [1, 5, 4, 6][item[1]],\n          color: item[2],\n          user: item[3],\n          content: item[4],\n          size: 25,\n          date: 0,\n          id: randomId(),\n        })),\n      mfuns: (data: [number, number, number, string, string, number, number, number][]) =>\n        data.map((item) => ({\n          time: item[0],\n          mode: item[1],\n          color: item[2],\n          user: item[3],\n          content: item[4],\n          size: item[5],\n          date: item[6] > 1 ? item[6] : 0,\n          id: item[7],\n        })),\n      \"bilibili-xml\": (data: string) => {\n        const bilibiliXMLParser = (xmlData: string) => {\n          const dan: [string, any[]][] = []\n          const xmlDoc = new DOMParser().parseFromString(xmlData, \"text/xml\")\n          // 获取xml文档的所有子节点\n          const nodeList = xmlDoc.childNodes\n          const generate = (nodeList: any) => {\n            for (let i = 0; i < nodeList.length; i++) {\n              const currentNode = nodeList[i]\n              if (currentNode?.attributes?.length && i > 0) {\n                const m = currentNode.attributes[0].nodeValue.split(\",\")\n                const c = currentNode.innerHTML\n                dan.push([c, m])\n              } else if (currentNode.childNodes.length > 0) {\n                generate(currentNode.childNodes)\n              }\n            }\n          }\n          generate(nodeList)\n          return dan.map(([c, m]) => ({\n            time: +m[0],\n            mode: +m[1],\n            color: +m[3],\n            user: m[6],\n            content: c,\n            size: +m[2] ?? 25,\n            date: +m[4] ?? 0,\n            id: +m[7],\n          }))\n        }\n        return bilibiliXMLParser(data)\n      },\n    }\n  }\n\n  /** 将获取到的弹幕转换为播放器弹幕格式 */\n  parse({ data, type }: DanmakuParseItem) {\n    const parser = this.list[type]\n    try {\n      return parser(data)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n","import { DanmakuItem, DanmakuSendItem, OperationResult } from \"@/types\"\nimport MfunsPlayer from \"@/player\"\nimport Danmaku from \".\"\n\nexport default class DanmakuOperate {\n  danmaku: Danmaku\n  player: MfunsPlayer\n  constructor(danmaku: Danmaku) {\n    this.danmaku = danmaku\n    this.player = danmaku.player\n  }\n\n  /**\n   * 发送弹幕\n   * @param danmaku 要发送的弹幕\n   * @return 操作结果\n   * */\n  async send(danmaku: DanmakuSendItem): Promise<OperationResult> {\n    let result = await this.danmaku?.api?.send?.({\n      api: this.danmaku.api.url,\n      id: this.player.video.list[this.player.video.part].danmakuId || 0,\n      danmaku,\n    })\n    result ??= {\n      success: false,\n      message: \"发送失败\",\n    }\n    // 操作成功后将弹幕添加到弹幕池\n    if (result.success) {\n      this.danmaku.add([\n        Object.assign(\n          {\n            id: `send:${Date.now()}`,\n            date: Math.floor(Date.now() / 1000),\n            user: this.player.userId,\n          },\n          danmaku\n        ),\n      ])\n    }\n    return result\n  }\n\n  /**\n   * 举报弹幕\n   * @param danmaku 要举报的弹幕\n   * @return 操作结果\n   * */\n  async report(danmaku: DanmakuItem): Promise<OperationResult> {\n    let result = await this.danmaku?.api?.report?.({ api: this.danmaku.api.url, danmaku })\n    result ??= {\n      success: false,\n      message: \"操作失败\",\n    }\n    // 操作成功后从弹幕池移除该弹幕\n    if (result.success) {\n      this.danmaku.remove([danmaku.id])\n    }\n    return result\n  }\n\n  /**\n   * 删除弹幕\n   * @param danmaku 要删除的弹幕\n   * @return 操作结果\n   * */\n  async delete(danmaku: DanmakuItem[]): Promise<OperationResult> {\n    let result = await this.danmaku?.api?.delete?.({ api: this.danmaku.api.url, danmaku })\n    result ??= {\n      success: false,\n      message: \"操作失败\",\n    }\n    // 操作成功后从弹幕池移除该弹幕\n    if (result.success) {\n      this.danmaku.remove(danmaku.map((dm) => dm.id))\n    }\n    return result\n  }\n\n  /**\n   * 删除自己发送的弹幕\n   * @param danmaku 要删除的弹幕\n   * @return 操作结果\n   * */\n  async recall(danmaku: DanmakuItem): Promise<OperationResult> {\n    let result = await this.danmaku?.api?.recall?.({ api: this.danmaku.api.url, danmaku })\n    result ??= {\n      success: false,\n      message: \"操作失败\",\n    }\n    if (result.success) {\n      this.danmaku.remove([danmaku.id])\n    }\n    return result\n  }\n\n  /**\n   * 屏蔽用户\n   * @param user 用户id\n   * @param flag 设置屏蔽状态\n   * @return 操作结果\n   * */\n  async blockUser(user: string | number, flag: boolean): Promise<OperationResult> {\n    let result = await this.danmaku?.api?.blockUser?.({ api: this.danmaku.api.url, user, flag })\n    result ??= {\n      success: false,\n      message: \"操作失败\",\n    }\n    // 操作成功后在弹幕池屏蔽该用户\n    if (result.success) {\n      this.danmaku.engine.setUserFilter(user, flag)\n      this.player.events.trigger(\"danmaku:block_user\", user, flag)\n    }\n    return result\n  }\n\n  /**\n   * 屏蔽关键词\n   * @param content 关键词内容\n   * @param flag 设置屏蔽状态\n   * @return 操作结果\n   * */\n  async blockContent(content: string, flag: boolean): Promise<OperationResult> {\n    let result = await this.danmaku?.api?.blockContent?.({\n      api: this.danmaku.api.url,\n      content,\n      flag,\n    })\n    result ??= {\n      success: false,\n      message: \"操作失败\",\n    }\n    // 操作成功后在弹幕池屏蔽该内容\n    if (result.success) {\n      this.danmaku.engine.setContentFilter(content, flag)\n      this.player.events.trigger(\"danmaku:block_content\", content, flag)\n    }\n    return result\n  }\n}\n","import { DanmakuMode } from \"@/enum\"\nimport { PlayerOptions, DanmakuApiOptions, DanmakuItem, DanmakuSource } from \"@/types\"\nimport MfunsPlayer from \"@/player\"\nimport DanmakuEngine from \"./DanmakuEngine\"\nimport { html, render } from \"lit-html\"\nimport { classPrefix } from \"@/const\"\nimport DanmakuParser from \"./DanmakuParser\"\nimport DanmakuOperate from \"./DanmakuOperate\"\n\nconst template = html` <div class=\"${classPrefix}-row-danmaku-container\"></div> `\n\n/** 弹幕模块 */\nexport default class Danmaku {\n  /** 弹幕引擎，用于弹幕绘制 */\n  engine: DanmakuEngine\n\n  /** 弹幕格式转换 */\n  parser: DanmakuParser\n\n  /** 弹幕api */\n  api?: DanmakuApiOptions\n\n  /** 弹幕操作 */\n  operate: DanmakuOperate\n\n  /** 最新一条弹幕的id */\n  lastDanmakuId: string | number = 0\n\n  /** 允许获取实时新增弹幕 */\n  allowNewDanmaku: boolean\n\n  /** 弹幕池 */\n  list: DanmakuItem[] = []\n\n  player: MfunsPlayer\n\n  el: HTMLElement\n  $rowDanmakuContainer: HTMLDivElement\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    this.player = player\n    this.parser = new DanmakuParser({ defaultParser: \"mfuns\" })\n    this.operate = new DanmakuOperate(this)\n    this.el = this.player.template.$danmakuWrap\n    this.api = options.danmaku?.api\n    this.allowNewDanmaku = false\n    render(template, this.el)\n    this.$rowDanmakuContainer = this.el.querySelector(`.${classPrefix}-row-danmaku-container`)!\n    this.engine = new DanmakuEngine(this.$rowDanmakuContainer, {\n      fontScale: 1,\n      fontFamily: \"SimHei\",\n      fontWeight: \"bold\",\n      speed: 1,\n      opacity: 1,\n      classPrefix: classPrefix,\n      /** 颜色限制 */\n      colorFilter: false,\n      getTime: () => this.player.time,\n    })\n    this.player.on(\"play\", () => {\n      this.engine.play()\n    })\n    this.player.on(\"pause\", () => {\n      this.engine.pause()\n    })\n    this.player.on(\"seeking\", () => {\n      this.engine.pause()\n      this.engine.seek()\n    })\n    this.player.on(\"seeked\", () => {\n      this.player.paused || this.engine.play()\n    })\n    this.player.on(\"part\", (p) => {\n      const { danmakuId, danmakuAddition } = this.player.video.list[p - 1]\n      console.log(danmakuAddition)\n      this.reload(danmakuId, danmakuAddition)\n    })\n  }\n\n  /** 加载附加弹幕 */\n  loadAddition({ url, type, data }: DanmakuSource) {\n    fetch(url)\n      .then((response) => {\n        if (/-xml$/.test(type)) {\n          return response.text()\n        } else {\n          return response.json()\n        }\n      })\n      .then((res) => {\n        const danmakuData = data ? data(res) : res\n        const dan = this.parser.parse({ data: danmakuData, type })\n        dan && this.add(dan)\n        this.player.events.trigger(\"danmaku:load_addition_end\", url, dan || [])\n      })\n      .catch((err) => {\n        this.player.events.trigger(\"danmaku:load_addition_fail\", url, err)\n        console.error(err)\n      })\n  }\n\n  /** 加载弹幕 */\n  private load(id: string | number) {\n    const api = this.api\n    api\n      ?.get({ api: api.url, id })\n      .then((data) => {\n        const dan = this.parser.parse({ data, type: api.type })\n        if (dan) {\n          this.add(dan)\n          this.lastDanmakuId = dan[dan.length - 1].id\n        }\n        this.player.events.trigger(\"danmaku:load_end\", dan || [])\n      })\n      .catch((err) => {\n        this.player.events.trigger(\"danmaku:load_fail\", err)\n      })\n  }\n\n  /** 加载实时新增弹幕 */\n  loadNew(id: string | number) {\n    const offset = this.lastDanmakuId\n    this.player.events.trigger(\"danmaku:load_new_start\", offset)\n    const api = this.api\n    api\n      ?.get({ api: api.url, id, offset: this.lastDanmakuId })\n      .then((data) => {\n        const dan = this.parser.parse({ data, type: api.type })\n        if (dan) {\n          this.add(dan)\n          this.lastDanmakuId = dan[dan.length - 1].id\n        }\n        this.player.events.trigger(\"danmaku:load_new_end\", offset, dan || [])\n      })\n      .catch((err) => {\n        this.player.events.trigger(\"danmaku:load_new_fail\", offset, err)\n      })\n  }\n\n  /** 重载弹幕 */\n  public async reload(id?: string | number, addition?: DanmakuSource[]) {\n    this.player.events.trigger(\"danmaku:load_start\")\n    // 清空弹幕池\n    this.engine.reset()\n    id && this.load(id)\n    addition?.forEach((ad) => {\n      this.loadAddition(ad)\n    })\n  }\n\n  /**\n   * 添加弹幕到弹幕池\n   * @param dan 要添加的弹幕\n   * */\n  add(dan: DanmakuItem[]) {\n    const basicDanmaku: DanmakuItem[] = []\n    const advancedDanmaku: Record<number, DanmakuItem[]> = {}\n    dan.forEach((dm) => {\n      if (dm.mode < 7) {\n        basicDanmaku.push(dm)\n      } else {\n        if (advancedDanmaku[dm.mode]) {\n          advancedDanmaku[dm.mode].push(dm)\n        } else {\n          advancedDanmaku[dm.mode] = [dm]\n        }\n      }\n    })\n    basicDanmaku.length && this.engine.add(basicDanmaku)\n    for (const mode in advancedDanmaku) {\n      this.player.events.trigger(\"danmaku:advanced\", parseInt(mode), advancedDanmaku[mode])\n    }\n  }\n\n  /**\n   * 根据id从弹幕池中移除弹幕\n   * @param ids 要移除的弹幕id\n   * */\n  remove(ids: (string | number)[]) {\n    this.engine.remove(ids)\n  }\n\n  /** 清空弹幕池 */\n  clear() {\n    this.engine.clear()\n  }\n\n  /** 显示弹幕 */\n  show() {\n    this.engine.show()\n    this.player.events.trigger(\"danmaku:on\")\n  }\n\n  /** 隐藏弹幕 */\n  hide() {\n    this.engine.hide()\n    this.player.events.trigger(\"danmaku:off\")\n  }\n\n  /** 切换弹幕显示 */\n  toggle() {\n    if (this.engine.hidden) {\n      this.show()\n    } else {\n      this.hide()\n    }\n  }\n\n  // 弹幕屏蔽\n\n  /**\n   * 弹幕类型屏蔽\n   * @param type 类型\n   * @param flag 设置是否屏蔽\n   */\n  filter(type: string, flag: boolean) {\n    switch (type) {\n      case \"roll\":\n        this.engine.setTrackFilter(\"roll\", flag)\n        this.engine.setTrackFilter(\"reverse\", flag)\n        break\n      case \"top\":\n      case \"bottom\":\n        this.engine.setTrackFilter(type, flag)\n        break\n      case \"color\":\n        this.engine.setColorFilter(flag)\n        break\n    }\n    this.player.events.trigger(\"danmaku:filter\", type, flag)\n  }\n\n  // 弹幕播放属性设置\n\n  /** 设置弹幕不透明度 */\n  setOpacity(value: number, save?: boolean) {\n    this.engine.opacity = value\n    this.player.events.trigger(\"change:danmaku_opacity\", value)\n  }\n  /** 设置弹幕速度 */\n  setSpeed(value: number, save?: boolean) {\n    this.engine.speed = value\n    this.player.events.trigger(\"change:danmaku_speed\", value)\n  }\n  /** 设置弹幕区域 */\n  setArea(value: number, save?: boolean) {\n    this.engine.limitArea = value || Infinity\n    this.player.events.trigger(\"change:danmaku_area\", value)\n  }\n  /** 设置弹幕大小 */\n  setScale(value: number, save?: boolean) {\n    this.engine.fontScale = value\n    this.player.events.trigger(\"change:danmaku_scale\", value)\n  }\n  /** 设置弹幕字体 */\n  setFont(value: string, save?: boolean) {\n    this.engine.fontFamily = value\n    this.player.events.trigger(\"change:danmaku_font\", value)\n  }\n  /** 设置弹幕加粗 */\n  setBold(value: boolean, save?: boolean) {\n    this.engine.fontWeight = value ? \"bold\" : \"\"\n    this.player.events.trigger(\"change:danmaku_bold\", value)\n  }\n}\n","import { AllPluginExposed, EmptyObject } from \"./types\"\nimport { PluginManager } from \"./plugin/PluginManager\"\nimport Controller from \"@/ui/Controller\"\nimport Events from \"@/Events\"\nimport Template from \"@/ui/Template\"\nimport { PlayerOptions, PlayerPlugin } from \"@/types\"\nimport Video from \"@/Video\"\nimport Mode from \"@/Mode\"\nimport HotKey from \"@/ui/HotKey\"\nimport Side from \"@/ui/Side\"\nimport ContextMenu from \"@/ui/ContextMenu\"\nimport Modal from \"@/ui/Modal\"\nimport Theme from \"@/ui/Theme\"\nimport State from \"@/ui/State\"\nimport Danmaku from \"./Danmaku\"\nimport { PlayerEventsMap } from \"./Events/PlayerEventsMap\"\n\nexport default class MfunsPlayer<T extends PlayerPlugin = PlayerPlugin> {\n  static readonly version = MFUNSPLAYER_VERSION\n  static readonly gitHash = GIT_HASH\n  /** 容器 */\n  readonly container: HTMLElement\n  /** 视频模块 */\n  video: Video\n  /** 播放列表模块 */\n  playlist: any\n  /** 插件 */\n  plugin = {} as AllPluginExposed<T>\n  /** 插件管理 */\n  pluginManager: PluginManager\n  /** 事件模块 */\n  events: Events\n  /** 弹幕模块 */\n  danmaku: Danmaku\n  /** 播放器模式控制 */\n  mode: Mode\n  /** 播放器状态控制 */\n  state: State\n  /** 模板 */\n  template: Template\n  /** 主题样式 */\n  theme: Theme\n  /** 控制栏 */\n  controller: Controller\n  /** 右键菜单 */\n  contextMenu: ContextMenu\n  /** 控制栏 */\n  side: Side\n  /** 模态框 */\n  modal: Modal\n  /** 快捷键 */\n  hotKey: HotKey\n  /** 用户id */\n  userId: string | number = 0\n  /** 视频作者id */\n  authorId: string | number | null = null\n\n  constructor(options: PlayerOptions<T>, plugins?: T[]) {\n    this.events = new Events()\n    this.container = options.container\n    // 注入模板\n    this.template = new Template(this, options)\n\n    // 视频核心功能\n    this.video = new Video(this, options)\n\n    // 插件管理\n    this.pluginManager = new PluginManager(this, plugins)\n\n    // 插件执行created函数(搭建界面、实现基本功能)\n    this.pluginManager.pluginCreate(options)\n\n    // 初始化主题样式模块\n    this.theme = new Theme(this, options)\n\n    // 模式\n    this.mode = new Mode(this, options)\n    this.state = new State(this, options)\n    this.danmaku = new Danmaku(this, options)\n\n    // 注入ui\n    this.controller = new Controller(this, options)\n    this.side = new Side(this, options)\n    this.modal = new Modal(this, options)\n    this.contextMenu = new ContextMenu(this, options)\n\n    this.hotKey = new HotKey(this, options)\n\n    // 插件执行init函数(配置初始化)\n    this.pluginManager.pluginInit(options)\n\n    // 播放器初始化完毕，加载第1P\n    this.setPart(1)\n\n    // --- 测试 --- //\n\n    this.on(\"part\", (p) => {\n      console.log(`当前分P - ${p}`)\n    })\n  }\n  /** 播放相关 */\n\n  /** 播放 */\n  public play() {\n    this.video.play()\n  }\n\n  /** 暂停 */\n  public pause() {\n    this.video.pause()\n  }\n\n  /** 切换播放/暂停状态 */\n  public toggle() {\n    if (this.paused) {\n      this.play()\n    } else {\n      this.pause()\n    }\n  }\n\n  /** 上一P */\n  public prev() {\n    this.video.prev()\n  }\n\n  /** 下一P */\n  public next() {\n    this.video.next()\n  }\n\n  get paused() {\n    return this.video.paused\n  }\n\n  /** 跳转 */\n  public seek(value: number) {\n    this.video.seek(value)\n  }\n\n  /** 设置音量 */\n  public setVolume(value: number) {\n    this.video.setVolume(value)\n  }\n\n  /** 静音 */\n  public mute(flag = true) {\n    this.video.mute(flag)\n  }\n\n  /** 设置倍速 */\n  public setPlaybackRate(value: number) {\n    this.video.setPlaybackRate(value)\n  }\n\n  /** 跳转分P */\n  public setPart(p: number, play = false) {\n    this.video.setPart(p, play)\n  }\n\n  /** 当前播放时间 */\n  public get time() {\n    return this.video.currentTime\n  }\n\n  /** 音量 */\n  public get volume() {\n    return this.video.volume\n  }\n\n  /** 静音 */\n  public get muted() {\n    return this.video.muted\n  }\n\n  /** 当前播放速度 */\n  public get playbackRate() {\n    return this.video.playbackRate\n  }\n\n  /** 尺寸模式相关 */\n\n  /** 全屏 */\n  public fullscreen() {\n    this.mode.fullscreen()\n  }\n\n  /** 退出全屏 */\n  public exitFullscreen() {\n    this.mode.exitFullscreen()\n  }\n\n  /** 是否处于全屏模式 */\n  get isFullscreen() {\n    return this.mode.isFullscreen\n  }\n\n  /** 网页全屏 */\n  public webfull() {\n    this.mode.webfull()\n  }\n\n  /** 退出网页全屏 */\n  public exitWebfull() {\n    this.mode.exitWebfull()\n  }\n\n  /** 是否处于网页全屏 */\n  get isWebfull() {\n    return this.mode.isWebfull\n  }\n\n  /** 画中画模式 */\n  public pip() {\n    this.mode.pip()\n  }\n\n  /** 退出画中画模式 */\n  public exitPip() {\n    this.mode.exitPip()\n  }\n\n  /** 是否处于画中画模式 */\n  get isPip() {\n    return this.mode.isPip\n  }\n\n  /** 宽屏模式 */\n  public wide() {\n    this.mode.wide()\n  }\n\n  /** 退出宽屏模式 */\n  public exitWide() {\n    this.mode.exitWide()\n  }\n\n  /** 是否处于宽屏模式 */\n  get isWide() {\n    return this.mode.isWide\n  }\n\n  /** 监听事件 */\n  public on<T extends keyof PlayerEventsMap>(name: T, listener: PlayerEventsMap[T]) {\n    this.events.on(name, listener)\n  }\n\n  /** 取消监听事件 */\n  public off<T extends keyof PlayerEventsMap>(name: T, listener: PlayerEventsMap[T]) {\n    this.events.off(name, listener)\n  }\n\n  /** 播放器销毁 */\n  public destroy() {\n    // 所有插件执行destroy函数\n  }\n}\n","import MfunsPlayer from \"@/player\"\nimport \"@css/index.scss\"\n\nconsole.log(\n  `${\"\\n\"} %c mfunsPlayer v${MFUNSPLAYER_VERSION} ${GIT_HASH} %c https://github.com/Mfuns-cn ${\"\\n\"}${\"\\n\"}`,\n  \"color: #fff; background: #7b7ff7; padding:5px 0;\",\n  \"background: #f5f5f5; padding:5px 0;\"\n)\n\nexport default MfunsPlayer\n"],"names":["PluginManager","player","list","names","plugin","options","_a","t","i","s","e","o","n","l","h","r","u","d","c","v","a","f","_","m","p","g","$","y","w","x","T","A","E","C","P","V","N","H","L","z","k","S","M","R","Z","I","B","D","classPrefix","repositoryLink","developers","createArray","count","val","getFullscreenElement","fullScreenEnabled","pictureInPictureEnabled","timeToSecond","str","arr","sec","min","hour","debounce","fn","delay","immediate","timer","isInvoke","args","secondToTime","second","showHour","add0","num","color2Number","color","number2Color","number","template","html","ProgressBar","controller","render","clientX","dragMoveEvent","dragEndEvent","time","nLength","per","flag","ButtonFullscreen","container","fragment","ButtonPip","ButtonPlay","LabelTime","inputVal","event","ButtonLoop","divider","Slider","max","step","value","onChange","onDragStart","onDragEnd","onDrag","trackLength","nMax","thumbTrackX","nLeft","mousemoveEvent","removeEvent","_b","SliderVertical","clientY","thumbTrackY","nTop","templateWrap","item","index","Picker","onPick","condition","MultiPicker","onToggle","b","label","Checkbox","ButtonVolume","muted","ButtonSettings","rate","ratio","ButtonPart","ButtonWebfull","ButtonPrev","ButtonNext","keyCode","ButtonDanmakuSwitch","ButtonDanmakuSettings","area","ButtonDanmakuStyle","danmakuBar","defaultFontSizeList","defaultModeList","defaultColorList","sRGBHex","DanmakuBar","defaultPlaceholder","placeholder","Controller","Events","name","listener","Template","VideoLoader","video","src","flvPlayer","hls","dashPlayer","Video","play","quality","currentVideoSource","source","onloadedmetadata","sourceList","sortedSources","ratioW","ratioH","width","height","cWidth","cHeight","type","buffered","rwxh","rhxw","ModeFullscreen","fullScreenChangeHandler","el","doc","ModePip","ModeWebfull","Mode","HotKey","setPart","title","SidePartList","Side","id","panel","onClick","templateDanmaku","danmaku","operation","dm","copyClip","content","res","rej","ContextMenu","menuList","MfunsPlayer","clientRect","captured","api","operate","myDanmaku","link","ModalAbout","key","description","ModalHotkey","hotkeyInfoList","Modal","themeOptionsVars","Theme","theme","State","debounceRemoveActive","DanmakuMode","DanmakuEngine","dan","ids","displayed","contentIndex","items","keyword","user","_c","itemHeight","containerWidth","containerHeight","itemY","danItemRight","containerRight","elRight","danItemLeft","containerLeft","getSpeed","getDOMTrack","getTrack","ele","forTrack","DOMTrack","track","enterTime","danRight","danLeft","docFragment","itemWidth","trackType","trackIndex","maxTop","prev","cur","top","speed","distance","topArr","topDan","bottomArr","bottomDan","bottom","text","font","range","single","result","elRect","containerRect","edgeLeft","edgeRight","edgeTop","edgeBottom","resultDOM","ar","randomId","hs","al","DanmakuParser","defaultParser","data","xmlData","nodeList","generate","currentNode","parser","err","DanmakuOperate","Danmaku","danmakuId","danmakuAddition","url","response","danmakuData","offset","addition","ad","basicDanmaku","advancedDanmaku","mode","save","plugins"],"mappings":"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","x_google_ignoreList":[1]}