{"version":3,"file":"video-page-player.es.js","sources":["../src/js/pluginManager.ts","../src/js/events.ts","../src/js/Video/Loader.ts","../src/js/utils/index.ts","../src/js/config.ts","../src/js/Video/index.ts","../src/js/state.ts","../src/js/hooks.ts","../node_modules/lit-html/lit-html.js","../src/js/components/Slider.ts","../src/js/components/SliderVertical.ts","../src/js/components/Picker.ts","../src/js/components/MultiPicker.ts","../src/js/components/Switch.ts","../src/js/components/Checkbox.ts","../src/js/player.ts","../src/js/index.ts","../plugins/danmakuList/VirtualList.ts","../src/js/plugin.ts","../plugins/danmakuList/index.ts","../src/js/utils/KeyCode.enum.ts","../src/js/plugins/danmakuBar/ButtonDanmakuStyle.ts","../src/js/plugins/danmakuBar/index.ts","../src/js/plugins/blackBorder/index.ts","../src/js/plugins/danmaku/types.ts","../src/js/plugins/danmaku/DanmakuEngine.ts","../src/js/utils/randomId.ts","../src/js/plugins/danmaku/DanmakuParser.ts","../src/js/plugins/danmaku/DanmakuOperate.ts","../src/js/plugins/danmaku/index.ts","../src/js/plugins/screen/widescreen.ts","../src/js/plugins/controls/button/ButtonPlay.ts","../src/js/plugins/controls/button/ButtonPrev.ts","../src/js/plugins/controls/button/ButtonNext.ts","../src/js/plugins/controls/videoTime.ts","../src/js/plugins/controls/button/ButtonLoop.ts","../src/js/plugins/controls/button/ButtonPart.ts","../src/js/plugins/controls/button/ButtonVolume.ts","../src/js/plugins/controls/button/ButtonSettings.ts","../src/js/plugins/controls/button/ButtonPip.ts","../src/js/plugins/controls/button/ButtonWidescreen.ts","../src/js/plugins/controls/button/ButtonWebscreen.ts","../src/js/plugins/controls/button/ButtonFullscreen.ts","../src/js/plugins/controls/button/ButtonDanmakuToggle.ts","../src/js/plugins/controls/button/ButtonDanmakuSettings.ts","../src/js/plugins/panels/about/index.ts","../src/js/plugins/panels/hotkeys/index.ts","../src/js/plugins/contextMenu/index.ts","../src/js/plugins/ui/controller/index.ts","../src/js/plugins/hotkey/index.ts","../src/js/plugins/ui/modal/index.ts","../src/js/plugins/progress/index.ts","../src/js/plugins/settings/index.ts","../src/js/plugins/core/sources/index.ts","../src/js/plugins/ui/side/index.ts","../src/js/plugins/screen/pip.ts","../src/js/plugins/screen/fullscreen.ts","../plugins/presets.ts","../src/js/plugins/playSettings/autoPart/index.ts","../src/js/plugins/playSettings/autoPlay/index.ts","../src/js/plugins/playSettings/seekLast/index.ts","../src/js/plugins/theme/index.ts","../src/js/plugins/part/index.ts","../src/js/plugins/seamless/index.ts","../src/js/plugins/panels/partList/index.ts","../src/js/plugins/controls/button/ButtonDanmakulist.ts","../src/js/plugins/quality/index.ts","../src/js/plugins/controls/button/ButtonQuality.ts","../src/js/plugins/videoStatus/index.ts","../src/js/plugins/loadingMask/index.ts","../src/js/plugins/controls/videoTitle.ts","../src/js/plugins/ui/header/index.ts","../src/js/plugins/mini/index.ts","../src/js/plugins/lightOff/index.ts","../src/js/plugins/screen/webscreen.ts","../player/VideoPagePlayer.ts"],"sourcesContent":["import Player from \"@/player\";\nimport { PlayerOptions, Plugin, PluginConstructor } from \"@/types\";\n\nexport class PluginManager {\n  player: Player;\n  get plugin() {\n    return this.player.plugin as unknown as Record<string, Plugin>;\n  }\n  private initialized = false;\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册插件 */\n  register(PluginCon: PluginConstructor, options: PlayerOptions) {\n    const plugin = new PluginCon(this.player, options);\n    plugin.created?.(options);\n    if (this.initialized) {\n      plugin.pluginsReady?.(options);\n      plugin.playerMounted?.(options);\n      plugin.videoInited?.(options);\n    }\n  }\n  /** 批量注册插件 */\n  pluginsRegister(options: PlayerOptions) {\n    options.plugins?.forEach((PluginCon) => {\n      const plugin = new PluginCon(this.player, options);\n      this.plugin[PluginCon.pluginName] = plugin;\n      plugin.created?.(options);\n    });\n  }\n  /** 所有插件注册完毕后执行 */\n  pluginsReady(options: PlayerOptions) {\n    if (this.initialized) return;\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.pluginsReady?.(options);\n    }\n    this.initialized = true;\n  }\n  /** 播放器挂载后执行 */\n  playerMounted(options: PlayerOptions) {\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.playerMounted?.(options);\n    }\n  }\n  /** 销毁所有插件 */\n  destroy() {\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.destroy?.();\n    }\n  }\n}\n","import { PlayerEventMap } from \"@/types\";\n\nexport default class Events {\n  protected listeners: Record<string, ((...args: any[]) => void)[]> = {};\n  protected onceListeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  readonly customEventList: string[] = [];\n\n  /** 添加监听 */\n  on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n    this.listeners[name].push(listener);\n  }\n\n  /** 添加一次性监听 */\n  once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.onceListeners[name]) {\n      this.onceListeners[name] = [];\n    }\n    this.onceListeners[name].push(listener);\n  }\n\n  /** 移除监听 */\n  off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n    const index = this.listeners[name].indexOf(listener);\n    if (index > -1) this.listeners[name].splice(index, 1);\n  }\n\n  /** 触发事件 */\n  emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\n    if (this.listeners[name]?.length) {\n      for (let i = 0; i < this.listeners[name].length; i++) {\n        this.listeners[name][i](...args);\n      }\n    }\n    if (this.onceListeners[name]?.length) {\n      for (let i = 0; i < this.onceListeners[name].length; i++) {\n        this.onceListeners[name][i](...args);\n      }\n      this.onceListeners[name] = [];\n    }\n  }\n}\n","import FlvJs from \"@lib/types/flv\";\nimport HlsJs from \"@lib/types/hls\";\nimport DashJs from \"@lib/types/dash\";\nimport Player from \"@/player\";\nimport Video from \"@/Video\";\n\ntype VideoSource = { type?: string; url: string };\n\ndeclare global {\n  let flvjs: typeof FlvJs | undefined;\n  let Hls: typeof HlsJs | undefined;\n  let dashjs: typeof DashJs | undefined;\n}\n\ninterface CurrentSource extends VideoSource {\n  destroy: () => void;\n}\n\nexport default class VideoLoader {\n  video: Video;\n  current: CurrentSource | null = null;\n  list: Map<string, (player: Player, url: string) => void> = new Map();\n  constructor(video: Video) {\n    this.video = video;\n  }\n  /** 加载视频源 */\n  public load(src: VideoSource) {\n    this.destroyCurrent();\n    switch (src.type) {\n      case \"flv\":\n        this.loadFlv(src);\n        break;\n      case \"dash\":\n        this.loadDash(src);\n        break;\n      case \"hls\":\n      case \"m3u8\":\n        this.loadHls(src);\n        break;\n      default:\n        this.loadNormal(src);\n    }\n  }\n  /** 一般加载方式 */\n  public loadNormal(src: VideoSource) {\n    this.video.$video.src = src.url;\n    this.current = {\n      ...src,\n      destroy: () => {\n        this.video.$video.src = \"\";\n      },\n    };\n  }\n  /** 加载flv */\n  public loadFlv(src: VideoSource) {\n    if (flvjs?.isSupported()) {\n      const flvPlayer = flvjs.createPlayer({\n        type: src.type || \"flv\",\n        url: src.url,\n        cors: true,\n      });\n      flvPlayer.attachMediaElement(this.video.$video);\n      flvPlayer.load();\n      this.current = {\n        ...src,\n        destroy: () => {\n          flvPlayer.destroy();\n        },\n      };\n    } else {\n      console.error(\"不支持flv加载\");\n    }\n  }\n  /** 加载hls */\n  public loadHls(src: VideoSource) {\n    if (Hls?.isSupported()) {\n      const hls = new Hls();\n      hls.attachMedia(this.video.$video);\n      hls.loadSource(src.url);\n      this.current = {\n        ...src,\n        destroy: () => {\n          hls.destroy();\n        },\n      };\n    } else {\n      console.error(\"不支持hls加载\");\n    }\n  }\n  /** 加载dash */\n  public loadDash(src: VideoSource) {\n    if (dashjs) {\n      // eslint-disable-next-line new-cap\n      const dashPlayer = dashjs.MediaPlayer().create();\n      dashPlayer.initialize(this.video.$video, src.url, true);\n      this.current = {\n        ...src,\n        destroy: () => {\n          dashPlayer.destroy();\n        },\n      };\n    } else {\n      console.error(\"不支持dash加载\");\n    }\n  }\n  /** 销毁当前播放 */\n  private destroyCurrent() {\n    this.current?.destroy();\n    this.current = null;\n  }\n}\n","const isMobile = /mobile/i.test(window.navigator.userAgent);\n\n/** 创建特定长度的填充数组 */\nexport const createArray = <T>(count: number, val: T) => Array.from({ length: count }, () => val);\n\n/** 获取全屏元素 */\nexport const getFullscreenElement = (): HTMLElement | null =>\n  document.fullscreenElement ||\n  (document as any).mozFullScreenElement ||\n  (document as any).webkitFullscreenElement ||\n  (document as any).msFullscreenElement ||\n  null;\n\n/** 是否支持全屏 */\nexport const fullScreenEnabled: boolean =\n  document.fullscreenEnabled ||\n  (document as any).webkitFullscreenEnabled ||\n  (document as any).mozFullScreenEnabled ||\n  (document as any).msFullscreenEnabled ||\n  false;\n\n/** 是否支持画中画 */\nexport const pictureInPictureEnabled = document.pictureInPictureEnabled;\n\n/**\n * 将时间文本转换为秒数\n *\n * @param {String} str 冒号分隔的时间文本，支持全角冒号\n * @return {Number} second\n */\nexport const timeToSecond = (str: string): number => {\n  const arr = str.split(/[:：]/).slice(-3);\n  const sec = parseInt(arr[arr.length - 1]) || 0;\n  const min = parseInt(arr[arr.length - 2]) || 0;\n  const hour = parseInt(arr[arr.length - 3]) || 0;\n  return sec + min * 60 + hour * 3600;\n};\n\n/**\n * 防抖\n * @param {Function} fn 需要防抖处理的函数\n * @param {number} delay 防抖延迟执行时间\n * @param {boolean} immediate 是否立即执行一次\n */\nexport const debounce = (fn: (...args: unknown[]) => void, delay: number, immediate = false) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let isInvoke = false;\n  const f = function (this: unknown, ...args: unknown[]) {\n    if (timer) clearTimeout(timer);\n    if (immediate && !isInvoke) {\n      fn.apply(this, args);\n      isInvoke = true;\n    } else {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n        isInvoke = false;\n      }, delay);\n    }\n  };\n  /*   f.clear = () => {\n    if (timer) clearTimeout(timer);\n  }; */\n  return f;\n};\n\n/** 创建元素 */\nexport function createElement<T extends keyof HTMLElementTagNameMap>(\n  tagName: T,\n  attributes?: Record<string, string>,\n  children?: Node\n) {\n  const el = document.createElement(tagName);\n  if (attributes) {\n    for (const name in attributes) {\n      el.setAttribute(name, attributes[name]);\n    }\n  }\n  if (children) {\n    el.append(children);\n  }\n  return el;\n}\n\n/**\n * 节流\n * @param {Function} fn 需要节流处理的函数\n * @param {number} wait 执行一次后需要等待的时间\n */\nexport const throttle = (fn: (...args: unknown[]) => void, wait: number) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  return function (this: unknown, ...args: unknown[]) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n      }, wait);\n    }\n  };\n};\n\n// === 未完全重构 ==========\n\n/**\n * 将秒数转换为时间文本\n *\n * @param {Number} second\n * @param {Boolean} showHour\n * @return {String} 00:00 or 00:00:00\n */\nexport const secondToTime = (second: number, showHour = true) => {\n  second = second || 0;\n  if (second === 0 || second === Infinity || second.toString() === \"NaN\") {\n    return \"00:00\";\n  }\n  const add0 = (num: number) => (num < 10 ? `0${num}` : `${num}`);\n  const hour = Math.floor(second / 3600);\n  const min = Math.floor((second - hour * 3600) / 60);\n  const sec = Math.floor(second - hour * 3600 - min * 60);\n  if (showHour) {\n    return (hour > 0 ? [hour, min, sec] : [min, sec]).map(add0).join(\":\");\n  }\n  return [hour * 60 + min, sec].map(add0).join(\":\");\n};\n\nexport const storage = {\n  set: (key: string, value: any) => {\n    localStorage.setItem(key, value);\n  },\n\n  get: (key: string) => localStorage.getItem(key),\n};\n\nexport const nameMap = {\n  dragStart: isMobile ? \"touchstart\" : \"mousedown\",\n  dragMove: isMobile ? \"touchmove\" : \"mousemove\",\n  dragEnd: isMobile ? \"touchend\" : \"mouseup\",\n};\nexport const colorLuminance = (hex: string, lum: number) => {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  let rgb = \"#\";\n  let c;\n  let i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += `00${c}`.substr(c.length);\n  }\n\n  return rgb;\n};\n\nexport const hex2Rgb = (str: string, opacity: number) => {\n  // 16进制转rgb\n  const reg = /^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$/;\n  if (!reg.test(str)) {\n    return;\n  }\n  let newStr = str.toLowerCase().replace(/#/g, \"\");\n  const len = newStr.length;\n  if (len == 3) {\n    let t = \"\";\n    for (let i = 0; i < len; i++) {\n      t += newStr.slice(i, i + 1).concat(newStr.slice(i, i + 1));\n    }\n    newStr = t;\n  }\n  const arr = []; // 将字符串分隔，两个两个的分隔\n  for (let i = 0; i < 6; i += 2) {\n    const s = newStr.slice(i, i + 2);\n    arr.push(parseInt(`0x${s}`));\n  }\n  if (opacity) return `rgba(${arr.join(\",\")},${opacity})`;\n  return `rgb(${arr.join(\",\")})`;\n};\nexport const rgb2Hex = (str: string) => {\n  // rgb转16进制\n  const reg = /^(rgb|RGB)/;\n  if (!reg.test(str)) {\n    return;\n  }\n  const arr = str.slice(4, str.length - 1).split(\",\");\n  let color = \"#\";\n  for (let i = 0; i < arr.length; i++) {\n    let t = Number(arr[i]).toString(16);\n    if (t == \"0\") {\n      // 如果为“0”的话，需要补0操作,否则只有5位数\n      t += \"0\";\n    }\n    color += t;\n  }\n  return color;\n};\nexport const color2Number = (color: string) => {\n  if (color[0] === \"#\") {\n    color = color.substr(1);\n  }\n  if (color.length === 3) {\n    color = `${color[0]}${color[0]}${color[1]}${color[1]}${color[2]}${color[2]}`;\n  }\n  return (parseInt(color, 16) + 0x000000) & 0xffffff;\n};\n\nexport const number2Color = (number: number) => `#${`00000${number.toString(16)}`.slice(-6)}`;\nexport const initHash = () => {\n  let count = 100;\n\n  return function (hashLength: number) {\n    if (!hashLength || typeof Number(hashLength) !== \"number\") {\n      return;\n    }\n    const ar = [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"0\",\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ];\n    const hs = [];\n    const hl = Number(hashLength);\n    const al = ar.length;\n    for (let i = 0; i < hl; i++) {\n      hs.push(ar[Math.floor(Math.random() * al)]);\n    }\n    count++;\n    return `${hs.join(\"\")}${count}`;\n  };\n};\nexport const randomFontsize = (range: number) => {\n  const allSize = [16, 18, 25, 36, 45, 64];\n  const random = Math.floor(Math.random() * range);\n  return allSize[random];\n};\n\nconst dateFormatMap = {\n  yyyy: (d: Date) => d.getFullYear().toString(),\n  yy: (d: Date) => d.getFullYear().toString().slice(-2),\n  MM: (d: Date) => (d.getMonth() + 1).toString().padStart(2, \"0\"),\n  dd: (d: Date) => d.getDate().toString().padStart(2, \"0\"),\n  HH: (d: Date) => d.getHours().toString().padStart(2, \"0\"),\n  mm: (d: Date) => d.getMinutes().toString().padStart(2, \"0\"),\n  ss: (d: Date) => d.getSeconds().toString().padStart(2, \"0\"),\n};\n\n// date: 时间对象, pattern: 日期格式\nexport const dateFormat = (date: Date, format: string) => {\n  return format.replace(/yyyy|yy|MM|dd|HH|mm|ss/g, (match) =>\n    dateFormatMap[match as keyof typeof dateFormatMap]?.(date)\n  );\n};\n","export const classPrefix = \"mfuns-player\";\n\n/** 项目链接 */\nexport const repositoryLink = \"https://github.com/Mfuns-cn/mfunsPlayer/tree/v3-beta\";\n\n/** 开发者列表 */\nexport const developers = [\n  { name: \"Minteea\", id: \"Minteea\", link: \"https://github.com/Minteea\" },\n  { name: \"鲁迪钨丝\", id: \"Rudiusu\", link: \"https://github.com/Rudiusu\" },\n];\n","import { LoadInfo, PlayerOptions, VideoInfo } from \"@/types\";\nimport Player from \"@/player\";\nimport VideoLoader from \"./Loader\";\nimport { PlayerEventMap } from \"@/types/PlayerEventMap\";\nimport { createElement } from \"@/utils\";\nimport { classPrefix } from \"@/config\";\n\nconst videoEventMap: {\n  [k in keyof PlayerEventMap & keyof HTMLVideoElementEventMap]?: (\n    v: HTMLVideoElement\n  ) => Parameters<PlayerEventMap[k]>;\n} = {\n  play: () => [],\n  pause: () => [],\n  ended: () => [],\n\n  loadeddata: () => [],\n  loadedmetadata: () => [],\n  waiting: () => [],\n  playing: () => [],\n  canplay: () => [],\n  canplaythrough: () => [],\n\n  timeupdate: (v) => [v.currentTime],\n  durationchange: (v) => [v.duration],\n  progress: (v) => [v.buffered],\n  seeking: (v) => [v.currentTime],\n  seeked: (v) => [v.currentTime],\n  volumechange: (v) => [v.volume, v.muted],\n  ratechange: (v) => [v.playbackRate],\n\n  enterpictureinpicture: () => [],\n  leavepictureinpicture: () => [],\n};\n\nexport default class Video {\n  /** 播放器主体 */\n  player: Player;\n  /** video对象 */\n  $video: HTMLVideoElement;\n  /** 视频加载模块 */\n  loader: VideoLoader;\n\n  ratio: [number, number] | null = null;\n\n  private detachEventController?: AbortController;\n\n  constructor(player: Player, options: PlayerOptions) {\n    this.player = player;\n\n    this.$video = this.player.$content.appendChild(\n      createElement(\"video\", { class: `${classPrefix}-video` })\n    );\n\n    // 初始化视频\n    this.loader = new VideoLoader(this);\n    this.setRatio(options.aspectRatio || null);\n\n    this.attachEvent(this.$video);\n    this.initKeepRatio();\n\n    this.player.on(\"play\", () => {\n      this.player.$el.classList.remove(\"state-paused\");\n    });\n    this.player.on(\"pause\", () => {\n      this.player.$el.classList.add(\"state-paused\");\n    });\n    this.player.on(\"waiting\", () => {\n      this.player.$el.classList.add(\"state-loading\");\n    });\n    this.player.on(\"playing\", () => {\n      this.player.$el.classList.remove(\"state-loading\");\n    });\n    this.player.on(\"ended\", () => {\n      this.player.hook.call(\"end\").then((res) => {\n        if (res) this.player.emit(\"end\");\n      });\n    });\n  }\n\n  /** 加载视频 */\n  load(info: LoadInfo) {\n    this.player.emit(\"video_load\", info);\n    const { url, type, play, time } = info;\n    console.log({ url, type });\n    this.loader.load({ url, type });\n    this.player.once(\"loadedmetadata\", () => {\n      if (time) {\n        this.seek(time);\n      }\n      if (play) {\n        this.play();\n      } else {\n        this.player.$el.classList.add(\"state-paused\");\n      }\n    });\n  }\n\n  // 同步视频方法\n\n  /** 播放 */\n  public play() {\n    this.$video.play();\n  }\n\n  /** 暂停 */\n  public pause() {\n    this.$video.pause();\n  }\n\n  /** 跳转 */\n  public seek(value: number) {\n    this.$video.currentTime =\n      value > 0 ? (value < this.$video.duration ? value : this.$video.duration) : 0;\n  }\n\n  // 同步设置视频属性\n\n  /** 设置音量 */\n  public setVolume(value: number) {\n    this.$video.volume = value > 0 ? (value < 1 ? value : 1) : 0;\n  }\n\n  /** 设置倍速 */\n  public setPlaybackRate(value: number) {\n    this.$video.playbackRate = value;\n  }\n\n  /** 设置静音 */\n  public setMute(flag: boolean) {\n    this.$video.muted = flag;\n  }\n\n  // 视频播放属性\n\n  /** 设置循环播放 */\n  public setLoop(flag: boolean) {\n    this.$video.loop = flag;\n    this.player.emitChange(\"loop\", flag);\n  }\n\n  /** 设置视频比例 */\n  public setRatio(value: [number, number] | null) {\n    this.ratio = value;\n    this.$video.style.width = \"\";\n    this.$video.style.height = \"\";\n    if (value) {\n      const [ratioW, ratioH] = value;\n      this.$video.style.aspectRatio = `${ratioW}/${ratioH}`;\n      this.$video.style.objectFit = \"fill\";\n      const { width, height } = this.$video.getBoundingClientRect();\n      const { width: cWidth, height: cHeight } = this.player.$area.getBoundingClientRect();\n      if (width == cWidth && height == cHeight) {\n        this.rescale(width, height, ratioW, ratioH);\n      }\n    } else {\n      this.$video.style.aspectRatio = \"\";\n      this.$video.style.objectFit = \"\";\n    }\n    this.player.emitChange(\"aspectRatio\", value);\n  }\n\n  get muted(): boolean {\n    return this.$video.muted;\n  }\n\n  get playbackRate(): number {\n    return this.$video.playbackRate;\n  }\n\n  get loop(): boolean {\n    return this.$video.loop;\n  }\n\n  get volume(): number {\n    return this.$video.volume;\n  }\n\n  get paused(): boolean {\n    return this.$video.paused;\n  }\n\n  get duration(): number {\n    return this.$video.duration;\n  }\n\n  get currentTime(): number {\n    return this.$video.currentTime;\n  }\n\n  /** 添加视频事件 */\n  attachEvent(video: HTMLVideoElement) {\n    this.detachEventController = new AbortController();\n    for (const eventName in videoEventMap) {\n      const values =\n        videoEventMap[eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap]!;\n      video.addEventListener(\n        eventName,\n        () => {\n          this.player.emit(\n            eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap,\n            ...values(video)\n          );\n        },\n        { signal: this.detachEventController.signal }\n      );\n    }\n  }\n  /** 移除视频事件 */\n  detachEvent() {\n    this.detachEventController?.abort();\n  }\n  /** 保持视频比例 */\n  private initKeepRatio() {\n    this.player.on(\"video_resize\", ([cWidth, cHeight]) => {\n      if (this.ratio) {\n        this.$video.style.width = \"\";\n        this.$video.style.height = \"\";\n        const [ratioW, ratioH] = this.ratio;\n        const { width, height } = this.$video.getBoundingClientRect();\n        console.log(`${width} x ${height} -- ${cWidth} x ${cHeight}`);\n        if (Math.abs(width - cWidth) < 1 && Math.abs(height - cHeight) < 1) {\n          // 该情况表示播放器大小可能已被固定，需要重新计算宽高\n          this.rescale(cWidth, cHeight, ratioW, ratioH);\n        }\n      }\n    });\n  }\n\n  /** 根据当前视频宽高重新维持视频比例 */\n  private rescale(width: number, height: number, ratioW: number, ratioH: number) {\n    const rwxh = ratioW * height;\n    const rhxw = ratioH * width;\n    if (rwxh < rhxw) {\n      this.$video.style.width = `${(rwxh / rhxw) * 100}%`;\n      this.$video.style.height = \"100%\";\n    } else {\n      this.$video.style.width = \"100%\";\n      this.$video.style.height = `${(rhxw / rwxh) * 100}%`;\n    }\n  }\n}\n","import { debounce } from \"@/utils/index\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\n\nexport default class State {\n  player: Player;\n\n  /** 播放器聚焦状态，在点选播放器后聚焦 */\n  focused = false;\n  /** 播放器活跃状态 */\n  active = false;\n  /** 播放器控制状态 */\n  controlled = false;\n  /** 播放器相交状态 */\n  intersecting = true;\n  /** 播放器鼠标活跃状态，鼠标在播放器区域内移动时活跃 */\n  mousemove = false;\n\n  activeTime: number;\n\n  resizeObserver?: ResizeObserver;\n\n  intersectionObserver?: ResizeObserver;\n\n  constructor(player: Player, options: PlayerOptions) {\n    this.player = player;\n    this.activeTime = options.activeTime ?? 3000;\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(([item]) => {\n        const { width, height } = item.contentRect;\n        this.player.emit(\"resize\", [width, height]);\n      });\n    }\n    if (window.IntersectionObserver) {\n      this.intersectionObserver = new window.IntersectionObserver(([item]) => {\n        const { isIntersecting } = item;\n        this.intersecting = isIntersecting;\n        this.player.emit(\"intersection\", isIntersecting);\n      });\n    }\n    this.player.once(\"mounted\", () => {\n      this.resizeObserver?.observe(this.player.$el);\n      this.intersectionObserver?.observe(this.player.$el);\n    });\n    this.init();\n  }\n  focus() {\n    if (this.focused) return;\n    this.focused = true;\n    this.player.$el.classList.add(\"state-focus\");\n    this.player.emit(\"focus\");\n  }\n  blur() {\n    if (!this.focused) return;\n    this.focused = false;\n    this.player.$el.classList.remove(\"state-focus\");\n    this.player.emit(\"blur\");\n  }\n  init() {\n    // 播放器聚焦\n    document.addEventListener(\n      \"click\",\n      () => {\n        this.blur();\n      },\n      true\n    );\n    this.player.$el.addEventListener(\n      \"click\",\n      () => {\n        this.focus();\n      },\n      true\n    );\n    // 播放器活跃\n    const debounceRemoveActive = debounce(() => {\n      this.mousemove = false;\n      this.removeActive();\n    }, this.activeTime);\n    this.player.$main.addEventListener(\"mousemove\", () => {\n      this.mousemove = true;\n      this.setActive();\n      debounceRemoveActive();\n    });\n    this.player.$main.addEventListener(\"mouseleave\", () => {\n      this.mousemove = false;\n      this.removeActive();\n    });\n    this.player.on(\"video_change\", () => {\n      this.player.$el.classList.add(\"state-start\");\n    });\n    this.player.on(\"play\", () => {\n      this.player.$el.classList.remove(\"state-start\");\n    });\n  }\n  /** 设置播放器活跃状态 */\n  public setActive() {\n    if (this.active) return;\n    this.player.$el.classList.add(\"state-active\");\n    this.active = true;\n    this.player.emit(\"active\");\n  }\n  /** 试图移除播放器活跃状态 */\n  public removeActive() {\n    if (!this.active || this.mousemove || this.controlled) return;\n    this.player.hook.call(\"inactive\").then((res) => {\n      if (!res) return;\n      this.player.$el.classList.remove(\"state-active\");\n      this.active = false;\n      this.player.emit(\"inactive\");\n    });\n  }\n}\n","import { PlayerHookMap } from \"./types\";\n\ntype MaybePromise<T> = T | Promise<T>;\n\nexport type HookFunction<T> = (ctx: T) => MaybePromise<void | boolean>;\n\nexport default class Hooks {\n  protected hooks: Record<string, HookFunction<any>[]> = {};\n\n  readonly customEventList: string[] = [];\n\n  /** 注册钩子 */\n  register<T extends keyof PlayerHookMap>(\n    name: T,\n    func: HookFunction<PlayerHookMap[T]>,\n    before = false\n  ) {\n    let hook = this.hooks[name];\n    if (!hook) {\n      hook = [];\n      this.hooks[name] = hook;\n    }\n    before ? hook.unshift(func) : hook.push(func);\n  }\n\n  /** 移除钩子 */\n  unregister<T extends keyof PlayerHookMap>(name: T, func: HookFunction<PlayerHookMap[T]>) {\n    let hook = this.hooks[name];\n    if (!hook) {\n      hook = [];\n      this.hooks[name] = hook;\n    }\n    const index = hook.indexOf(func);\n    if (index > -1) hook.splice(index, 1);\n  }\n\n  call<T extends keyof PlayerHookMap>(\n    name: PlayerHookMap[T] extends void ? T : never,\n    ctx: void,\n    flag?: boolean\n  ): Promise<boolean>;\n  call<T extends keyof PlayerHookMap>(\n    name: T,\n    ctx: PlayerHookMap[T],\n    flag?: boolean\n  ): Promise<boolean>;\n  /** 调用钩子函数\n   * @param name 钩子名称\n   * @param ctx 钩子上下文\n   * @param flag 钩子在正常遍历完毕后是否执行默认行为，默认值为true\n   */\n  async call<T extends keyof PlayerHookMap>(name: T, ctx: PlayerHookMap[T], flag = true) {\n    const hook = this.hooks[name];\n    if (hook?.length) {\n      for (const f of hook) {\n        const res = await f(ctx);\n        if (res == true) {\n          console.log(`钩子提前结束调用: ${name}`);\n          console.log(f);\n          return true;\n        } else if (res == false) {\n          console.log(`钩子被拦截: ${name}`);\n          console.log(f);\n          return false;\n        }\n      }\n    }\n    console.log(`钩子调用完毕: ${name}`);\n    console.log(ctx);\n    return flag;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=window,s=i.trustedTypes,e=s?s.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,o=\"$lit$\",n=`lit$${(Math.random()+\"\").slice(9)}$`,l=\"?\"+n,h=`<${l}>`,r=document,u=()=>r.createComment(\"\"),d=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,c=Array.isArray,v=t=>c(t)||\"function\"==typeof(null==t?void 0:t[Symbol.iterator]),a=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,_=/-->/g,m=/>/g,p=RegExp(`>|${a}(?:([^\\\\s\"'>=/]+)(${a}*=${a}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),g=/'/g,$=/\"/g,y=/^(?:script|style|textarea|title)$/i,w=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=w(1),b=w(2),T=Symbol.for(\"lit-noChange\"),A=Symbol.for(\"lit-nothing\"),E=new WeakMap,C=r.createTreeWalker(r,129,null,!1);function P(t,i){if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==e?e.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,e=[];let l,r=2===i?\"<svg>\":\"\",u=f;for(let i=0;i<s;i++){const s=t[i];let d,c,v=-1,a=0;for(;a<s.length&&(u.lastIndex=a,c=u.exec(s),null!==c);)a=u.lastIndex,u===f?\"!--\"===c[1]?u=_:void 0!==c[1]?u=m:void 0!==c[2]?(y.test(c[2])&&(l=RegExp(\"</\"+c[2],\"g\")),u=p):void 0!==c[3]&&(u=p):u===p?\">\"===c[0]?(u=null!=l?l:f,v=-1):void 0===c[1]?v=-2:(v=u.lastIndex-c[2].length,d=c[1],u=void 0===c[3]?p:'\"'===c[3]?$:g):u===$||u===g?u=p:u===_||u===m?u=f:(u=p,l=void 0);const w=u===p&&t[i+1].startsWith(\"/>\")?\" \":\"\";r+=u===f?s+h:v>=0?(e.push(d),s.slice(0,v)+o+s.slice(v)+n+w):s+n+(-2===v?(e.push(void 0),i):w)}return[P(t,r+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\")),e]};class N{constructor({strings:t,_$litType$:i},e){let h;this.parts=[];let r=0,d=0;const c=t.length-1,v=this.parts,[a,f]=V(t,i);if(this.el=N.createElement(a,e),C.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(h=C.nextNode())&&v.length<c;){if(1===h.nodeType){if(h.hasAttributes()){const t=[];for(const i of h.getAttributeNames())if(i.endsWith(o)||i.startsWith(n)){const s=f[d++];if(t.push(i),void 0!==s){const t=h.getAttribute(s.toLowerCase()+o).split(n),i=/([.?@])?(.*)/.exec(s);v.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?H:\"?\"===i[1]?L:\"@\"===i[1]?z:k})}else v.push({type:6,index:r})}for(const i of t)h.removeAttribute(i)}if(y.test(h.tagName)){const t=h.textContent.split(n),i=t.length-1;if(i>0){h.textContent=s?s.emptyScript:\"\";for(let s=0;s<i;s++)h.append(t[s],u()),C.nextNode(),v.push({type:2,index:++r});h.append(t[i],u())}}}else if(8===h.nodeType)if(h.data===l)v.push({type:2,index:r});else{let t=-1;for(;-1!==(t=h.data.indexOf(n,t+1));)v.push({type:7,index:r}),t+=n.length-1}r++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){var o,n,l,h;if(i===T)return i;let r=void 0!==e?null===(o=s._$Co)||void 0===o?void 0:o[e]:s._$Cl;const u=d(i)?void 0:i._$litDirective$;return(null==r?void 0:r.constructor)!==u&&(null===(n=null==r?void 0:r._$AO)||void 0===n||n.call(r,!1),void 0===u?r=void 0:(r=new u(t),r._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Co)&&void 0!==l?l:h._$Co=[])[e]=r:s._$Cl=r),void 0!==r&&(i=S(t,r._$AS(t,i.values),r,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:r).importNode(s,!0);C.currentNode=o;let n=C.nextNode(),l=0,h=0,u=e[0];for(;void 0!==u;){if(l===u.index){let i;2===u.type?i=new R(n,n.nextSibling,this,t):1===u.type?i=new u.ctor(n,u.name,u.strings,this,t):6===u.type&&(i=new Z(n,this,t)),this._$AV.push(i),u=e[++h]}l!==(null==u?void 0:u.index)&&(n=C.nextNode(),l++)}return C.currentNode=r,o}v(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{constructor(t,i,s,e){var o;this.type=2,this._$AH=A,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cp=null===(o=null==e?void 0:e.isConnected)||void 0===o||o}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cp}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===(null==t?void 0:t.nodeType)&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),d(t)?t===A||null==t||\"\"===t?(this._$AH!==A&&this._$AR(),this._$AH=A):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):v(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==A&&d(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=N.createElement(P(e.h,e.h[0]),this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.v(s);else{const t=new M(o,this),i=t.u(this.options);t.v(s),this.$(i),this._$AH=t}}_$AC(t){let i=E.get(t.strings);return void 0===i&&E.set(t.strings,i=new N(t)),i}T(t){c(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new R(this.k(u()),this.k(u()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cp=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class k{constructor(t,i,s,e,o){this.type=1,this._$AH=A,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=A}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=S(this,t,i,0),n=!d(t)||t!==this._$AH&&t!==T,n&&(this._$AH=t);else{const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=S(this,e[s+l],i,l),h===T&&(h=this._$AH[l]),n||(n=!d(h)||h!==this._$AH[l]),h===A?t=A:t!==A&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h}n&&!e&&this.j(t)}j(t){t===A?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===A?void 0:t}}const I=s?s.emptyScript:\"\";class L extends k{constructor(){super(...arguments),this.type=4}j(t){t&&t!==A?this.element.setAttribute(this.name,I):this.element.removeAttribute(this.name)}}class z extends k{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=S(this,t,i,0))&&void 0!==s?s:A)===T)return;const e=this._$AH,o=t===A&&e!==A||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==A&&(e===A||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class Z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const j={O:o,P:n,A:l,C:1,M:V,L:M,R:v,D:S,I:R,V:k,H:L,N:z,U:H,F:Z},B=i.litHtmlPolyfillSupport;null==B||B(N,R),(null!==(t=i.litHtmlVersions)&&void 0!==t?t:i.litHtmlVersions=[]).push(\"2.8.0\");const D=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new R(i.insertBefore(u(),t),t,void 0,null!=s?s:{})}return l._$AI(t),l};export{j as _$LH,x as html,T as noChange,A as nothing,D as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import { html, render } from \"lit-html\";\nimport { createArray } from \"@/utils\";\n\nconst template = ({ divider }: { divider: number }) => html` <div\n  class=\"mpui-slider mpui-slider-horizontal\"\n  style=\"position: relative; width: 100%; height: 100%\"\n>\n  <div\n    class=\"mpui-slider-track\"\n    style=\"\n      position: absolute;\n      width: 100%;\n      top: 50%;\n      transform: translateY(-50%);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    \"\n  >\n    <div class=\"mpui-slider-bar\" style=\"position: absolute; left: 0; height: 100%\"></div>\n    <div class=\"mpui-slider-thumb-track\" style=\"height: 0px\">\n      <div\n        class=\"mpui-slider-thumb\"\n        style=\"position: absolute; transform: translate(-50%, -50%)\"\n      ></div>\n      ${divider\n        ? html`\n            <div class=\"mpui-slider-divider\">\n              ${createArray(divider, html`<div class=\"mpui-slider-divider-dot\"></div>`)}\n            </div>\n          `\n        : \"\"}\n    </div>\n  </div>\n</div>`;\n\ninterface SliderOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 最小值 */\n  min: number;\n  /** 最大值 */\n  max: number;\n  /** 步长(若不填或为0，则没有步长限制) */\n  step?: number;\n  /** 分割线 */\n  divider?: number | boolean;\n  /** 默认值(不填的情况下默认值为0) */\n  value?: number;\n  /** 数值更改时触发 */\n  onChange?: (value: number) => void;\n  /** 拖动引发数值更改时触发 */\n  onDrag?: (value: number) => void;\n  /** 开始拖动时触发 */\n  onDragStart?: (value: number) => void;\n  /** 结束拖动时触发 */\n  onDragEnd?: (value: number) => void;\n}\n\n/** 横向滑动条 */\nexport class Slider implements SliderOptions {\n  readonly container: HTMLElement;\n  readonly min: number;\n  readonly max: number;\n  /** 步长 */\n  readonly step: number;\n  /** 分割线 */\n  readonly divider: number;\n  /** 数值 */\n  value: number;\n  onChange?: (value: number) => void;\n  onDragStart?: (value: number) => void;\n  onDragEnd?: (value: number) => void;\n  onDrag?: (value: number) => void;\n\n  // 部件\n  $el: HTMLElement;\n\n  $track: HTMLElement;\n\n  $bar: HTMLElement;\n\n  $thumbTrack: HTMLElement;\n\n  $thumb: HTMLElement;\n\n  constructor({\n    container,\n    min,\n    max,\n    step,\n    divider = 0,\n    value = 0,\n    onChange,\n    onDragStart,\n    onDragEnd,\n    onDrag,\n  }: SliderOptions) {\n    this.container = container;\n    this.min = min;\n    this.max = max;\n    this.step = step || 0;\n    this.divider = divider ? (typeof divider === \"boolean\" ? this.step : divider) : 0;\n    this.value = isNaN(value) ? value : Number(value);\n    this.onChange = onChange;\n    this.onDragStart = onDragStart;\n    this.onDragEnd = onDragEnd;\n    this.onDrag = onDrag;\n\n    render(template({ divider: this.divider }), container);\n\n    this.$el = this.container.querySelector(\".mpui-slider\")!;\n    this.$track = this.$el.querySelector(\".mpui-slider-track\")!; // 滑动条轨道\n    this.$bar = this.$track.querySelector(\".mpui-slider-bar\")!; // 滑动条痕迹\n    this.$thumbTrack = this.$track.querySelector(\".mpui-slider-thumb-track\")!; // 滑块轨道\n    this.$thumb = this.$track.querySelector(\".mpui-slider-thumb\")!; // 滑块\n\n    // 滑动条事件\n    this.$el.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      const e: MouseEvent = event;\n      // 鼠标X位置\n      const { clientX } = e;\n      // 滑块长度\n      const trackLength = this.$track.offsetWidth;\n      // 滑块可滑动距离\n      let nMax = this.$thumbTrack.offsetWidth;\n      nMax = nMax || trackLength;\n      // 滑块轨道与总轨道距离差\n      const thumbTrackX = (trackLength - nMax) / 2;\n      // 滑动条位置\n      const nLeft = this.$el.getBoundingClientRect().left;\n      // 计算滑块位置\n      let nLength = clientX - nLeft - thumbTrackX;\n      // 限制滑块移动位置\n      nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n      const value = this.step\n        ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step + this.min\n        : (nLength / nMax) * (this.max - this.min) + this.min;\n      // 开始滑动事件\n      this.onDragStart?.(value);\n      // 监测数据更新并执行函数\n      if (this.value != value) {\n        this.drag(value);\n      }\n\n      const mousemoveEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        // 鼠标X位置\n        const { clientX } = e;\n        // 鼠标移动时取消默认行为，避免选中其他元素或文字\n        e.preventDefault();\n        e.stopPropagation();\n        // 获取鼠标移动后滑块应该移动到的位置\n        let nLength = clientX - nLeft - thumbTrackX;\n        // 限制滑块移动位置\n        nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n\n        const value = this.step\n          ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step +\n            this.min\n          : (nLength / nMax) * (this.max - this.min) + this.min;\n        // 监测数据更新并执行函数\n        if (this.value != value) {\n          this.drag(value);\n        }\n        window.getSelection()?.removeAllRanges();\n      };\n\n      const removeEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        e.stopPropagation();\n        window.getSelection()?.removeAllRanges();\n        document.removeEventListener(\"mousemove\", mousemoveEvent);\n        document.removeEventListener(\"mouseup\", removeEvent);\n        this.onDragEnd?.(value);\n      };\n\n      document.addEventListener(\"mousemove\", mousemoveEvent);\n      document.addEventListener(\"mouseup\", removeEvent);\n    });\n\n    // 设置滑块初始位置\n    this.setValue(this.value);\n  }\n\n  /** 设置滑动条值 */\n  public setValue(value: number) {\n    this.value = value <= this.min ? this.min : value >= this.max ? this.max : value;\n    // 计算滑块位置\n    const per = (this.value - this.min) / (this.max - this.min);\n    // 修改滑块位置\n    this.$thumb.style.left = `${per * 100}%`;\n    // 修改滑动痕迹高度\n    this.$bar.style.width = `${per * 100}%`;\n    // 触发数据更改事件\n    this.onChange?.(this.value);\n  }\n\n  /** 拖动滑动条到特定的值 */\n  public drag(value: number) {\n    this.setValue(value);\n    // 触发拖动事件\n    this.onDrag?.(this.value);\n  }\n}\n","import { html, render } from \"lit-html\";\n\nconst template = () => html`\n  <div\n    class=\"mpui-slider mpui-slider-vertical\"\n    style=\"position: relative; width: 100%; height: 100%\"\n  >\n    <div\n      class=\"mpui-slider-track\"\n      style=\"\n        position: absolute;\n        height: 100%;\n        left: 50%;\n        transform: translateX(-50%);\n        display: flex;\n        justify-content: center;\n        align-items: center\n      \"\n    >\n      <div class=\"mpui-slider-bar\" style=\"position: absolute; bottom: 0; width: 100%\"></div>\n      <div class=\"mpui-slider-thumb-track\" style=\"width: 0px\">\n        <div\n          class=\"mpui-slider-thumb\"\n          style=\"position: absolute; transform: translate(-50%, -50%)\"\n        ></div>\n      </div>\n    </div>\n  </div>\n`;\n\ninterface SliderVerticalOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 最小值 */\n  min: number;\n  /** 最大值 */\n  max: number;\n  /** 步长(若不填或为0，则没有步长限制) */\n  step?: number;\n  /** 默认值(不填的情况下默认值为0) */\n  value?: number;\n  /** 数值更改时触发 */\n  onChange?: (value: number) => void;\n  /** 拖动引发数值更改时触发 */\n  onDrag?: (value: number) => void;\n  /** 开始拖动时触发 */\n  onDragStart?: (value: number) => void;\n  /** 结束拖动时触发 */\n  onDragEnd?: (value: number) => void;\n}\n\n/** 横向滑动条 */\nexport class SliderVertical implements SliderVerticalOptions {\n  readonly container: HTMLElement;\n  readonly min: number;\n  readonly max: number;\n  /** 步长 */\n  readonly step: number;\n  /** 数值 */\n  value: number;\n  onChange?: (value: number) => void;\n  onDragStart?: (value: number) => void;\n  onDragEnd?: (value: number) => void;\n  onDrag?: (value: number) => void;\n  // 部件\n  $el: HTMLElement;\n  $track: HTMLElement;\n  $bar: HTMLElement;\n  $thumbTrack: HTMLElement;\n  $thumb: HTMLElement;\n\n  constructor({\n    container,\n    min,\n    max,\n    step,\n    value = 0,\n    onChange,\n    onDragStart,\n    onDragEnd,\n    onDrag,\n  }: SliderVerticalOptions) {\n    this.container = container;\n    this.min = min;\n    this.max = max;\n    this.step = step || 0;\n    this.value = isNaN(value) ? value : Number(value);\n    this.onChange = onChange;\n    this.onDragStart = onDragStart;\n    this.onDragEnd = onDragEnd;\n    this.onDrag = onDrag;\n\n    render(template(), container);\n\n    this.$el = this.container.querySelector(\".mpui-slider\")!;\n    this.$track = this.$el.querySelector(\".mpui-slider-track\")!; // 滑动条轨道\n    this.$bar = this.$track.querySelector(\".mpui-slider-bar\")!; // 滑动条痕迹\n    this.$thumbTrack = this.$track.querySelector(\".mpui-slider-thumb-track\")!; // 滑块轨道\n    this.$thumb = this.$track.querySelector(\".mpui-slider-thumb\")!; // 滑块\n\n    // 滑动条事件\n    // 点击鼠标事件\n    this.$el.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      const e: MouseEvent = event;\n      // 鼠标Y位置\n      const { clientY } = e;\n      // 滑块长度\n      const trackLength = this.$track.offsetHeight;\n      // 滑块可滑动距离\n      let nMax = this.$thumbTrack.offsetHeight;\n      nMax = nMax || trackLength;\n      // 滑块轨道与总轨道距离差\n      const thumbTrackY = (trackLength - nMax) / 2;\n      // 滑动条位置\n      const nTop = this.$el.getBoundingClientRect().top;\n      // 计算滑块位置\n      let nLength = nMax - (clientY - nTop - thumbTrackY);\n      // 限制滑块移动位置\n      nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n      const value = this.step\n        ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step + this.min\n        : (nLength / nMax) * (this.max - this.min) + this.min;\n      // 开始滑动事件\n      this.onDragStart?.(value);\n      // 监测数据更新并执行函数\n      if (this.value != value) {\n        this.drag(value);\n      }\n\n      const mousemoveEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        // 鼠标X位置\n        const { clientY } = e;\n        // 鼠标移动时取消默认行为，避免选中其他元素或文字\n        e.preventDefault();\n        e.stopPropagation();\n        // 获取鼠标移动后滑块应该移动到的位置\n        let nLength = nMax - (clientY - nTop - thumbTrackY);\n        // 限制滑块移动位置\n        nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n\n        const value = this.step\n          ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step +\n            this.min\n          : (nLength / nMax) * (this.max - this.min) + this.min;\n        // 监测数据更新并执行函数\n        if (this.value != value) {\n          this.drag(value);\n        }\n        window.getSelection()?.removeAllRanges();\n      };\n      const removeEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        e.stopPropagation();\n        window.getSelection()?.removeAllRanges();\n        document.removeEventListener(\"mousemove\", mousemoveEvent);\n        document.removeEventListener(\"mouseup\", removeEvent);\n        this.onDragEnd?.(value);\n      };\n\n      document.addEventListener(\"mousemove\", mousemoveEvent);\n      document.addEventListener(\"mouseup\", removeEvent);\n    });\n    // 设置滑块初始位置\n    this.setValue(this.value);\n  }\n\n  /** 设置滑动条值 */\n  setValue(value: number) {\n    // this.value = value <= this.min ? this.min : value >= this.max ? this.max : value;\n    this.value = Math.max(Math.min(value, this.max), this.min);\n    // 计算滑块位置\n    const per = (this.value - this.min) / (this.max - this.min);\n    // 修改滑块位置\n    this.$thumb.style.top = `${(1 - per) * 100}%`;\n    // 修改滑动痕迹高度\n    this.$bar.style.height = `${Math.max(Math.min(per, 1), 0) * 100}%`;\n    // 执行相应函数\n    this.onChange?.(value);\n  }\n\n  /** 拖动滑动条到特定的值 */\n  private drag(value: number) {\n    this.setValue(value);\n    // 触发拖动事件\n    this.onDrag?.(this.value);\n  }\n}\n","import { html, render, TemplateResult } from \"lit-html\";\n\nconst templateWrap = ({\n  list,\n  template,\n}: {\n  list: PickerOptionsItem[];\n  template?: PickerItemTemplate;\n}) => html`\n  <ul class=\"mpui-picker\">\n    ${list.map(\n      (item, index) => html`\n        <li class=\"mpui-picker-item\" data-value=\"${item.value}\">\n          ${template?.(item, index) || item.label || item.value}\n        </li>\n      `\n    )}\n  </ul>\n`;\n\n/** 选择器函数 */\ntype PickerItemTemplate = (item: PickerOptionsItem, index?: number) => string | TemplateResult;\n\ninterface PickerOptionsItem {\n  value: string | number;\n  label?: string;\n  disabled?: boolean;\n  [key: string]: any;\n}\n\ninterface PickerOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 选择列表 */\n  list: PickerOptionsItem[];\n  /** 选择项标签模板 */\n  template?: PickerItemTemplate;\n  /** 默认值(不填的情况下默认值为null) */\n  value?: string | number | null;\n  /** 值更改时触发 */\n  onChange?: (value: string | number | null) => void;\n  /** 选择某一项时触发 */\n  onPick?: (value: string | number | null) => void;\n  /** 相等条件 */\n  condition?: (item: string, value: string | number | null) => boolean;\n}\n\n/** 单选选择器 */\nexport class Picker implements PickerOptions {\n  readonly container: HTMLElement;\n\n  readonly template?: PickerItemTemplate;\n\n  list: PickerOptionsItem[];\n\n  /** 已选值 */\n  value: string | number | null;\n\n  onChange?: (value: string | number | null) => void;\n\n  onPick?: (value: string | number | null) => void;\n\n  $el!: HTMLElement;\n\n  /** 相等条件 */\n  condition?: (item: string, value: string | number | null) => boolean;\n\n  /** 选择项标签集合 */\n  private $items!: NodeListOf<HTMLElement>;\n\n  constructor({ container, value, onChange, onPick, list, template, condition }: PickerOptions) {\n    this.container = container;\n    this.list = list;\n    this.value = value ?? null;\n    this.onChange = onChange; // 更新数据时需要执行的函数\n    this.onPick = onPick; // 更新数据时需要执行的函数\n    this.template = template;\n    this.condition = condition;\n    this.reload();\n  }\n\n  /** 重载，一般用于列表项更改 */\n  public reload(value?: string) {\n    render(templateWrap({ list: this.list, template: this.template }), this.container);\n    this.$el = this.container.querySelector(\".mpui-picker\")!;\n    this.$items = this.$el.querySelectorAll(\".mpui-picker-item\"); // 标签集合\n    this.$items.forEach((item) => {\n      item.addEventListener(\"click\", () => {\n        this.pick(item.getAttribute(\"data-value\"));\n      });\n    });\n    this.setValue(value ?? this.value);\n  }\n\n  /** 设置值 */\n  public setValue(value: string | number | null) {\n    this.$items.forEach((n, i) => {\n      if (\n        this.condition\n          ? this.condition(n.getAttribute(\"data-value\")!, value)\n          : n.getAttribute(\"data-value\") == value\n      ) {\n        n.classList.add(\"state-checked\");\n      } else {\n        n.classList.remove(\"state-checked\");\n      }\n    });\n    this.value = value;\n    this.onChange?.(value);\n  }\n\n  /** 点选一个选项 */\n  public pick(value: string | null) {\n    this.setValue(value);\n    this.onPick?.(value);\n  }\n}\n","import { html, render, TemplateResult } from \"lit-html\";\n\nconst templateWrap = ({\n  list,\n  template,\n}: {\n  list: PickerOptionsItem[];\n  template?: PickerItemTemplate;\n}) => html`\n  <ul class=\"mpui-picker\">\n    ${list.map(\n      (item, index) => html`\n        <li class=\"mpui-picker-item\" data-value=\"${item.value}\">\n          ${template?.(item, index) || item.label || item.value}\n        </li>\n      `\n    )}\n  </ul>\n`;\n\n/** 选择器函数 */\ntype PickerItemTemplate = (item: PickerOptionsItem, index?: number) => string | TemplateResult;\n\ninterface PickerOptionsItem {\n  value: string;\n  label?: string;\n  disabled?: boolean;\n  [key: string]: any;\n}\n\ninterface MultiPickerOptions {\n  /** 绑定的dom对象 */\n  container: HTMLElement;\n  /** 选择列表 */\n  list: PickerOptionsItem[];\n  /** 选择项标签模板 */\n  template?: PickerItemTemplate;\n  /** 默认值(不填的情况下默认值为[]) */\n  value?: string[];\n  /** 值更改时触发 */\n  onChange?: (value: string[]) => void;\n  /** 选择/取消选择某一项时触发 */\n  onToggle?: (value: string, flag: boolean) => void;\n}\n\n/** 多项选择器 */\nexport class MultiPicker implements MultiPickerOptions {\n  readonly container: HTMLElement;\n\n  readonly template?: PickerItemTemplate;\n\n  list: PickerOptionsItem[];\n\n  valueSet: Set<string>;\n\n  /** 已选值 */\n  get value() {\n    return [...this.valueSet];\n  }\n\n  onChange?: (value: string[]) => void;\n\n  onToggle?: (value: string, flag: boolean) => void;\n\n  $el!: HTMLElement;\n\n  /** 选择项标签集合 */\n  private $items!: NodeListOf<HTMLElement>;\n\n  constructor({ container, value = [], list, onChange, onToggle }: MultiPickerOptions) {\n    this.container = container;\n    this.list = list;\n    this.valueSet = new Set(value);\n    this.onChange = onChange; // 更新数据时需要执行的函数\n    this.onToggle = onToggle; // 更新数据时需要执行的函数\n    this.reload();\n  }\n\n  /** 重载，一般用于列表项更改 */\n  public reload(value?: string[]) {\n    render(templateWrap({ list: this.list, template: this.template }), this.container);\n    this.$el = this.container.querySelector(\".mpui-picker\")!;\n    this.$items = this.$el.querySelectorAll(\".mpui-picker-item\"); // 标签集合\n    this.$items.forEach((item) => {\n      item.addEventListener(\"click\", () => {\n        this.toggle(item.getAttribute(\"data-value\")!);\n      });\n    });\n    this.setValue(value ?? this.value);\n  }\n\n  /** 设置值 */\n  public setValue(value: string[]) {\n    this.valueSet = new Set(value);\n    this.$items.forEach((n, i) => {\n      if (this.valueSet.has(n.getAttribute(\"data-value\")!)) {\n        n.classList.add(\"state-checked\");\n      } else {\n        n.classList.remove(\"state-checked\");\n      }\n    });\n    this.onChange?.(value);\n  }\n\n  /** 切换一个选项的选择状态 */\n  public toggle(value: string, flag?: boolean) {\n    const b = flag == null ? !this.valueSet.has(value) : flag;\n    if (b) {\n      this.valueSet.add(value);\n    } else {\n      this.valueSet.delete(value);\n    }\n    this.$items.forEach((n, i) => {\n      if (n.getAttribute(\"data-value\") == value) {\n        n.classList.toggle(\"state-checked\", b);\n      }\n    });\n    this.onChange?.(this.value);\n    this.onToggle?.(value, b);\n  }\n}\n","import { html, render } from \"lit-html\";\n\nconst templateWrap = ({ label }: { label?: string }) =>\n  html` <div class=\"mpui-switch\">${label}</div> `;\n\ninterface SwitchOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 标签 */\n  label?: string;\n  /** 不可点选 */\n  disabled?: boolean;\n  /** 默认值(不填的情况下默认值为false) */\n  value?: boolean;\n  /** 值更改时触发 */\n  onChange?: (value: boolean) => void;\n  /** 切换状态时触发 */\n  onToggle?: (value: boolean) => void;\n}\n\n/** 开关 */\nexport class Switch implements SwitchOptions {\n  readonly container: HTMLElement;\n\n  onChange?: (value: boolean) => void;\n\n  onToggle?: (value: boolean) => void;\n\n  label?: string;\n\n  /** 当前值 */\n  value: boolean;\n\n  $el: HTMLElement;\n\n  constructor({ container, value = false, onChange, onToggle }: SwitchOptions) {\n    this.container = container;\n    this.value = value;\n    this.onChange = onChange; // 更新数据时需要执行的函数\n    this.onToggle = onToggle;\n    // 注入模板\n    render(templateWrap({ label: this.label }), this.container);\n\n    this.$el = this.container.querySelector(\".mpui-switch\")!;\n    this.$el.addEventListener(\"click\", () => {\n      this.toggle(!this.value);\n    });\n\n    this.setValue(this.value);\n  }\n\n  /** 设置开关状态 */\n  public setValue(value: boolean) {\n    this.value = value;\n    this.$el.classList.toggle(\"state-checked\", value);\n    this.onChange?.(value);\n  }\n\n  /** 点按开关 */\n  public toggle(value = !this.value) {\n    this.setValue(value);\n    this.onToggle?.(value);\n  }\n}\n","import { html, render } from \"lit-html\";\n\nconst templateWrap = ({ label }: { label?: string }) => html`\n  <div class=\"mpui-checkbox\">\n    <div class=\"mpui-checkbox-icon\"></div>\n    <div class=\"mpui-checkbox-label\">${label}</div>\n  </div>\n`;\n\ninterface CheckboxOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 标签 */\n  label?: string;\n  /** 不可点选 */\n  disabled?: boolean;\n  /** 默认值(不填的情况下默认值为false) */\n  value?: boolean;\n  /** 值更改时触发 */\n  onChange?: (value: boolean) => void;\n  /** 切换状态时触发 */\n  onToggle?: (value: boolean) => void;\n}\n\n/** 开关 */\nexport class Checkbox implements CheckboxOptions {\n  readonly container: HTMLElement;\n\n  onChange?: (value: boolean) => void;\n\n  onToggle?: (value: boolean) => void;\n\n  label?: string;\n\n  /** 当前值 */\n  value: boolean;\n\n  $el: HTMLElement;\n\n  constructor({ container, value = false, onChange, onToggle, label }: CheckboxOptions) {\n    this.container = container;\n    this.value = value;\n    this.onChange = onChange; // 更新数据时需要执行的函数\n    this.onToggle = onToggle;\n    this.label = label;\n    // 注入模板\n    render(templateWrap({ label: this.label }), this.container);\n\n    this.$el = this.container.querySelector(\".mpui-checkbox\")!;\n    this.$el.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    this.setValue(this.value);\n  }\n\n  /** 设置开关状态 */\n  public setValue(value: boolean) {\n    this.value = value;\n    this.$el.classList.toggle(\"state-checked\", value);\n    this.onChange?.(value);\n  }\n\n  /** 点按开关 */\n  public toggle(value = !this.value) {\n    this.setValue(value);\n    this.onToggle?.(value);\n  }\n}\n","import { LoadInfo, PluginExports, VideoInfo } from \"./types\";\nimport { PluginManager } from \"./pluginManager\";\nimport Events from \"@/events\";\nimport { PlayerOptions } from \"@/types\";\nimport Video from \"@/Video\";\nimport State from \"@/state\";\nimport { PlayerEventMap, PlayerPropertyMap } from \"./types/PlayerEventMap\";\nimport { createElement } from \"./utils\";\nimport { classPrefix } from \"./config\";\nimport Hooks from \"./hooks\";\nimport * as Utils from \"@/utils\";\nimport * as Components from \"@/components\";\n\n/**\n * @event\n */\nexport class Player {\n  static readonly version = MFUNSPLAYER_VERSION;\n  static readonly gitHash = GIT_HASH;\n  /** 工具函数 */\n  static Utils = Utils;\n  /** 组件 */\n  static Components = Components;\n  /** 容器 */\n  readonly container: HTMLElement;\n  /** 播放器元素 */\n  readonly $el: HTMLDivElement;\n  /** 播放器主要区域 */\n  readonly $main: HTMLDivElement;\n  /** 播放器视频区域 */\n  readonly $area: HTMLDivElement;\n  /** 播放器视频容器 */\n  readonly $content: HTMLDivElement;\n  /** 状态控制模块 */\n  protected state: State;\n  /** 插件管理 */\n  protected pluginManager: PluginManager;\n  /** 视频模块 */\n  protected video: Video;\n  /** 事件模块 */\n  protected event = new Events();\n  /** hook */\n  hook = new Hooks();\n  /** 插件 */\n  plugin: PluginExports = {};\n  /** 视频信息 */\n  videoInfo: VideoInfo = {};\n\n  constructor(options: PlayerOptions) {\n    this.container = options.container;\n\n    this.$el = createElement(\"div\", { class: `${classPrefix} mpui` });\n    this.$main = this.$el.appendChild(createElement(\"div\", { class: `${classPrefix}-main` }));\n    this.$area = this.$main.appendChild(createElement(\"div\", { class: `${classPrefix}-area` }));\n    this.$content = this.$area.appendChild(\n      createElement(\"div\", { class: `${classPrefix}-content` })\n    );\n\n    this.pluginManager = new PluginManager(this);\n    this.video = new Video(this, options);\n\n    this.state = new State(this, options);\n\n    // 注册列表中的插件\n    this.pluginManager.pluginsRegister(options);\n\n    // 列表中插件注册完毕\n    this.pluginManager.pluginsReady(options);\n\n    // 播放器挂载\n    this.container.appendChild(this.$el);\n    this.pluginManager.playerMounted(options);\n    this.emit(\"mounted\");\n\n    this.setVideo(options.video, options.autoPlay, options.time);\n  }\n\n  get $video(): HTMLVideoElement {\n    return this.video.$video;\n  }\n\n  // --- 播放相关 --- //\n\n  /** 加载视频 */\n  public setVideo(info: VideoInfo, play?: boolean, time?: number) {\n    this.videoInfo = info;\n    this.hook.call(\"setVideo\", info).then((res) => {\n      if (res) {\n        this.emit(\"video_change\", info);\n        if (info.url) {\n          this.loadVideo({ url: info.url, type: info.type, play, time });\n        } else {\n          this.throw(new Error(\"缺少视频播放信息\"));\n        }\n      }\n    });\n  }\n\n  /** 加载视频 */\n  public loadVideo(info: LoadInfo) {\n    this.videoInfo.url = info.url;\n    this.videoInfo.type = info.type;\n    this.hook.call(\"loadVideo\", info).then((res) => {\n      if (res) {\n        this.video.load(info);\n      }\n    });\n  }\n\n  /** 切换视频 */\n  public switchVideo(info: LoadInfo) {\n    this.videoInfo.url = info.url;\n    this.videoInfo.type = info.type;\n    this.hook.call(\"switchVideo\", info).then((res) => {\n      if (res) {\n        this.video.load({ time: this.time, play: !this.paused, ...info });\n      }\n    });\n  }\n\n  /** 开始播放 */\n  public play() {\n    this.hook.call(\"play\").then((res) => {\n      if (res) this.video.play();\n    });\n  }\n\n  /** 暂停播放 */\n  public pause() {\n    this.hook.call(\"pause\").then((res) => {\n      if (res) this.video.pause();\n    });\n  }\n\n  /** 切换播放/暂停状态 */\n  public toggle() {\n    if (this.paused) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  }\n\n  /** 切换上一个 */\n  public prev() {\n    this.hook.call(\"prev\");\n  }\n\n  /** 切换下一个 */\n  public next() {\n    this.hook.call(\"next\");\n  }\n\n  /** 当前播放器暂停状态 */\n  get paused() {\n    return this.video.paused;\n  }\n\n  /** 跳转\n   * @param time 跳转时间点（秒）\n   */\n  public seek(time: number) {\n    this.hook.call(\"seek\").then((res) => {\n      if (res) this.video.seek(time);\n    });\n  }\n\n  /** 设置音量\n   * @param volume 音量（0-1）\n   */\n  public setVolume(volume: number) {\n    this.video.setVolume(volume);\n  }\n\n  /**\n   * 静音\n   */\n  public mute() {\n    this.video.setMute(true);\n  }\n\n  /**\n   * 取消静音\n   */\n  public unmute() {\n    this.video.setMute(false);\n  }\n\n  /** 设置倍速 */\n  public setPlaybackRate(value: number) {\n    this.video.setPlaybackRate(value);\n  }\n\n  /** 设置视频循环 */\n  public setLoop(flag: boolean) {\n    this.video.setLoop(flag);\n  }\n  /** 设置视频循环 */\n  public setRatio(value: [number, number] | null) {\n    this.video.setRatio(value);\n  }\n\n  /** 当前播放时间 */\n  public get time() {\n    return this.video.currentTime;\n  }\n\n  /** 当前播放总时间 */\n  public get duration() {\n    return this.video.duration;\n  }\n\n  /** 当前播放音量 */\n  public get volume() {\n    return this.video.volume;\n  }\n\n  /** 当前静音状态 */\n  public get muted() {\n    return this.video.muted;\n  }\n\n  /** 当前静音状态 */\n  public get loop() {\n    return this.video.loop;\n  }\n\n  /** 当前播放速度 */\n  public get playbackRate() {\n    return this.video.playbackRate;\n  }\n\n  // --- 播放器状态控制 --- //\n\n  /** 播放器进入聚焦状态 */\n  public focus() {\n    this.state.focus();\n  }\n  /** 播放器取消聚焦状态 */\n  public blur() {\n    this.state.blur();\n  }\n  /** 当前播放器聚焦状态 */\n  get focused() {\n    return this.state.focused;\n  }\n  /** 当前播放器视口相交状态 */\n  get intersecting() {\n    return this.state.intersecting;\n  }\n  /** 播放器进入活跃状态 */\n  public setActive() {\n    this.state.setActive();\n  }\n  /** 播放器取消活跃状态 */\n  public removeActive() {\n    this.state.removeActive();\n  }\n\n  /** 当前播放器活跃状态 */\n  get active() {\n    return this.state.active;\n  }\n  /** 播放器进入控制状态 */\n  set controlled(val: boolean) {\n    this.state.controlled = val;\n  }\n  /** 播放器取消控制状态 */\n  get controlled() {\n    return this.state.controlled;\n  }\n\n  // --- 事件 --- //\n\n  /** 绑定新的视频元素 */\n  public bindVideo(el: HTMLVideoElement) {\n    this.video.$video = el;\n    this.video.detachEvent();\n    this.video.attachEvent(el);\n  }\n\n  /** 监听事件 */\n  public on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this.event.on(name, listener);\n  }\n\n  /** 取消监听事件 */\n  public off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this.event.off(name, listener);\n  }\n\n  /** 一次性监听事件 */\n  public once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this.event.once(name, listener);\n  }\n\n  /** 发送事件 */\n  public emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\n    this.event.emit(name, ...args);\n  }\n\n  /** 发送属性变化 */\n  public emitChange<T extends keyof PlayerPropertyMap>(name: T, value: PlayerPropertyMap[T]) {\n    this.event.emit(\"change\", name, value);\n    this.event.emit(`change:${name}` as any, value);\n  }\n\n  /** 监听属性变化 */\n  public watch<T extends keyof PlayerPropertyMap>(\n    name: T,\n    listener: (value: PlayerPropertyMap[T]) => any\n  ) {\n    this.event.on(`change:${name}` as any, listener);\n  }\n\n  /** 取消监听属性变化 */\n  public unwatch<T extends keyof PlayerPropertyMap>(\n    name: T,\n    listener: (value: PlayerPropertyMap[T]) => any\n  ) {\n    this.event.off(`change:${name}` as any, listener);\n  }\n\n  public throw(err: Error) {\n    console.error(err);\n    this.emit(\"error\", err);\n  }\n\n  /** 播放器销毁 */\n  public destroy() {\n    // 所有插件执行destroy函数\n    this.pluginManager.destroy();\n  }\n}\n\nexport default Player;\n","import Player from \"@/player\";\nimport \"@css/index.scss\";\n\nconsole.log(\n  `${\"\\n\"} %c mfunsPlayer v${MFUNSPLAYER_VERSION} ${GIT_HASH} %c https://github.com/Mfuns-cn ${\"\\n\"}${\"\\n\"}`,\n  \"color: #fff; background: #7b7ff7; padding:5px 0;\",\n  \"background: #f5f5f5; padding:5px 0;\"\n);\n\nexport default Player;\n","/** 虚拟列表 */\n\nexport class VirtualList<T> {\n  /** 需要绑定的DOM对象 */\n  $el: HTMLElement;\n  $content: HTMLElement;\n  /** 列表数据 */\n  data: T[] = [];\n  /** 拉取列表数据 () => Object */\n  getData: () => T[];\n  /** 列表项高度 */\n  itemHeight: number;\n  /** 列表项DOM生成函数 */\n  createItem: (item: T, i: number, array: T[]) => HTMLElement;\n  /** 溢出范围 */\n  overflow: number;\n  /** 滚动距离 */\n  scrollTop = 0;\n  /** 列表渲染起点 */\n  renderStart = -1;\n  /** 列表渲染终点 */\n  renderEnd = -1;\n  /** 可视范围起点 */\n  viewStart = 0;\n  /** 可视范围终点 */\n  viewEnd = 0;\n  /** 节流开关 */\n  throttle = false;\n  /** 已清空状态 */\n  cleared = false;\n  constructor({\n    el,\n    getData,\n    itemHeight,\n    createItem,\n    overflow = 0,\n  }: {\n    el: HTMLElement;\n    getData: () => T[];\n    itemHeight: number;\n    createItem: (item: T, i: number, array: T[]) => HTMLElement;\n    overflow?: number;\n  }) {\n    this.$el = el;\n    this.getData = getData;\n    this.itemHeight = itemHeight;\n    this.createItem = createItem;\n    this.overflow = overflow;\n\n    this.renderStart = -1;\n    this.renderEnd = -1;\n    this.viewStart = 0;\n    this.viewEnd = 0;\n    this.throttle = false;\n    this.cleared = false;\n\n    this.$el.classList.add(\"vlist-container\");\n    this.$content = document.createElement(\"div\");\n    this.$content.classList.add(\"vlist-content\");\n    this.$el.appendChild(this.$content);\n\n    this.$el.addEventListener(\"scroll\", () => {\n      this.cleared || this.handleScroll();\n    });\n\n    this.reload();\n  }\n  /** 重载列表 */\n  reload() {\n    this.clear();\n    this.data = this.getData();\n    console.log(this.data);\n    this.renderStart = -1;\n    this.renderEnd = -1;\n    this.viewStart = 0;\n    this.viewEnd = 0;\n    this.throttle = false;\n    this.handleScroll();\n    this.cleared = false;\n  }\n  /** 更新列表 */\n  update() {\n    this.data = this.getData();\n    this.handleScroll();\n  }\n  handleScroll() {\n    if (!this.throttle) {\n      const clientH = this.$el.clientHeight;\n      const scrollTop = this.$el.scrollTop;\n      clientH && (this.scrollTop = scrollTop);\n      this.viewStart = this.getViewStart(scrollTop);\n      this.viewEnd = this.getViewEnd(scrollTop, clientH);\n      if (this.viewStart <= this.renderStart || this.viewEnd >= this.renderEnd) {\n        this.render(clientH, scrollTop);\n        // console.log(`${this.renderStart} - ${this.renderEnd}`)\n      }\n      // console.log(`${scrollTop} + ${clientH} @ ${this.viewStart} - ${this.viewEnd} # ${this.renderStart} - ${this.renderEnd}`)\n    } else {\n      // console.log(\"none\")\n    }\n  }\n  render(clientH: number, scrollTop: number) {\n    // 保存原渲染范围\n    const oldRenderStart = this.renderStart;\n    const oldRenderEnd = this.renderEnd;\n    // 获取新渲染范围\n    this.renderStart = this.getViewStart(scrollTop) - this.overflow;\n    this.renderEnd = this.getViewEnd(scrollTop, clientH) + this.overflow;\n    // console.log(`old ${oldRenderStart}-${oldRenderEnd} new ${this.renderStart}-${this.renderEnd}`)\n    // 与列表前段比较\n    if (this.renderStart < oldRenderStart) {\n      // 列表前段范围扩张, 添加新列表项\n      const beforeItems = document.createDocumentFragment();\n      const addFrom = Math.max(this.renderStart, 0);\n      const addTo = Math.min(oldRenderStart - 1, this.renderEnd, this.data.length - 1);\n      // console.log(`add ${addFrom}-${addTo}`)\n      for (let i = addFrom; i <= addTo; i++) {\n        beforeItems.appendChild(this.createItem(this.data[i], i, this.data));\n        // console.log(\"add: \" + i)\n      }\n      this.$content.insertBefore(beforeItems, this.$content.firstElementChild);\n    } else {\n      // 若不扩张, 则删除多余的列表项\n      const removeFrom = Math.max(oldRenderStart, 0);\n      const removeTo = Math.min(this.renderStart - 1, oldRenderEnd);\n      // console.log(`remove ${removeFrom}-${removeTo}`)\n      for (let i = removeFrom; i <= removeTo; i++) {\n        const child = this.$content.firstElementChild;\n        child && this.$content.removeChild(child);\n      }\n    }\n\n    // 与列表后段比较\n    if (this.renderEnd > oldRenderEnd) {\n      // 列表后段范围扩张, 添加新列表项\n      const afterItems = document.createDocumentFragment();\n      const addFrom = Math.max(oldRenderEnd + 1, this.renderStart);\n      const addTo = Math.min(this.renderEnd, this.data.length - 1);\n      // console.log(`add ${addFrom}-${addTo}`)\n      for (let i = addFrom; i <= addTo; i++) {\n        afterItems.appendChild(this.createItem(this.data[i], i, this.data));\n        // console.log(\"add: \" + i)\n      }\n      this.$content.appendChild(afterItems);\n    } else {\n      // 若不扩张, 则删除多余的列表项\n      const removeFrom = Math.min(oldRenderEnd, this.data.length - 1);\n      const removeTo = Math.max(this.renderEnd + 1, oldRenderStart);\n      // console.log(`remove ${removeFrom}-${removeTo}`)\n      for (let i = removeFrom; i >= removeTo; i--) {\n        const child = this.$content.lastElementChild;\n        child && this.$content.removeChild(child);\n        // console.log(\"remove: \" + i)\n      }\n    }\n\n    // 设定占位边距\n    this.$content.style.paddingTop = `${\n      this.renderStart > 0 ? this.renderStart * this.itemHeight : 0\n    }px`;\n    this.$content.style.paddingBottom = `${\n      this.renderEnd < this.data.length - 1\n        ? (this.data.length - this.renderEnd - 1) * this.itemHeight\n        : 0\n    }px`;\n  }\n  getViewStart(scrollTop: number) {\n    return Math.floor(scrollTop / this.itemHeight);\n  }\n  getViewEnd(scrollTop: number, clientH: number) {\n    return Math.ceil((scrollTop + clientH) / this.itemHeight) - 1;\n  }\n  // 清空列表\n  clear() {\n    this.data = [];\n    this.$content.innerHTML = \"\";\n    this.$content.style.paddingTop = \"0px\";\n    this.$content.style.paddingBottom = \"0px\";\n    this.cleared = true;\n  }\n  locateStart(n: number) {\n    // 定位到某项开头\n    this.scrollTo(n * this.itemHeight);\n  }\n  locateEnd(n: number) {\n    // 定位到某项末尾\n    this.scrollTo(n * this.itemHeight - this.$el.clientHeight);\n  }\n  scrollTo(top: number) {\n    this.$el.scrollTo({\n      top,\n      behavior: \"auto\",\n    });\n  }\n}\n","import { PlayerOptions, Plugin, PluginExports } from \"@/types\";\nimport Player from \".\";\n\nexport abstract class BasePlugin implements Plugin {\n  static pluginName: string;\n  protected player: Player;\n  protected plugin: PluginExports;\n  constructor(player: Player) {\n    this.player = player;\n    this.plugin = player.plugin;\n  }\n}\n\nexport abstract class ControlsPlugin extends BasePlugin {\n  $el: HTMLElement;\n  container?: HTMLElement;\n  order?: number;\n  constructor(\n    player: Player,\n    options: PlayerOptions,\n    {\n      name,\n      defaultOptions,\n      el,\n      disabled,\n    }: {\n      name: string;\n      defaultOptions: { container: (player: Player) => HTMLElement | undefined; order?: number };\n      el: HTMLElement;\n      disabled?: boolean;\n    }\n  ) {\n    super(player);\n    const opt = options.controls?.[name];\n    this.container = (opt?.container || defaultOptions.container)?.(player);\n    this.order = opt?.order || defaultOptions.order;\n\n    this.$el = el;\n    this.$el.style.order = (this.order || \"\").toString();\n    !disabled && this.container?.append(this.$el);\n  }\n  $<T extends Element>(selectors: string) {\n    return this.$el.querySelector<T>(selectors);\n  }\n}\n\nexport abstract class PanelPlugin extends BasePlugin {\n  abstract title: string;\n  $el: HTMLElement;\n  container?: HTMLElement;\n  onUnmount?: () => void;\n  onToggle?: (flag: boolean) => void;\n  shown = false;\n  constructor(\n    player: Player,\n    options: PlayerOptions,\n    {\n      name,\n      defaultOptions,\n      el,\n    }: {\n      name: string;\n      defaultOptions?: {\n        container?: (player: Player) => HTMLElement;\n        onToggle?: (flag: boolean) => void;\n        onUnmount?: () => void;\n        mount?: (player: Player) => PanelContainer | undefined;\n      };\n      el: HTMLElement;\n    }\n  ) {\n    super(player);\n    console.log(name);\n    console.log(el);\n    this.$el = el;\n    const opt = options.panels?.[name] || defaultOptions;\n    if (opt?.mount) {\n      opt?.mount(player)?.mount(this);\n    } else {\n      this.container = opt?.container?.(player);\n      this.onToggle = opt?.onToggle;\n      this.onUnmount = opt?.onUnmount;\n    }\n  }\n\n  mount(el: HTMLElement, onToggle?: (flag: boolean) => void, onUnmount?: () => void) {\n    el.appendChild(this.$el);\n    this.unmount();\n    this.onToggle = onToggle;\n    this.onUnmount = onUnmount;\n  }\n  unmount() {\n    this.toggle(false);\n    this.onUnmount?.();\n    this.onToggle = void 0;\n    this.onUnmount = void 0;\n  }\n  toggle(flag?: boolean) {\n    this.shown = flag ?? !this.shown;\n    this.onToggle?.(this.shown);\n  }\n  $<T extends Element>(selectors: string) {\n    return this.$el.querySelector<T>(selectors);\n  }\n}\n\nexport interface PanelContainer {\n  mount: (panel: PanelPlugin) => void;\n}\n","import { debounce, secondToTime } from \"@/utils\";\nimport { dateFormat } from \"@/utils/index\";\nimport { DanmakuItem } from \"@/plugins/danmaku/types\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { VirtualList } from \"./VirtualList\";\nimport \"./style.scss\";\nimport Danmaku from \"@/plugins/danmaku\";\nimport { PanelPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\ndeclare module \"@/types\" {\n  interface PlayerPropertyMap {\n    \"danmakuList.autoScroll\": boolean;\n  }\n  interface PlayerEventMap {\n    \"danmakuList:select\": (dan: DanmakuItem[]) => void;\n  }\n  interface PluginExports {\n    danmakuList?: DanmakuList;\n  }\n}\n\nconst template = (clearSelect: () => void) => html`\n  <div class=\"${classPrefix}-danmakulist\">\n    <div class=\"${classPrefix}-danmakulist-main\">\n      <div class=\"${classPrefix}-danmakulist-head\">\n        <div class=\"list-column col-time\">时间</div>\n        <div class=\"list-column col-content\">弹幕内容</div>\n        <div class=\"list-column col-date\">发送时间</div>\n      </div>\n      <div class=\"${classPrefix}-danmakulist-select\">\n        <div class=\"${classPrefix}-danmakulist-select-info\"></div>\n        <div class=\"${classPrefix}-danmakulist-select-operate\">\n          <div class=\"list-operate-btn\" @click=${clearSelect}>取消选择</div>\n        </div>\n      </div>\n      <div class=\"${classPrefix}-danmakulist-container\"></div>\n      <div class=\"${classPrefix}-danmakulist-status\">\n        <div class=\"status-loading-text\">弹幕列表装填中……</div>\n        <div class=\"status-failed-text\">弹幕加载失败 X_X</div>\n        <div class=\"status-empty-text\">还没有弹幕哦，快来发弹幕^_^</div>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-danmakulist-foot\">\n      <div class=\"${classPrefix}-danmakulist-foot-left\">\n        <span class=\"${classPrefix}-danmakulist-autoscroll\">列表滚动[关]</span>\n      </div>\n      <div class=\"${classPrefix}-danmakulist-foot-right\"></div>\n    </div>\n  </div>\n`;\n\nconst getDanmakuListItem = (\n  danmaku: DanmakuItem,\n  index: number,\n  {\n    operation,\n    onClick,\n    onDblclick,\n    selected,\n    focused,\n    title,\n  }: {\n    operation: (dm: DanmakuItem) => [string, (dm: DanmakuItem) => void, unknown][];\n    onClick: (e: MouseEvent, dm: DanmakuItem) => void;\n    onDblclick: (e: MouseEvent, dm: DanmakuItem) => void;\n    selected: (dm: DanmakuItem) => boolean;\n    focused: (dm: DanmakuItem) => boolean;\n    title: (dm: DanmakuItem) => string;\n  }\n) => {\n  const t = html`\n    <div\n      class=\"${`list-row ${selected(danmaku) ? \"state-selected\" : \"\"} ${\n        focused(danmaku) ? \"state-focused\" : \"\"\n      }`.trim()}\"\n      data-index=\"${index}\"\n      data-mode=\"${danmaku.mode}\"\n      @dblclick=${(e: MouseEvent) => {\n        onDblclick(e, danmaku);\n      }}\n      @click=${(e: MouseEvent) => {\n        onClick(e, danmaku);\n      }}\n      title=\"${title(danmaku)}\"\n    >\n      <div class=\"list-cell col-time\">${secondToTime(danmaku.time)}</div>\n      <div class=\"list-cell col-content\">${danmaku.content}</div>\n      <div class=\"list-cell col-date\">\n        ${danmaku.date ? dateFormat(new Date(danmaku.date * 1000), \"yy-MM-dd HH:mm\") : \"-\"}\n      </div>\n      ${operation.length\n        ? html`<div class=\"list-operate\" title=\"\">\n            ${operation(danmaku).map(\n              ([label, onClick]) => html`<div\n                class=\"list-operate-btn\"\n                @click=${(e: MouseEvent) => {\n                  e.stopPropagation();\n                  onClick(danmaku);\n                }}\n              >\n                ${label}\n              </div>`\n            )}\n          </div>`\n        : \"\"}\n    </div>\n  `;\n  const fragment = new DocumentFragment();\n  render(t, fragment);\n  return fragment.firstElementChild! as HTMLElement;\n};\n\nexport default class DanmakuList extends PanelPlugin {\n  static readonly pluginName = \"danmakuList\";\n  title = \"弹幕列表\";\n  player: Player;\n  danmaku: Danmaku;\n  data: DanmakuItem[] = [];\n  selected: DanmakuItem[] = [];\n  private focused: DanmakuItem | null = null;\n  sortedBy: keyof DanmakuItem = \"time\";\n  sortOrder = 1 | -1;\n\n  list!: VirtualList<DanmakuItem>;\n  /** 是否随播放自动滚动 */\n  autoScroll = true;\n  /** 自动滚动冻结 */\n  frozen = false;\n  /** 是否挂载到播放器外部 */\n  mounted = false;\n\n  $main: HTMLElement;\n  $container: HTMLElement;\n  $status: HTMLElement;\n  $colTime: HTMLElement;\n  $colDate: HTMLElement;\n  $colContent: HTMLElement;\n  $autoscroll: HTMLElement;\n\n  $select: HTMLElement;\n  $selectInfo: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(\n      template(() => this.select([])),\n      fragment\n    );\n    super(player, options, {\n      name: \"danmakuList\",\n      defaultOptions: {\n        mount: (player) => player.plugin.side,\n      },\n      el: fragment.querySelector(`.${classPrefix}-danmakulist`)!,\n    });\n    this.player = player;\n    this.danmaku = player.plugin.danmaku!;\n    this.$main = this.$(`.${classPrefix}-danmakulist-main`)!;\n    this.$container = this.$(`.${classPrefix}-danmakulist-container`)!;\n    this.$status = this.$(`.${classPrefix}-danmakulist-status`)!;\n    this.$colTime = this.$(\".col-time\")!;\n    this.$colDate = this.$(\".col-date\")!;\n    this.$colContent = this.$(\".col-content\")!;\n    this.$autoscroll = this.$(`.${classPrefix}-danmakulist-autoscroll`)!;\n\n    this.$select = this.$(`.${classPrefix}-danmakulist-select`)!;\n    this.$selectInfo = this.$(`.${classPrefix}-danmakulist-select-info`)!;\n\n    this.$colTime.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"time\") {\n        this.sort(\"time\", -this.sortOrder);\n      } else {\n        this.sort(\"time\", 1);\n      }\n    };\n    this.$colDate.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"date\") {\n        this.sort(\"date\", -this.sortOrder);\n      } else {\n        this.sort(\"date\", 1);\n      }\n    };\n    this.$colContent.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"content\") {\n        this.sort(\"content\", -this.sortOrder);\n      } else {\n        this.sort(\"content\", 1);\n      }\n    };\n    this.$autoscroll.onclick = () => {\n      this.setAutoScroll(!this.autoScroll);\n    };\n    this.player.watch(\"danmakuList.autoScroll\", (flag) => {\n      if (flag) {\n        this.$autoscroll.innerText = \"列表滚动[开]\";\n      } else {\n        this.$autoscroll.innerText = \"列表滚动[关]\";\n      }\n    });\n    if (this.autoScroll) {\n      this.player.emitChange(\"danmakuList.autoScroll\", true);\n    }\n    this.player.on(\"danmakuList:select\", (dm) => {\n      const num = dm.length;\n      this.$selectInfo.innerText = num ? `已选择${num}条弹幕` : \"\";\n      this.$select.classList.toggle(\"state-show\", num > 1);\n    });\n  }\n  mount(\n    el: HTMLElement,\n    onToggle?: ((flag: boolean) => void) | undefined,\n    onUnmount?: (() => void) | undefined\n  ): void {\n    super.mount(el, onToggle, onUnmount);\n    const pos = this.list?.scrollTop;\n    console.log(\"mountpos: \" + pos);\n    requestAnimationFrame(() => {\n      pos != null && this.list?.scrollTo(pos);\n      -this.autoScroll && this.locateByTime(this.player.time);\n    });\n  }\n  toggle(flag?: boolean | undefined): void {\n    super.toggle(flag);\n    if (this.shown) {\n      const pos = this.list?.scrollTop;\n      console.log(\"togglepos: \" + pos);\n      pos != null && this.list?.scrollTo(pos);\n      this.autoScroll && this.locateByTime(this.player.time);\n    }\n  }\n  created() {\n    const api = this.danmaku?.api;\n    const operate = this.danmaku.operate;\n    this.list = new VirtualList({\n      el: this.$container,\n      getData: () => {\n        return this.data;\n      },\n      itemHeight: 24,\n      createItem: (danmaku, i) =>\n        getDanmakuListItem(danmaku, i, {\n          operation: (dm) => {\n            const myDanmaku = this.player.userId && dm.user == this.player.userId;\n            return [\n              [\n                \"举报\",\n                (dm: DanmakuItem) => {\n                  operate.report(dm);\n                },\n                !myDanmaku && api?.report,\n              ],\n              [\n                \"屏蔽\",\n                (dm: DanmakuItem) => {\n                  operate.blockUser(dm.user, true);\n                },\n                !myDanmaku && api?.blockUser,\n              ],\n              [\n                \"撤回\",\n                (dm: DanmakuItem) => {\n                  operate.recall(dm);\n                },\n                myDanmaku && api?.recall,\n              ],\n            ].filter((v) => v[2]) as [string, (dm: DanmakuItem) => void, unknown][];\n          },\n          onClick: (e, dm) => {\n            this.clickSelect(dm, e.shiftKey, e.ctrlKey);\n          },\n          onDblclick: (e, dm) => {\n            this.player.seek(dm.time);\n          },\n          selected: (dm) => this.selected.includes(dm),\n          focused: (dm) => this.focused == dm,\n          title: (dm) =>\n            `${dm.content}\\n${\n              danmaku.date ? dateFormat(new Date(danmaku.date * 1000), \"yyyy-MM-dd HH:mm:ss\") : \"-\"\n            } @ ${secondToTime(danmaku.time, false)}`,\n        }),\n      overflow: 5,\n    });\n\n    const unFreeze = debounce(() => {\n      this.frozen = false;\n    }, 5000);\n    this.list.$el.addEventListener(\"wheel\", () => {\n      this.frozen = true;\n      unFreeze();\n    });\n    this.list.$el.addEventListener(\"mousedown\", () => {\n      this.frozen = true;\n      unFreeze();\n    });\n    this.$main.addEventListener(\"mouseleave\", () => {\n      this.frozen = false;\n    });\n\n    // 切换到新分P时，清空上一P弹幕\n    this.player.on(\"video_change\", () => {\n      this.clear();\n    });\n    this.player.on(\"danmaku:loaded\", (dan) => {\n      this.fill(dan);\n      if (this.autoScroll) {\n        this.sort(\"time\");\n      }\n    });\n    this.player.on(\"danmaku:addition_loaded\", (url, dan) => {\n      this.fill(dan);\n      if (this.autoScroll) {\n        this.sort(\"time\");\n      }\n    });\n    this.player.on(\"timeupdate\", (time) => {\n      if (this.autoScroll && !this.frozen) {\n        this.locateByTime(time);\n      }\n    });\n    this.player.on(\"danmaku:select\", (dan) => {\n      this.locateByDanmaku(dan);\n      this.select([dan]);\n    });\n  }\n  /** 弹幕列表排序 */\n  sort(sortedBy: keyof DanmakuItem, sortOrder = 1) {\n    this.sortedBy = sortedBy;\n    this.sortOrder = sortOrder;\n    this.data.sort((a: any, b: any) => {\n      const at = a[this.sortedBy];\n      const bt = b[this.sortedBy];\n      // 排序\n      return at > bt ? sortOrder : at == bt ? 0 : -sortOrder;\n    });\n    this.list.reload();\n  }\n  /** 装填弹幕(重载列表) */\n  fill(dan: DanmakuItem[]) {\n    this.data = this.data.concat(dan);\n    // 弹幕列表装填\n    if (!this.data.length) {\n      this.setStatus(\"empty\");\n    } else {\n      this.reload();\n      this.setStatus();\n    }\n  }\n  /** 添加弹幕(不重载列表) */\n  add(dan: DanmakuItem[]) {\n    this.data = this.data.concat(dan);\n    // 弹幕列表装填\n    if (!this.data.length) {\n      this.setStatus(\"empty\");\n    } else {\n      this.list.update();\n      this.setStatus();\n    }\n  }\n  /** 重载弹幕列表 */\n  reload() {\n    this.sort(this.sortedBy, this.sortOrder);\n    if (this.autoScroll) {\n      this.locateByTime(this.player.time);\n    }\n  }\n  clear() {\n    // 清空弹幕列表\n    this.list.clear();\n    this.data = [];\n    this.setStatus(\"loading\");\n  }\n  setStatus(status = \"\") {\n    this.$status.dataset.status = status;\n    console.log(\"弹幕加载状态\" + status);\n  }\n  /** 根据播放时间定位 */\n  locateByTime(time: number) {\n    let viewEnd = this.list.viewEnd;\n    if (this.data[viewEnd]?.time > time) {\n      // 如果列表可视区域最后一项的时间超过当前时间, 则重头开始遍历, 否则从列表可视区域最后一项遍历\n      viewEnd = 0;\n    }\n    while (this.data[viewEnd + 1]?.time <= time) {\n      // 遍历并检测下一项弹幕时间是否超过当前时间, 若超过, 则以当前弹幕为定位点\n      viewEnd++;\n    }\n    this.list.locateEnd(viewEnd);\n  }\n  /** 定位弹幕 */\n  locateByDanmaku(dan: DanmakuItem) {\n    const index = this.data.indexOf(dan);\n    if (index > -1) {\n      this.list.locateStart(index);\n      this.frozen = true;\n    }\n  }\n  setAutoScroll(flag: boolean) {\n    this.player.emitChange(\"danmakuList.autoScroll\", flag);\n    // 设置自动滚动\n    this.autoScroll = flag;\n    if (flag) {\n      this.frozen = false;\n      this.sort(\"time\");\n      this.locateByTime(this.player.time);\n      this.list.handleScroll();\n    }\n  }\n  /** 设置选定状态 */\n  select(dan: DanmakuItem[], focused?: DanmakuItem) {\n    this.selected = dan;\n    const selectedIndex: number[] = [];\n    this.focused = focused || (dan.length == 1 ? dan[0] : null);\n    const focusedIndex = this.data.indexOf(this.focused!);\n    dan.forEach((dm) => {\n      const index = this.data.indexOf(dm);\n      selectedIndex.push(index);\n    });\n    for (const item of this.list.$content.children) {\n      item.classList.toggle(\n        \"state-selected\",\n        selectedIndex.includes(Number((item as HTMLElement).dataset.index))\n      );\n      item.classList.toggle(\n        \"state-focused\",\n        focusedIndex == Number((item as HTMLElement).dataset.index)\n      );\n    }\n    this.player.emit(\"danmakuList:select\", this.selected);\n  }\n  /** 设置某条弹幕的选定状态，若选定则聚焦弹幕，否则取消聚焦 */\n  private toggleSelect(dm: DanmakuItem, flag: boolean) {\n    const focusedItem = this.list.$content.querySelector(\n      `[data-index=\"${this.data.indexOf(this.focused!)}\"]`\n    );\n    const item = this.list.$content.querySelector(`[data-index=\"${this.data.indexOf(dm)}\"]`);\n    if (flag) {\n      if (!this.selected.includes(dm)) {\n        this.selected.push(dm);\n      }\n      this.focused = dm;\n      item?.classList.add(\"state-selected\");\n      item?.classList.add(\"state-focused\");\n    } else if (!flag) {\n      const index = this.selected.indexOf(dm);\n      if (index > -1) {\n        this.selected.splice(index, 1);\n      }\n      item?.classList.remove(\"state-selected\");\n      focusedItem?.classList.remove(\"state-focused\");\n    }\n    this.player.emit(\"danmakuList:select\", this.selected);\n  }\n  /** 单击选定弹幕 */\n  private clickSelect(dm: DanmakuItem, shift?: boolean, ctrl?: boolean) {\n    if (shift) {\n      // 按住shift，则以已聚焦弹幕到当前选择弹幕范围选定弹幕，若无已聚焦弹幕，则只选定该弹幕\n      // 该操作既不会取消选择已选弹幕，也不会重新设定已存在的聚焦弹幕\n      if (this.focused) {\n        const index = this.data.indexOf(dm);\n        const focusedIndex = this.data.indexOf(this.focused!);\n        if (index == -1 || focusedIndex == -1) {\n          // 若弹幕列表中没有该弹幕，或未设定已聚焦弹幕，则只选定该弹幕\n          this.select([dm]);\n        } else {\n          const from = index < focusedIndex ? index : focusedIndex;\n          const to = (index < focusedIndex ? focusedIndex : index) + 1;\n          this.select(this.data.slice(from, to), this.focused);\n        }\n      } else {\n        this.select([dm]);\n      }\n    } else if (ctrl) {\n      // 按住ctrl，则将该条弹幕添加到已选择弹幕中，若该弹幕已选择，则移除选择\n      // 选定弹幕时设定聚焦状态，移除选择时移除聚焦状态\n      this.toggleSelect(dm, !this.selected.includes(dm));\n    } else {\n      // 如果该弹幕是唯一一条已选择弹幕，则清除选择，否则选择该条弹幕\n      if (this.selected.length == 1 && this.selected[0] == dm) {\n        this.select([]);\n      } else {\n        this.select([dm]);\n      }\n    }\n  }\n}\n","export enum keyCode {\n  Backspace = 8,\n  Tab = 9,\n  Enter = 13,\n  Shift = 16,\n  Ctrl = 17,\n  Alt = 18,\n  PauseBreak = 19,\n  CapsLock = 20,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n\n  Insert = 45,\n  Delete = 46,\n\n  Zero = 48,\n  ClosedParen = Zero,\n  One = 49,\n  ExclamationMark = One,\n  Two = 50,\n  AtSign = Two,\n  Three = 51,\n  PoundSign = Three,\n  Hash = PoundSign,\n  Four = 52,\n  DollarSign = Four,\n  Five = 53,\n  PercentSign = Five,\n  Six = 54,\n  Caret = Six,\n  Hat = Caret,\n  Seven = 55,\n  Ampersand = Seven,\n  Eight = 56,\n  Star = Eight,\n  Asterik = Star,\n  Nine = 57,\n  OpenParen = Nine,\n\n  A = 65,\n  B = 66,\n  C = 67,\n  D = 68,\n  E = 69,\n  F = 70,\n  G = 71,\n  H = 72,\n  I = 73,\n  J = 74,\n  K = 75,\n  L = 76,\n  M = 77,\n  N = 78,\n  O = 79,\n  P = 80,\n  Q = 81,\n  R = 82,\n  S = 83,\n  T = 84,\n  U = 85,\n  V = 86,\n  W = 87,\n  X = 88,\n  Y = 89,\n  Z = 90,\n\n  LeftWindowKey = 91,\n  RightWindowKey = 92,\n  SelectKey = 93,\n\n  Numpad0 = 96,\n  Numpad1 = 97,\n  Numpad2 = 98,\n  Numpad3 = 99,\n  Numpad4 = 100,\n  Numpad5 = 101,\n  Numpad6 = 102,\n  Numpad7 = 103,\n  Numpad8 = 104,\n  Numpad9 = 105,\n\n  Multiply = 106,\n  Add = 107,\n  Subtract = 109,\n  DecimalPoint = 110,\n  Divide = 111,\n\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n\n  NumLock = 144,\n  ScrollLock = 145,\n\n  SemiColon = 186,\n  Equals = 187,\n  Comma = 188,\n  Dash = 189,\n  Period = 190,\n  UnderScore = Dash,\n  PlusSign = Equals,\n  ForwardSlash = 191,\n  Tilde = 192,\n  GraveAccent = Tilde,\n\n  OpenBracket = 219,\n  ClosedBracket = 221,\n  Quote = 222,\n}\n","import { PlayerOptions } from \"@/types\";\nimport { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport { Picker } from \"@/components\";\nimport { color2Number } from \"@/utils\";\nimport DanmakuBar from \".\";\n\ndeclare global {\n  interface Window {\n    EyeDropper: {\n      new (): {\n        open: () => Promise<{ sRGBHex: string }>;\n      };\n    };\n  }\n}\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_danmakustyle\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-text\"></i>\n    </div>\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel ${classPrefix}-controls-panel-danmaku-style\">\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">字号</div>\n          <div class=\"${classPrefix}-danmaku-style-fontsize-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">模式</div>\n          <div class=\"${classPrefix}-danmaku-style-mode-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">颜色</div>\n          <input\n            class=\"${classPrefix}-danmaku-style-color-input mpui-input\"\n            type=\"text\"\n            value=\"#\"\n          />\n          <div class=\"${classPrefix}-danmaku-style-color-preview\"></div>\n          ${window.EyeDropper\n            ? html`<button class=\"${classPrefix}-danmaku-style-color-dropper mpui-button\">\n                拾取\n              </button>`\n            : \"\"}\n        </div>\n        <div class=\"${classPrefix}-danmaku-style-color-picker\"></div>\n      </div>\n    </div>\n  </div>\n`;\n\nexport default class ButtonDanmakuStyle {\n  danmakuBar: DanmakuBar;\n  $el: HTMLElement;\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  $fontsizePicker: HTMLElement;\n  $modePicker: HTMLElement;\n  $colorPicker: HTMLElement;\n  $colorInput: HTMLInputElement;\n  $colorPreview: HTMLElement;\n  $colorDropper: HTMLElement | null;\n\n  pickerFontsize!: Picker;\n  pickerMode!: Picker;\n  pickerColor!: Picker;\n\n  constructor(danmakuBar: DanmakuBar, container: HTMLElement, options: PlayerOptions) {\n    this.danmakuBar = danmakuBar;\n    const fragment = new DocumentFragment();\n    render(template(), fragment);\n    this.$el = fragment.querySelector(`.${classPrefix}-controls-button`)!;\n    this.$icon = this.$el.querySelector(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$el.querySelector(\".mpui-tooltip\")!;\n\n    this.$fontsizePicker = this.$el.querySelector(`.${classPrefix}-danmaku-style-fontsize-picker`)!;\n    this.$modePicker = this.$el.querySelector(`.${classPrefix}-danmaku-style-mode-picker`)!;\n    this.$colorPicker = this.$el.querySelector(`.${classPrefix}-danmaku-style-color-picker`)!;\n    this.$colorInput = this.$el.querySelector(`.${classPrefix}-danmaku-style-color-input`)!;\n    this.$colorPreview = this.$el.querySelector(`.${classPrefix}-danmaku-style-color-preview`)!;\n    this.$colorDropper = this.$el.querySelector(`.${classPrefix}-danmaku-style-color-dropper`);\n\n    this.init(options);\n    container.appendChild(fragment);\n  }\n\n  init(options: PlayerOptions) {\n    this.pickerFontsize = new Picker({\n      container: this.$fontsizePicker,\n      value: 25,\n      list: (options.danmakuBar?.fontSizeList || defaultFontSizeList).map(([value, label]) => ({\n        value,\n        label,\n      })),\n      onChange: (value) => {\n        this.danmakuBar.danmakuFontSize = Number(value);\n      },\n    });\n    this.pickerMode = new Picker({\n      container: this.$modePicker,\n      value: 1,\n      list: [\n        { value: 1, label: \"滚动\" },\n        { value: 5, label: \"顶部\" },\n        { value: 4, label: \"底部\" },\n        { value: 6, label: \"逆向\" },\n      ].filter(\n        (item) => (options.danmakuBar?.modeList || defaultModeList).indexOf(item.value) > -1\n      ),\n      onChange: (value) => {\n        this.danmakuBar.danmakuMode = Number(value) || 1;\n      },\n    });\n    this.pickerColor = new Picker({\n      container: this.$colorPicker,\n      value: \"#FFFFFF\",\n      list: (options.danmakuBar?.colorList || defaultColorList).map((item) => ({ value: item })),\n      onPick: (value) => {\n        this.danmakuBar.danmakuColor = color2Number(value as string);\n      },\n      onChange: (value) => {\n        this.$colorInput.value = value as string;\n        this.$colorPreview.style.backgroundColor = value as string;\n      },\n      template: (item) => html` <div style=\"background-color: ${item.value}\"></div> `,\n      condition: (item, value) => {\n        return item.toLowerCase() == (value as string).toLowerCase();\n      },\n    });\n    this.$colorInput.addEventListener(\"input\", () => {\n      const value = this.$colorInput.value;\n      this.$colorInput.value = \"#\" + value.replace(/[^0-9A-Fa-f]/g, \"\").slice(0, 6);\n      if (/^#([0-9A-Fa-f]{6}|[0-9A-Fa-f]{3})$/.test(value)) {\n        this.pickerColor.pick(value);\n      }\n    });\n    if (this.$colorDropper) {\n      this.$colorDropper.onclick = () => {\n        if (window.EyeDropper) {\n          const dropper = new window.EyeDropper();\n          dropper.open().then(({ sRGBHex }) => {\n            this.pickerColor.pick(sRGBHex);\n          });\n        }\n      };\n    }\n  }\n}\n\nconst defaultFontSizeList: [number, string][] = [\n  [18, \"小\"],\n  [25, \"中\"],\n  [36, \"大\"],\n];\n\nconst defaultModeList = [1, 5, 4];\n\nconst defaultColorList = [\n  \"#FE0302\",\n  \"#FFFF00\",\n  \"#00CD00\",\n  \"#00FF00\",\n  \"#4E6EF2\",\n  \"#89D5FF\",\n  \"#7B7FF7\",\n  \"#757575\",\n  \"#FFFFFF\",\n  \"#FB7229\",\n];\n","import type { DanmakuSendItem } from \"@/plugins/danmaku/types\";\nimport { keyCode } from \"@/utils/KeyCode.enum\";\nimport { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport ButtonDanmakuStyle from \"./ButtonDanmakuStyle\";\nimport Controller from \"../ui/controller\";\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\nimport Danmaku from \"../danmaku\";\n\nconst template = html`\n  <div class=\"${classPrefix}-danmakubar\">\n    <div class=\"${classPrefix}-danmakubar-slot\"></div>\n    <div class=\"${classPrefix}-danmakubar-input-wrap\">\n      <div class=\"${classPrefix}-danmakubar-input-slot\"></div>\n      <input type=\"text\" autocompleted=\"new-password\" class=\"${classPrefix}-danmakubar-input\" />\n      <!-- \n      <div class=\"${classPrefix}-danmakubar-status-loading\">弹幕功能加载中...</div>\n      <div class=\"${classPrefix}-danmakubar-status-login\">需要登录后才能发送弹幕哦~</div>\n      -->\n      <div class=\"${classPrefix}-danmakubar-send\">发送</div>\n    </div>\n  </div>\n`;\n\ndeclare module \"@/types\" {\n  interface PlayerOptions {\n    /** 弹幕栏设置 */\n    danmakuBar?: {\n      /** 占位文本 */\n      placeholder?: string;\n      /** 选色列表 */\n      colorList?: string[];\n      /** 字号列表 */\n      fontSizeList?: [number, string][];\n      /** 弹幕模式列表 */\n      modeList?: number[];\n    };\n  }\n  interface PluginExports {\n    danmakuBar?: DanmakuBar;\n  }\n}\n\nexport default class DanmakuBar extends BasePlugin {\n  static pluginName = \"danmakuBar\";\n  buttonDanmakuStyle: ButtonDanmakuStyle;\n\n  $wrap: HTMLElement;\n  $el: HTMLElement;\n\n  $send: HTMLElement;\n  $input: HTMLInputElement;\n  $slot: HTMLElement;\n  $inputSlot: HTMLElement;\n\n  controller: Controller;\n  danmaku: Danmaku;\n\n  danmakuColor = 16777215;\n  danmakuMode = 1;\n  danmakuFontSize = 25;\n\n  /** 冷却计时器 */\n  coolDownTimer = 0;\n\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.controller = this.plugin.controller!;\n    this.danmaku = this.plugin.danmaku!;\n    this.$wrap = this.player.$el.appendChild(\n      createElement(\"div\", { class: `${classPrefix}-danmakubar-wrap mpui-background` })\n    );\n\n    render(template, this.$wrap);\n    this.$el = this.$wrap.querySelector(`.${classPrefix}-danmakubar`)!;\n    this.$send = this.$el.querySelector(`.${classPrefix}-danmakubar-send`)!;\n    this.$input = this.$el.querySelector(`.${classPrefix}-danmakubar-input`)!;\n    this.$slot = this.$el.querySelector(`.${classPrefix}-danmakubar-slot`)!;\n    this.$inputSlot = this.$el.querySelector(`.${classPrefix}-danmakubar-input-slot`)!;\n\n    this.buttonDanmakuStyle = new ButtonDanmakuStyle(this, this.$inputSlot, options);\n\n    this.player.on(\"fullscreen:exit\", () => {\n      this.moveToWrap();\n    });\n    this.player.on(\"webscreen:exit\", () => {\n      this.moveToWrap();\n    });\n    this.player.on(\"fullscreen:enter\", () => {\n      requestAnimationFrame(() => {\n        this.moveToController();\n      });\n    });\n    this.player.on(\"webscreen:enter\", () => {\n      requestAnimationFrame(() => {\n        this.moveToController();\n      });\n    });\n    this.$input.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode == keyCode.Enter) {\n        this.send();\n      }\n    });\n    this.$send.onclick = () => {\n      this.send();\n    };\n\n    this.setPlaceHolder(options.danmakuBar?.placeholder || defaultPlaceholder);\n  }\n  private moveToWrap() {\n    this.$wrap.appendChild(this.$el);\n    this.controller.$center.classList.remove(\"state-bar\");\n  }\n  private moveToController() {\n    this.controller.$center.appendChild(this.$el);\n    this.controller.$center.classList.add(\"state-bar\");\n  }\n  setPlaceHolder(placeholder: string) {\n    this.$input.placeholder = placeholder;\n  }\n  /** 执行弹幕发送操作 */\n  private send() {\n    // 如果内容为空或只有空格，则不进行发送操作\n    if (!this.$input.value.trim() || this.coolDownTimer) return;\n    this.danmaku.operate.send(this.generateDanmaku());\n    this.$input.value = \"\";\n  }\n  /** 设置弹幕发送冷却 */\n  public setCoolDown(time: number) {\n    if (this.coolDownTimer) {\n      window.clearInterval(this.coolDownTimer);\n    }\n    let t = Math.round(time);\n    this.$send.classList.add(\"state-disabled\");\n    this.$send.innerText = `${t}秒`;\n    this.coolDownTimer = window.setInterval(() => {\n      t -= 1;\n      if (t) {\n        this.$send.innerText = `${t}秒`;\n      } else {\n        this.$send.innerText = \"发送\";\n        this.$send.classList.remove(\"state-disabled\");\n        window.clearInterval(this.coolDownTimer);\n        this.coolDownTimer = 0;\n      }\n    }, 1000);\n  }\n  generateDanmaku(): DanmakuSendItem {\n    return {\n      time: this.player.time,\n      content: this.$input.value,\n      mode: this.danmakuMode,\n      color: this.danmakuColor,\n      size: this.danmakuFontSize,\n    };\n  }\n}\n\nconst defaultPlaceholder = \"发条弹幕吧~\";\n","import { Checkbox } from \"@/components\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@/types\" {\n  interface PlayerPropertyMap {\n    /** 视频黑边 */\n    blackBorder: boolean;\n  }\n  interface PlayerOptions {\n    /** 视频黑边 */\n    blackBorder?: boolean;\n    /** 视频黑边边距 */\n    blackBorderPadding?: string;\n  }\n}\n\nexport default class BlackBorder extends BasePlugin {\n  static pluginName: \"blackBorder\";\n  padding: string;\n  checkbox?: Checkbox;\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.padding = options.blackBorderPadding || \"8px\";\n    if (player.plugin.buttonSettings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: !this.status,\n        onToggle: (val) => {\n          this.toggle(!val);\n        },\n        label: \"隐藏黑边\",\n      });\n      player.plugin.settings?.$others.appendChild(container);\n    }\n    if (options.blackBorder) this.toggle(true);\n  }\n  toggle(v: boolean) {\n    if (v) {\n      this.player.$content.style.setProperty(\"--padding\", this.padding);\n    } else {\n      this.player.$content.style.setProperty(\"--padding\", \"\");\n    }\n    this.player.emitChange(\"blackBorder\", v);\n  }\n  get status() {\n    return !!this.player.$content.style.getPropertyValue(\"--padding\");\n  }\n}\n","/** 弹幕模式 */\nexport enum DanmakuMode {\n  roll = 1,\n  bottom = 4,\n  top = 5,\n  reverse = 6,\n  special = 7,\n  advanced = 9,\n}\n\n/** 弹幕对象接口 */\nexport interface DanmakuItem {\n  /** 弹幕id */\n  id: number | string;\n  /** 发送时间 */\n  time: number;\n  /** 弹幕内容 */\n  content: string;\n  /** 弹幕模式 */\n  mode: DanmakuMode;\n  /** 颜色 */\n  color: number | string;\n  /** 弹幕文字大小 */\n  size: number;\n  /** 日期 */\n  date: number;\n  /** 发送用户 */\n  user: string | number;\n}\n\n/** 弹幕发送对象接口 */\nexport type DanmakuSendItem = Omit<DanmakuItem, \"id\" | \"date\" | \"user\">;\n\n/** 弹幕源 */\nexport interface DanmakuSource {\n  /** 弹幕来源url */\n  url: string;\n  /** 弹幕格式 */\n  type: string;\n  /** 获取弹幕数据 */\n  data?: (data: unknown) => unknown;\n  // platform?: string // 平台名称，用于标记平台信息\n  // name?: string // 弹幕来源名称\n}\nexport interface DanmakuApi {\n  /** 获取弹幕 */\n  get?: (arg: {\n    id: string | number;\n    offset?: string | number;\n    limit?: number;\n  }) => Promise<unknown>;\n  /** 发送弹幕 */\n  send?: (danmaku: DanmakuSendItem, id: string | number) => Promise<void>;\n  /** 举报弹幕 */\n  report?: (danmaku: DanmakuItem) => Promise<void>;\n  /** 视频作者删除弹幕 */\n  delete?: (danmaku: DanmakuItem[]) => Promise<void>;\n  /** 撤回自己发送的弹幕 */\n  recall?: (danmaku: DanmakuItem) => Promise<void>;\n  /** 添加内容屏蔽 */\n  blockContent?: (content: string, flag: boolean) => Promise<void>;\n  /** 添加用户屏蔽 */\n  blockUser?: (user: string | number, flag: boolean) => Promise<void>;\n  /** 获取屏蔽列表 */\n  // danmakuGetBlockList?: (list: any) => Promise<unknown>;\n}\ndeclare module \"@/types\" {\n  interface PlayerOptions {\n    /** 弹幕设置 */\n    danmaku?: {\n      /** 弹幕格式类型 */\n      format?: string;\n      /** 类型屏蔽 */\n      filter?: string[];\n      /** 弹幕不透明度 */\n      opacity?: number;\n      /** 弹幕速度 */\n      speed?: number;\n      /** 弹幕显示区域 */\n      area?: number;\n      /** 弹幕大小 */\n      scale?: number;\n      /** 弹幕字体 */\n      font?: string;\n      /** 字体加粗 */\n      bold?: boolean;\n    };\n    danmakuApi?: DanmakuApi;\n  }\n\n  interface VideoInfo {\n    danmakuId?: string | number;\n    danmakuAddition?: DanmakuSource[];\n  }\n}\n\ndeclare module \"@/types\" {\n  interface PlayerEventMap {\n    // --- 弹幕事件 --- //\n\n    // 弹幕加载\n    /** 弹幕开始加载 */\n    \"danmaku:loading\": () => void;\n    /** 弹幕加载完毕 */\n    \"danmaku:loaded\": (dan: DanmakuItem[], err?: any) => void;\n    /** 附加弹幕开始加载 */\n    \"danmaku:addition_loading\": (url: string) => void;\n    /** 附加弹幕加载完毕 */\n    \"danmaku:addition_loaded\": (url: string, dan: DanmakuItem[], err?: any) => void;\n    /** 加载新增弹幕 */\n    \"danmaku:new_loading\": (offset: number | string) => void;\n    /** 新增弹幕加载完毕 */\n    \"danmaku:new_loaded\": (offset: number | string, dan: DanmakuItem[], err?: any) => void;\n\n    // --- 弹幕播放操作 --- //\n    /** 开启弹幕 */\n    \"danmaku:on\": () => void;\n    /** 关闭弹幕 */\n    \"danmaku:off\": () => void;\n    /** 弹幕类型屏蔽 */\n    \"danmaku:filter\": (type: string, flag: boolean) => void;\n\n    // --- 弹幕操作 --- //\n    /** 发送弹幕 */\n    \"danmaku:send\": () => void;\n    /** 弹幕池新增弹幕 */\n    \"danmaku:add\": () => void;\n    /** 弹幕池移除弹幕 */\n    \"danmaku:remove\": () => void;\n    /** 选中指定弹幕 */\n    \"danmaku:select\": (dan: DanmakuItem) => void;\n    /** 屏蔽用户弹幕 */\n    \"danmaku:block_user\": (user: number | string, flag: boolean) => void;\n    /** 屏蔽弹幕内容 */\n    \"danmaku:block_content\": (content: string, flag: boolean) => void;\n\n    // --- 弹幕播放属性 --- //\n    /** 弹幕不透明度更改 */\n    \"danmaku:opacity\": (value: number) => void;\n    /** 弹幕速度更改 */\n    \"danmaku:speed\": (value: number) => void;\n    /** 弹幕区域更改 */\n    \"danmaku:area\": (value: number) => void;\n    /** 弹幕大小更改 */\n    \"danmaku:scale\": (value: number) => void;\n    /** 弹幕字体更改 */\n    \"danmaku:font\": (value: string) => void;\n    /** 弹幕粗体更改 */\n    \"danmaku:bold\": (value: boolean) => void;\n  }\n}\n","import { DanmakuMode } from \"./types\";\n/** 播放器弹幕引擎 */\n\nimport { DanmakuItem } from \"./types\";\nimport { createArray, number2Color } from \"@/utils\";\n\nexport type TrackType = \"roll\" | \"reverse\" | \"top\" | \"bottom\";\n\ninterface DanmakuEngineOptions {\n  fontScale?: number;\n  fontFamily?: string;\n  fontWeight?: string;\n  speed?: number;\n  opacity?: number;\n  limitArea?: number;\n  classPrefix?: string;\n  /** 颜色限制 */\n  colorFilter?: boolean;\n  /** 获取当前时间函数 */\n  getTime: () => number;\n}\n\nexport default class DanmakuEngine {\n  /** 暂停状态 */\n  public paused = false;\n\n  /** 隐藏状态 */\n  public hidden = false;\n\n  /** 弹幕容器 */\n  public readonly container: HTMLDivElement;\n  /** 弹幕字号缩放 */\n  public fontScale: number;\n  /** 字体 */\n  public fontFamily: string;\n  /** 字重 */\n  public fontWeight: string;\n  /** 弹幕移动速度 */\n  public speed: number;\n  /** 弹幕不透明度 */\n  public opacity: number;\n  /** 基准轨道高度 */\n  public baseTrackHeight: number;\n  /** 轨道边距 */\n  public trackPadding: number;\n  /** 限制区域 */\n  public limitArea: number;\n  /** 颜色屏蔽 */\n  public colorFilter: boolean;\n  /** 轨道屏蔽 */\n  public trackFilter: Record<TrackType, boolean> = {\n    roll: false,\n    reverse: false,\n    top: false,\n    bottom: false,\n  };\n  public userFilter: (string | number)[] = [];\n  public contentFilter: (string | RegExp)[] = [];\n  /** 允许重叠 */\n  public overlap: boolean;\n  /** 类名前缀 */\n  public classPrefix: string;\n  /** 获取当前时间函数 */\n  public getTime: () => number;\n  /** 当前时间 */\n  private time = 0;\n\n  /** 弹幕池 */\n  private danmakuPool: DanmakuItem[] = [];\n  /** 待添加弹幕索引 */\n  private currentIndex = 0;\n  /** 文字测量上下文 */\n  private measureContext: CanvasRenderingContext2D | null = null;\n\n  /** 弹幕发射位置与播放器边界的距离 */\n  public startDistance = 2;\n  /** 时间偏移 */\n  public timeOffset = 0;\n  /** 滚动弹幕基准速度 */\n  public baseSpeed = 100;\n  /** 静止弹幕基准持续时间 */\n  public baseDuration = 5;\n  /** 弹幕速度增加率k值\n   * 弹幕速度 = baseSpeed * (1 + deltaSpeed * 弹幕宽度)\n   */\n  public deltaSpeed = 0.002;\n\n  /** 弹幕轨道高度 */\n  private trackHeights: Record<TrackType, number[]> = {\n    roll: [],\n    reverse: [],\n    top: [],\n    bottom: [],\n  };\n\n  /** 弹幕轨道 */\n  private danmakuTracks: Record<TrackType, HTMLElement[][]> = {\n    roll: [],\n    reverse: [],\n    top: [],\n    bottom: [],\n  };\n\n  constructor(container: HTMLDivElement, options: DanmakuEngineOptions) {\n    this.container = container;\n    this.fontScale = options.fontScale ?? 1;\n    this.baseTrackHeight = 28;\n    this.trackPadding = 6;\n    this.speed = options.speed ?? 1;\n    this.opacity = options.opacity ?? 1;\n    this.limitArea = 1;\n    this.overlap = false;\n    this.fontFamily = options.fontFamily ?? \"SimHei\";\n    this.fontWeight = options.fontWeight ?? \"bold\";\n    this.classPrefix = options.classPrefix ?? \"mfuns\";\n    this.colorFilter = options.colorFilter || false;\n    this.getTime = options.getTime;\n\n    this.container.classList.add(`${this.classPrefix}-danmaku`);\n    this.checkDanmaku();\n  }\n\n  play() {\n    this.paused = false;\n    this.container.classList.remove(\"state-paused\");\n  }\n\n  pause() {\n    this.paused = true;\n    this.container.classList.add(\"state-paused\");\n  }\n\n  /** 发生跳转 */\n  seek() {\n    // 清屏\n    this.clear();\n    // 重新获取当前时间及待添加弹幕索引\n    this.time = this.getTime();\n    const index = this.danmakuPool.findIndex((d) => this.time <= d.time);\n    this.currentIndex = index === -1 ? this.danmakuPool.length : index;\n  }\n\n  /** 设置弹幕池 */\n  setPool(dan: DanmakuItem[]) {\n    // 直接设置弹幕池并排序\n    this.danmakuPool = [...dan];\n    this.danmakuPool.sort((a, b) => a.time - b.time);\n    const index = this.danmakuPool.findIndex((d) => this.time <= d.time);\n    this.currentIndex = index === -1 ? this.danmakuPool.length : index;\n  }\n\n  /** 重置弹幕池 */\n  reset() {\n    this.clear();\n    this.danmakuPool = [];\n    this.currentIndex = 0;\n  }\n\n  /** 弹幕池添加弹幕 */\n  add(dan: DanmakuItem[]) {\n    dan.forEach((dm) => {\n      /** 按时间顺序插入弹幕 */\n      const index = this.danmakuPool.findIndex((d) => dm.time <= d.time);\n      this.danmakuPool.splice(index === -1 ? this.danmakuPool.length : index, 0, dm);\n      // 若插入弹幕的时间小于当前时间，则待添加弹幕索引+1\n      if (dm.time < this.time) this.currentIndex += 1;\n    });\n  }\n\n  /** 弹幕池移除符合id的弹幕 */\n  remove(ids: (string | number)[]) {\n    const displayed = [\n      ...this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-item`),\n    ];\n    ids.forEach((id) => {\n      const index = this.danmakuPool.findIndex((dm) => dm.id == id);\n      if (index === -1) return;\n      this.danmakuPool.splice(index, 1);\n      // 移除位置若小于当前待添加弹幕位置，则待添加弹幕索引-1\n      if (index < this.currentIndex) this.currentIndex -= 1;\n      // 从DOM中移除弹幕\n      const el = displayed.find((d) => d.dataset.id === id.toString());\n      if (el) {\n        // 此处不移除DOM是为了使弹幕顺利完成动画，以便轨道自动清除弹幕DOM\n        el.innerHTML = \"\";\n      }\n    });\n  }\n\n  /** 弹幕清屏 */\n  clear(type?: TrackType) {\n    if (type) {\n      this.danmakuTracks[type] = [];\n      return;\n    }\n    this.danmakuTracks = {\n      roll: [],\n      reverse: [],\n      top: [],\n      bottom: [],\n    };\n    this.trackHeights = {\n      roll: [],\n      reverse: [],\n      top: [],\n      bottom: [],\n    };\n    this.container.innerHTML = \"\";\n  }\n\n  /** 检查弹幕是否需要进入弹幕池 */\n  checkDanmaku() {\n    if (this.danmakuPool.length && !this.paused && !this.hidden) {\n      let item = this.danmakuPool[this.currentIndex];\n      const dan = [];\n      // 刷新当前时间\n      this.time = this.getTime();\n      // 若待添加弹幕时间小于当前时间，则持续添加弹幕直到下一条弹幕的时间不小于当前时间为止\n      while (item && item.time < this.time) {\n        if (\n          this.checkTrackFilter(item) &&\n          this.checkColorFilter(item) &&\n          this.checkUserFilter(item) &&\n          this.checkContentFilter(item)\n        ) {\n          dan.push(item);\n        }\n        this.currentIndex += 1;\n        item = this.danmakuPool[this.currentIndex];\n      }\n      // console.log(this.currentIndex)\n      this.draw(dan);\n    }\n    window.requestAnimationFrame(() => {\n      this.checkDanmaku();\n    });\n  }\n\n  /** 设置弹幕类型过滤 */\n  setTrackFilter(type: TrackType, value: boolean) {\n    this.trackFilter[type] = value;\n    if (value) {\n      this.container\n        .querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-${type}`)\n        .forEach((el) => {\n          el.innerHTML = \"\";\n        });\n    }\n  }\n\n  /** 检查弹幕类型过滤 */\n  checkTrackFilter(dm: DanmakuItem) {\n    return !this.trackFilter[DanmakuMode[dm.mode] as TrackType];\n  }\n\n  /** 设置弹幕颜色过滤 */\n  setColorFilter(value: boolean) {\n    this.colorFilter = value;\n    if (value) {\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      );\n      items.forEach((el) => {\n        if (el.style.color !== \"rgb(255, 255, 255)\") {\n          el.innerHTML = \"\";\n        }\n      });\n    }\n  }\n\n  /** 检查弹幕颜色过滤 */\n  checkColorFilter(dm: DanmakuItem) {\n    return !this.colorFilter || dm.color === 16777215;\n  }\n\n  /** 设置内容过滤 */\n  setContentFilter(content: string | RegExp, value: boolean) {\n    const contentIndex = this.contentFilter.indexOf(content);\n    if (value) {\n      if (contentIndex > -1) {\n        return;\n      }\n      this.contentFilter.push(content);\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      );\n      if (typeof content == \"string\") {\n        items.forEach((el) => {\n          if (el.innerText.includes(content)) {\n            el.innerHTML = \"\";\n          }\n        });\n      } else {\n        items.forEach((el) => {\n          if (content.test(el.innerText)) {\n            el.innerHTML = \"\";\n          }\n        });\n      }\n    } else {\n      contentIndex > -1 && this.contentFilter.splice(contentIndex, 1);\n    }\n  }\n  /** 检查弹幕内容过滤 */\n  checkContentFilter(dm: DanmakuItem) {\n    for (const keyword of this.contentFilter) {\n      if (typeof keyword == \"string\") {\n        if (dm.content.search(keyword)) return false;\n      } else if (keyword.test(dm.content)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** 设置用户过滤 */\n  setUserFilter(user: string | number, value: boolean) {\n    const contentIndex = this.userFilter.indexOf(user);\n    if (value) {\n      if (contentIndex > -1) {\n        return;\n      }\n      this.userFilter.push(user);\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      );\n      items.forEach((el) => {\n        if (el.dataset.user == user) {\n          el.innerHTML = \"\";\n        }\n      });\n    } else {\n      contentIndex > -1 && this.userFilter.splice(contentIndex, 1);\n    }\n  }\n  /** 检查用户过滤 */\n  checkUserFilter(dm: DanmakuItem) {\n    return this.userFilter.indexOf(dm.user) == -1;\n  }\n\n  /** 绘制弹幕 */\n  draw(dan: DanmakuItem[]) {\n    /** 弹幕轨道高度 */\n    const itemHeight = this.baseTrackHeight * this.fontScale;\n    /** 弹幕容器宽度 */\n    const containerWidth = this.container.offsetWidth;\n    /** 弹幕区域高度 */\n    const containerHeight = this.container.offsetHeight * this.limitArea;\n    /** 轨道数量 */\n    const itemY = Math.floor(containerHeight / itemHeight);\n    // console.log(itemY);\n    if (this.trackHeights.roll.length !== itemY) {\n      this.trackHeights.roll = createArray(itemY, itemHeight);\n    }\n    if (this.trackHeights.reverse.length !== itemY) {\n      this.trackHeights.reverse = createArray(itemY, itemHeight);\n    }\n    if (this.trackHeights.top.length !== itemY) {\n      this.trackHeights.top = createArray(itemY, itemHeight);\n    }\n    if (this.trackHeights.bottom.length !== itemY) {\n      this.trackHeights.bottom = createArray(itemY, itemHeight);\n    }\n    /** 弹幕与弹幕容器右侧的距离(滚动弹幕) */\n    const danItemRight = (el: HTMLElement) => {\n      const containerRight = this.container.getBoundingClientRect().right;\n      const elRight = el.getBoundingClientRect().right;\n      return containerRight - elRight;\n    };\n    /** 弹幕与弹幕容器左侧的距离(逆向弹幕) */\n    const danItemLeft = (el: HTMLElement) => {\n      const containerLeft = this.container.getBoundingClientRect().left;\n      const elLeft = el.getBoundingClientRect().left;\n      return elLeft - containerLeft;\n    };\n    /** 获取弹幕速度 */\n    const getSpeed = (width: number) => this.baseSpeed * (1 + this.deltaSpeed * width) * this.speed;\n    /** 获取单个轨道内所有弹幕 */\n    const getDOMTrack = (type: string, i: number) => {\n      return [\n        ...this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-${type}`),\n      ].filter((el: HTMLElement) => el.dataset.track === `${i}`);\n    };\n    /** 获取弹幕可进入的轨道 */\n    const getTrack = (ele: HTMLElement, type: TrackType, width: number) => {\n      // 对可用范围内的轨道进行一次遍历\n      forTrack: for (let i = 0; this.overlap || i < itemY; i++) {\n        const DOMTrack = getDOMTrack(type, i);\n        /** 该轨道内的所有弹幕 */\n        let track = this.danmakuTracks[type][i];\n        this.danmakuTracks[type][i] = DOMTrack;\n        if (track && track.length) {\n          // 如果该轨道存在弹幕\n          if (type === \"roll\") {\n            /** 弹幕从发射到触碰另一边边界到所需要的时间 */\n            const enterTime = containerWidth / getSpeed(width);\n            if (track.length !== DOMTrack.length) {\n              //\n              track = DOMTrack;\n            }\n            for (const dm of track) {\n              const danRight = danItemRight(dm) - 10;\n              this.trackHeights[type][i] = parseInt(dm.style.fontSize) + this.trackPadding;\n              // 如果滚动弹幕存在同一轨道碰撞的可能，则该轨道不可装填弹幕\n              if (\n                danRight <=\n                  containerWidth - enterTime * getSpeed(dm.getBoundingClientRect().width) ||\n                danRight <= 0\n              ) {\n                // 轨道高度设置为该条弹幕的高度\n                continue forTrack;\n              }\n            }\n          } else if (type === \"reverse\") {\n            /** 弹幕从发射到触碰另一边边界到所需要的时间 */\n            const enterTime = containerWidth / getSpeed(width);\n            if (track.length !== DOMTrack.length) {\n              //\n              track = DOMTrack;\n            }\n            for (const dm of track) {\n              const danLeft = danItemLeft(dm) - 10;\n              this.trackHeights[type][i] = parseInt(dm.style.fontSize) + this.trackPadding;\n              // 如果逆向弹幕存在同一轨道碰撞的可能，则该轨道不可装填弹幕\n              if (\n                danLeft <=\n                  containerWidth - enterTime * getSpeed(dm.getBoundingClientRect().width) ||\n                danLeft <= 0\n              ) {\n                continue forTrack;\n              }\n            }\n          } else {\n            // 非滚动弹幕该轨道不可装填\n            continue forTrack;\n          }\n          // 轨道弹幕组遍历完毕，组内所有弹幕均完全进入容器，可以向该轨道装填弹幕\n          this.danmakuTracks[type][i].push(ele);\n          // 动画结束后，需从轨道弹幕组中移除该弹幕\n          ele.addEventListener(\"animationend\", () => {\n            const index = this.danmakuTracks[type][i]?.indexOf(ele);\n            index && this.danmakuTracks[type][i]?.splice(index, 1);\n          });\n          return i;\n        } else {\n          // 如果该轨道没有弹幕，可以向该轨道装填弹幕\n          if (Array.isArray(this.danmakuTracks[type][i])) {\n            this.danmakuTracks[type][i].push(ele);\n          } else {\n            this.danmakuTracks[type][i] = [ele];\n          }\n\n          ele.addEventListener(\"animationend\", () => {\n            const index = this.danmakuTracks[type][i]?.indexOf(ele);\n            index && this.danmakuTracks[type][i]?.splice(index, 1);\n          });\n          return i;\n        }\n      }\n      // 遍历完毕，所有轨道都不可用，返回-1\n      return -1;\n    };\n\n    const docFragment = document.createDocumentFragment();\n\n    for (let i = 0; i < dan.length; i++) {\n      const dm = dan[i];\n      /** 忽略非普通弹幕 */\n      if (dm.mode >= 7) {\n        continue;\n      }\n      /** 弹幕DOM */\n      const item = document.createElement(\"div\");\n      item.classList.add(`${this.classPrefix}-danmaku-item`);\n      item.classList.add(`${this.classPrefix}-danmaku-${DanmakuMode[dm.mode]}`);\n      item.innerHTML = `${dm.content.replace(/(\\\\n)/g, \"\\n\")}`;\n      if (typeof dm.color == \"number\") {\n        item.style.color = number2Color(dm.color);\n      } else {\n        item.style.color = dm.color;\n      }\n      item.style.opacity = this.opacity.toString();\n      item.style.fontSize = +dm.size * this.fontScale + \"px\";\n      /** 弹幕运动结束后，从DOM中移除该弹幕 */\n      item.addEventListener(\"animationend\", () => {\n        if ([...this.container.children].indexOf(item) > -1) this.container.removeChild(item);\n      });\n\n      /** 弹幕内容宽度 */\n      const itemWidth = this.measureTextWidth(\n        dm.content,\n        `${this.fontWeight} ${+dm.size * this.fontScale}px ${this.fontFamily}`\n      );\n\n      /** 轨道类型 */\n      let trackType = DanmakuMode[dm.mode] as TrackType;\n      /** 轨道位置 */\n      let track: number;\n      /** 轨道序号 */\n      let trackIndex;\n      // adjust\n      switch (trackType) {\n        case \"roll\":\n        case \"reverse\":\n          // 无限弹幕模式下轨道序号可能大于itemY，可通过取余得到实际轨道位置\n          trackIndex = getTrack(item, trackType, itemWidth);\n          track = trackIndex % itemY;\n          // console.log(track);\n          if (track >= 0) {\n            const maxTop = this.trackHeights[trackType]\n              .slice(0, itemY)\n              .reduce((prev, cur) => prev + cur, 0);\n            const top =\n              this.trackHeights[trackType].slice(0, track).reduce((prev, cur) => prev + cur, 0) %\n              maxTop;\n            // console.log(top, track);\n            if (top + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop();\n              return;\n            }\n            const speed = getSpeed(itemWidth);\n            const distance = itemWidth + containerWidth + this.startDistance * 2;\n            item.dataset.track = trackIndex.toString();\n            item.style.width = itemWidth + 1 + \"px\";\n            item.style.top = top + \"px\";\n            item.style.fontFamily = this.fontFamily;\n            item.style.fontWeight = this.fontWeight;\n            item.style.setProperty(\"--duration\", `${distance / speed}s`); // 持续时间\n            item.style.setProperty(\"--offset\", `${containerWidth + this.startDistance}px`); // 起始位置\n            item.style.setProperty(\"--translateX\", `${-distance}px`); // 位移距离\n          }\n          break;\n        case \"top\":\n          track = getTrack(item, trackType, 0) % itemY;\n          if (track >= 0) {\n            const topArr: HTMLElement[] = [];\n            const topDan = this.danmakuTracks.top;\n            for (const t of topDan) {\n              topArr.push(...t);\n            }\n            const top = topArr\n              .map((el) => {\n                return parseInt(el.style.fontSize) + this.trackPadding;\n              })\n              .slice(0, track)\n              .reduce((prev, cur) => prev + cur, 0);\n\n            if (top + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop();\n              return;\n            }\n            item.dataset.track = track.toString();\n            item.style.width = itemWidth + 1 + \"px\";\n            item.style.marginLeft = `-${(itemWidth + 1) * 0.5}px`;\n            item.style.top = top + \"px\";\n            item.style.fontFamily = this.fontFamily;\n            item.style.fontWeight = this.fontWeight;\n            item.style.setProperty(\"--duration\", `${this.baseDuration / this.speed}s`); // 持续时间\n          }\n          break;\n        case \"bottom\":\n          trackType = \"bottom\";\n          track = getTrack(item, trackType, 0) % itemY;\n          if (track >= 0) {\n            const bottomArr: HTMLElement[] = [];\n            const bottomDan = this.danmakuTracks.bottom;\n            for (const t of bottomDan) {\n              bottomArr.push(...t);\n            }\n            const bottom = bottomArr\n              .map((el) => {\n                return parseInt(el.style.fontSize) + this.trackPadding;\n              })\n              .slice(0, track)\n              .reduce((prev, cur) => prev + cur, 0);\n\n            if (bottom + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop();\n              return;\n            }\n            item.dataset.track = track.toString();\n            item.style.width = itemWidth + 1 + \"px\";\n            item.style.marginLeft = `-${(itemWidth + 1) * 0.5}px`;\n            item.style.bottom = bottom + \"px\";\n            item.style.fontFamily = this.fontFamily;\n            item.style.fontWeight = this.fontWeight;\n            item.style.setProperty(\"--duration\", `${this.baseDuration / this.speed}s`); // 持续时间\n          }\n          break;\n        default:\n          track = -1;\n          console.error(`无法处理的弹幕模式: ${dm.mode}`);\n      }\n      if (track >= 0) {\n        item.dataset.id = dm.id.toString();\n        item.dataset.user = dm.user.toString();\n        // 添加弹幕到容器\n        this.container.appendChild(item);\n      }\n    }\n    return docFragment;\n  }\n  /** 测量字体宽度 */\n  measureTextWidth(text: string, font: string) {\n    if (!this.measureContext) {\n      this.measureContext = document.createElement(\"canvas\").getContext(\"2d\")!;\n    }\n    this.measureContext.font = font;\n    return this.measureContext.measureText(text).width;\n  }\n  /** 根据某一坐标捕获弹幕DOM */\n  captureDanmakuDOM(x: number, y: number, range: number, single = false) {\n    const result: HTMLElement[] = [];\n    // 遍历所有在屏上的弹幕\n    const items = this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-item`);\n    for (const el of items) {\n      if (el.innerHTML) {\n        // 获取检测边界\n        const elRect = el.getBoundingClientRect();\n        const containerRect = this.container.getBoundingClientRect();\n        const edgeLeft = elRect.left - containerRect.left;\n        const edgeRight = elRect.right - containerRect.left;\n        const edgeTop = elRect.top - containerRect.top;\n        const edgeBottom = elRect.bottom - containerRect.top;\n        if (\n          x >= edgeLeft - range &&\n          x <= edgeRight + range &&\n          y >= edgeTop - range &&\n          y <= edgeBottom + range\n        ) {\n          result.push(el);\n          // 如果只要求获取一个元素，则停止遍历以优化性能\n          if (single) return result;\n        }\n      }\n    }\n    return result;\n  }\n  /** 根据某一坐标捕获弹幕 */\n  captureDanmaku(x: number, y: number, range: number, single = false) {\n    const resultDOM = this.captureDanmakuDOM(x, y, range, single);\n    const result: DanmakuItem[] = [];\n    for (const el of resultDOM) {\n      const dm = this.getDanmakuById(el.dataset.id!);\n      if (dm) {\n        result.push(dm);\n      }\n    }\n    return result;\n  }\n  /** 根据id获取弹幕 */\n  getDanmakuById(id: string | number) {\n    return this.danmakuPool.find((dm) => dm.id.toString() === id.toString());\n  }\n\n  /** 显示弹幕 */\n  show() {\n    this.hidden = false;\n  }\n\n  /** 隐藏弹幕 */\n  hide() {\n    this.hidden = true;\n    this.clear();\n  }\n}\n","let count = 1000;\nconst ar = [\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"0\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n\nexport function randomId() {\n  const hs = [];\n  const al = ar.length;\n  for (let i = 0; i < 8; i++) {\n    hs.push(ar[Math.floor(Math.random() * al)]);\n  }\n  count++;\n  return hs.join(\"\") + `${count}`;\n}\n","import { randomId } from \"@/utils/randomId\";\nimport { DanmakuItem } from \"./types\";\n\ninterface DanmakuParseItem {\n  data: any;\n  type: string;\n  origin?: string;\n}\n\ninterface DanmakuParserOptions {\n  defaultParser: string;\n  list?: Record<string, DanmakuParserFunction>;\n}\n\ntype DanmakuParserFunction = (data: any) => DanmakuItem[];\n\n/** 弹幕格式转换，将获取到的弹幕转换为播放器弹幕格式 */\nexport default class DanmakuParser {\n  defaultParser: string;\n\n  list: Record<string, DanmakuParserFunction>;\n\n  constructor({ defaultParser }: DanmakuParserOptions) {\n    this.defaultParser = defaultParser || \"bilibili-xml\";\n    this.list = {\n      dplayer: (data: [number, number, number, number | string, string, number, number][]) =>\n        data.map((item, i) => ({\n          time: item[0],\n          mode: [1, 5, 4, 6][item[1]],\n          color: item[2],\n          user: item[3],\n          content: item[4],\n          size: 25,\n          date: 0,\n          id: randomId(),\n        })),\n      mfuns: (data: [number, number, number, string, string, number, number, number][]) =>\n        data.map((item) => ({\n          time: item[0],\n          mode: item[1],\n          color: item[2],\n          user: item[3],\n          content: item[4],\n          size: item[5],\n          date: item[6] > 1 ? item[6] : 0,\n          id: item[7],\n        })),\n      \"bilibili-xml\": (data: string) => {\n        const bilibiliXMLParser = (xmlData: string) => {\n          const dan: [string, any[]][] = [];\n          const xmlDoc = new DOMParser().parseFromString(xmlData, \"text/xml\");\n          // 获取xml文档的所有子节点\n          const nodeList = xmlDoc.childNodes;\n          const generate = (nodeList: any) => {\n            for (let i = 0; i < nodeList.length; i++) {\n              const currentNode = nodeList[i];\n              if (currentNode?.attributes?.length && i > 0) {\n                const m = currentNode.attributes[0].nodeValue.split(\",\");\n                const c = currentNode.innerHTML;\n                dan.push([c, m]);\n              } else if (currentNode.childNodes.length > 0) {\n                generate(currentNode.childNodes);\n              }\n            }\n          };\n          generate(nodeList);\n          return dan.map(([c, m]) => ({\n            time: +m[0],\n            mode: +m[1],\n            color: +m[3],\n            user: m[6],\n            content: c,\n            size: +m[2] ?? 25,\n            date: +m[4] ?? 0,\n            id: +m[7],\n          }));\n        };\n        return bilibiliXMLParser(data);\n      },\n    };\n  }\n\n  /** 将获取到的弹幕转换为播放器弹幕格式 */\n  parse({ data, type }: DanmakuParseItem) {\n    const parser = this.list[type];\n    if (!parser) throw \"未知弹幕格式\";\n    return parser(data);\n  }\n}\n","import { DanmakuItem, DanmakuSendItem } from \"./types\";\nimport Player from \"@/player\";\nimport Danmaku from \".\";\n\nexport default class DanmakuOperate {\n  danmaku: Danmaku;\n  player: Player;\n  constructor(player: Player) {\n    this.player = player;\n    this.danmaku = player.plugin.danmaku!;\n  }\n\n  /**\n   * 发送弹幕\n   * @param danmaku 要发送的弹幕\n   * @return 操作结果\n   * */\n  async send(danmaku: DanmakuSendItem): Promise<void> {\n    if (!this.danmaku?.api?.send) throw \"发送失败\";\n    return await this.danmaku.api\n      .send(danmaku, this.player.videoInfo.danmakuId || 0)\n      .then((res) => {\n        this.danmaku.add([\n          Object.assign(\n            {\n              id: `send:${Date.now()}`,\n              date: Math.floor(Date.now() / 1000),\n              user: 0,\n            },\n            danmaku\n          ),\n        ]);\n        return res;\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 举报弹幕\n   * @param danmaku 要举报的弹幕\n   * @return 操作结果\n   * */\n  async report(danmaku: DanmakuItem): Promise<void> {\n    if (!this.danmaku?.api?.report) throw \"操作失败\";\n    return await this.danmaku.api\n      .report(danmaku)\n      .then((res) => {\n        // 操作成功后从弹幕池移除该弹幕\n        this.danmaku.remove([danmaku.id]);\n        return res;\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 删除弹幕\n   * @param danmaku 要删除的弹幕\n   * @return 操作结果\n   * */\n  async delete(danmaku: DanmakuItem[]): Promise<void> {\n    if (!this.danmaku?.api?.delete) throw \"操作失败\";\n    return await this.danmaku.api\n      .delete(danmaku)\n      .then((res) => {\n        // 操作成功后从弹幕池移除该弹幕\n        this.danmaku.remove(danmaku.map((dm) => dm.id));\n        return res;\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 删除自己发送的弹幕\n   * @param danmaku 要删除的弹幕\n   * @return 操作结果\n   * */\n  async recall(danmaku: DanmakuItem): Promise<void> {\n    if (!this.danmaku?.api?.recall) throw \"操作失败\";\n    return await this.danmaku.api\n      .recall(danmaku)\n      .then((res) => {\n        // 操作成功后从弹幕池移除该弹幕\n        this.danmaku.remove([danmaku.id]);\n        return res;\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 屏蔽用户\n   * @param user 用户id\n   * @param flag 设置屏蔽状态\n   * @return 操作结果\n   * */\n  async blockUser(user: string | number, flag: boolean): Promise<void> {\n    if (!this.danmaku?.api?.blockUser) throw \"操作失败\";\n    return await this.danmaku.api\n      .blockUser(user, flag)\n      .then(() => {\n        // 操作成功后在弹幕池屏蔽该用户\n        this.danmaku.engine.setUserFilter(user, flag);\n        this.player.emit(\"danmaku:block_user\", user, flag);\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 屏蔽关键词\n   * @param content 关键词内容\n   * @param flag 设置屏蔽状态\n   * @return 操作结果\n   * */\n  async blockContent(content: string, flag: boolean): Promise<void> {\n    if (!this.danmaku?.api?.blockContent) throw \"操作失败\";\n    return await this.danmaku.api\n      .blockContent(content, flag)\n      .then((res) => {\n        this.danmaku.engine.setContentFilter(content, flag);\n        this.player.emit(\"danmaku:block_content\", content, flag);\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n}\n","import { DanmakuApi, DanmakuItem, DanmakuSource } from \"./types\";\nimport { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport DanmakuEngine from \"./DanmakuEngine\";\nimport { classPrefix } from \"@/config\";\nimport DanmakuParser from \"./DanmakuParser\";\nimport DanmakuOperate from \"./DanmakuOperate\";\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\ndeclare module \"@/types\" {\n  interface PlayerPropertyMap {\n    /** 弹幕不透明度 */\n    \"danmaku.opacity\": number;\n    /** 弹幕移动速度 */\n    \"danmaku.speed\": number;\n    /** 弹幕显示区域 */\n    \"danmaku.area\": number;\n    /** 弹幕大小 */\n    \"danmaku.scale\": number;\n    /** 弹幕字体 */\n    \"danmaku.font\": string;\n    /** 弹幕加粗 */\n    \"danmaku.bold\": boolean;\n  }\n  interface PluginExports {\n    danmaku?: Danmaku;\n  }\n}\n\n/** 弹幕模块 */\nexport default class Danmaku extends BasePlugin {\n  static readonly pluginName = \"danmaku\";\n\n  /** 弹幕引擎，用于弹幕绘制 */\n  engine: DanmakuEngine;\n\n  /** 弹幕格式转换 */\n  parser: DanmakuParser;\n\n  /** 操作api */\n  api: DanmakuApi;\n\n  /** 操作api */\n  format: string;\n\n  /** 弹幕操作 */\n  operate: DanmakuOperate;\n\n  /** 最新一条弹幕的id */\n  lastDanmakuId: string | number = 0;\n\n  /** 允许获取实时新增弹幕 */\n  allowNewDanmaku: boolean;\n\n  /** 弹幕池 */\n  list: DanmakuItem[] = [];\n\n  $el: HTMLElement;\n  $rowContainer: HTMLDivElement;\n\n  handler: Record<string, (dan: DanmakuItem[]) => void> = {};\n\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.format = options.danmaku?.format || \"mfuns\";\n    this.parser = new DanmakuParser({ defaultParser: this.format });\n    this.operate = new DanmakuOperate(this.player);\n    this.api = options.danmakuApi || {};\n    this.allowNewDanmaku = false;\n\n    this.$el = createElement(\"div\", { class: `${classPrefix}-danmaku-wrap` });\n    this.$rowContainer = this.$el.appendChild(\n      createElement(\"div\", { class: `${classPrefix}-row-danmaku-container` })\n    );\n\n    this.player.$content.after(this.$el);\n\n    this.engine = new DanmakuEngine(this.$rowContainer, {\n      fontScale: 1,\n      fontFamily: \"SimHei\",\n      fontWeight: \"bold\",\n      speed: 1,\n      opacity: 1,\n      classPrefix: classPrefix,\n      /** 颜色限制 */\n      colorFilter: false,\n      getTime: () => this.player.time,\n    });\n    this.player.on(\"play\", () => {\n      this.engine.play();\n    });\n    this.player.on(\"pause\", () => {\n      this.engine.pause();\n    });\n    this.player.on(\"seeking\", () => {\n      this.engine.pause();\n      this.engine.seek();\n    });\n    this.player.on(\"seeked\", () => {\n      this.player.paused || this.engine.play();\n    });\n    this.player.on(\"video_change\", (info) => {\n      const { danmakuId, danmakuAddition } = info;\n      console.log(danmakuAddition);\n      this.reload(danmakuId, danmakuAddition);\n    });\n  }\n\n  /** 加载附加弹幕 */\n  loadAddition({ url, type, data }: DanmakuSource) {\n    fetch(url)\n      .then((response) => {\n        if (/-xml$/.test(type)) {\n          return response.text();\n        } else {\n          return response.json();\n        }\n      })\n      .then((res) => {\n        const danmakuData = data ? data(res) : res;\n        const dan = this.parser.parse({ data: danmakuData, type });\n        if (dan) {\n          dan && this.add(dan);\n          this.player.emit(\"danmaku:addition_loaded\", url, dan);\n        } else {\n          throw \"无法正确解析弹幕格式\";\n        }\n      })\n      .catch((err) => {\n        this.player.emit(\"danmaku:addition_loaded\", url, [], err);\n        console.error(err);\n      });\n  }\n\n  /** 加载弹幕 */\n  private load(id: string | number) {\n    this.api\n      .get?.({ id })\n      .then((data) => {\n        const dan = this.parser.parse({ data, type: this.format });\n        if (dan) {\n          this.add(dan);\n          this.lastDanmakuId = dan[dan.length - 1].id;\n          this.player.emit(\"danmaku:loaded\", dan);\n        } else {\n          throw \"无法正确解析弹幕格式\";\n        }\n      })\n      .catch((err) => {\n        this.player.emit(\"danmaku:loaded\", [], err);\n      });\n  }\n\n  /** 加载实时新增弹幕 */\n  loadNew(id: string | number) {\n    const offset = this.lastDanmakuId;\n    this.player.emit(\"danmaku:new_loading\", offset);\n    this.api\n      .get?.({ id, offset: this.lastDanmakuId })\n      .then((data) => {\n        const dan = this.parser.parse({ data, type: this.format });\n        if (dan) {\n          this.add(dan);\n          this.lastDanmakuId = dan[dan.length - 1].id;\n          this.player.emit(\"danmaku:new_loaded\", offset, dan);\n        } else {\n          throw \"无法正确解析弹幕格式\";\n        }\n      })\n      .catch((err) => {\n        this.player.emit(\"danmaku:new_loaded\", offset, [], err);\n      });\n  }\n\n  /** 重载弹幕 */\n  public async reload(id?: string | number, addition?: DanmakuSource[]) {\n    this.player.emit(\"danmaku:loading\");\n    // 清空弹幕池\n    this.engine.reset();\n    id && this.load(id);\n    addition?.forEach((ad) => {\n      this.loadAddition(ad);\n    });\n  }\n\n  /**\n   * 添加弹幕到弹幕池\n   * @param dan 要添加的弹幕\n   * */\n  add(dan: DanmakuItem[]) {\n    const basicDanmaku: DanmakuItem[] = [];\n    const advancedDanmaku: Record<number, DanmakuItem[]> = {};\n    dan.forEach((dm) => {\n      if (dm.mode < 7) {\n        basicDanmaku.push(dm);\n      } else {\n        if (advancedDanmaku[dm.mode]) {\n          advancedDanmaku[dm.mode].push(dm);\n        } else {\n          advancedDanmaku[dm.mode] = [dm];\n        }\n      }\n    });\n    basicDanmaku.length && this.engine.add(basicDanmaku);\n    for (const mode in advancedDanmaku) {\n      this.handler[mode]?.(advancedDanmaku[mode]);\n    }\n  }\n\n  /**\n   * 根据id从弹幕池中移除弹幕\n   * @param ids 要移除的弹幕id\n   * */\n  remove(ids: (string | number)[]) {\n    this.engine.remove(ids);\n  }\n\n  /** 清空弹幕池 */\n  clear() {\n    this.engine.clear();\n  }\n\n  /** 显示弹幕 */\n  show() {\n    this.engine.show();\n    this.player.emit(\"danmaku:on\");\n  }\n\n  /** 隐藏弹幕 */\n  hide() {\n    this.engine.hide();\n    this.player.emit(\"danmaku:off\");\n  }\n\n  /** 切换弹幕显示 */\n  toggle() {\n    if (this.engine.hidden) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  // 弹幕屏蔽\n\n  /**\n   * 弹幕类型屏蔽\n   * @param type 类型\n   * @param flag 设置是否屏蔽\n   */\n  filter(type: string, flag: boolean) {\n    switch (type) {\n      case \"roll\":\n        this.engine.setTrackFilter(\"roll\", flag);\n        this.engine.setTrackFilter(\"reverse\", flag);\n        break;\n      case \"top\":\n      case \"bottom\":\n        this.engine.setTrackFilter(type, flag);\n        break;\n      case \"color\":\n        this.engine.setColorFilter(flag);\n        break;\n    }\n    this.player.emit(\"danmaku:filter\", type, flag);\n  }\n\n  // 弹幕播放属性设置\n\n  /** 设置弹幕不透明度 */\n  setOpacity(value: number) {\n    this.engine.opacity = value;\n    this.player.emitChange(\"danmaku.opacity\", value);\n  }\n  /** 设置弹幕速度 */\n  setSpeed(value: number) {\n    this.engine.speed = value;\n    this.player.emitChange(\"danmaku.speed\", value);\n  }\n  /** 设置弹幕区域 */\n  setArea(value: number) {\n    this.engine.limitArea = value || Infinity;\n    this.player.emitChange(\"danmaku.area\", value);\n  }\n  /** 设置弹幕大小 */\n  setScale(value: number) {\n    this.engine.fontScale = value;\n    this.player.emitChange(\"danmaku.scale\", value);\n  }\n  /** 设置弹幕字体 */\n  setFont(value: string) {\n    this.engine.fontFamily = value;\n    this.player.emitChange(\"danmaku.font\", value);\n  }\n  /** 设置弹幕加粗 */\n  setBold(value: boolean) {\n    this.engine.fontWeight = value ? \"bold\" : \"\";\n    this.player.emitChange(\"danmaku.bold\", value);\n  }\n}\n","import type { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    widescreen?: Widescreen;\n  }\n  interface PlayerOptions {\n    widescreen?: boolean;\n    widescreenToggle?: (flag: boolean) => void;\n  }\n  interface PlayerEventMap {\n    \"widescreen:enter\": () => void;\n    \"widescreen:exit\": () => void;\n  }\n}\n\n/** 宽屏模式插件 */\n\nexport default class Widescreen extends BasePlugin {\n  static readonly pluginName = \"widescreen\";\n  private _handler?: (flag: boolean) => void;\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    options.widescreen && this.enter();\n    this._handler = options.widescreenToggle;\n  }\n  enter() {\n    if (this.status) return;\n    this.player.$el.classList.add(\"state-widescreen\");\n    this._handler?.(true);\n    this.player.emit(\"widescreen:enter\");\n  }\n  exit() {\n    if (!this.status) return;\n    this.player.$el.classList.remove(\"state-widescreen\");\n    this._handler?.(false);\n    this.player.emit(\"widescreen:exit\");\n  }\n  get status() {\n    return this.player.$el.classList.contains(\"state-widescreen\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_play state-paused\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-play\"></i>\n      <i class=\"mpicon-pause\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">播放</div>\n  </div>\n`;\n\nexport default class ButtonPlay extends ControlsPlugin {\n  static pluginName = \"buttonPlay\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonPlay\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$left,\n        order: 1,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.player.on(\"pause\", () => {\n      this._change(false);\n    });\n    this.player.on(\"play\", () => {\n      this._change(true);\n    });\n    this.player.on(\"video_change\", () => {\n      this._change(false);\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      this.player.toggle();\n    });\n  }\n  /** 设置按钮状态 */\n  private _change(flag: boolean) {\n    this.$el.classList.toggle(\"state-on\", flag);\n    this.$tooltip.innerText = flag ? \"暂停\" : \"播放\";\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div\n    class=\"${classPrefix}-controls-button ${classPrefix}-button_prev state-autohide state-disabled\"\n  >\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-prev\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">上一P</div>\n  </div>\n`;\n\ndeclare module \"@/types\" {\n  interface PlayerOptions {\n    /** 视频切换按钮 */\n    switchButton?: {\n      /** 自动隐藏按钮，默认值为false */\n      autoHide?: boolean;\n      /** 只有一个视频时，隐藏所有按钮，默认值为true */\n      singleHide?: boolean;\n    };\n  }\n}\n\nexport default class ButtonPrev extends ControlsPlugin {\n  static pluginName = \"buttonPrev\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  readonly singleHide;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonPrev\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$left,\n        order: 0,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n    this.singleHide = options.switchButton?.singleHide ?? true;\n  }\n\n  created() {\n    this.$icon.addEventListener(\"click\", () => {\n      this.player.prev();\n    });\n    this.player.on(\"video_change\", () => {\n      this.player.hook.call(\"hasPrev\", void 0, false).then((res) => {\n        this.setDisabled(!res);\n        if (this.singleHide && !res) {\n          this.player.hook.call(\"hasNext\", void 0, false).then((res) => {\n            this.$el.classList.toggle(\"state-hidden\", !res);\n          });\n        } else {\n          this.$el.classList.remove(\"state-hidden\");\n        }\n      });\n    });\n  }\n  public setDisabled(flag: boolean) {\n    this.$el.classList.toggle(\"state-disabled\", flag);\n  }\n  /** 自动隐藏上一个/下一个按钮 */\n  setAutoHide(flag: boolean) {\n    this.$el.classList.toggle(\"state-autohide\", flag);\n  }\n  get disabled() {\n    return this.$el.classList.contains(\"state-disabled\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div\n    class=\"${classPrefix}-controls-button ${classPrefix}-button_next state-autohide state-disabled\"\n  >\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-next\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">下一P</div>\n  </div>\n`;\n\nexport default class ButtonNext extends ControlsPlugin {\n  static pluginName = \"buttonNext\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  readonly singleHide;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonNext\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$left,\n        order: 2,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n    this.singleHide = options.switchButton?.singleHide ?? true;\n  }\n\n  created() {\n    this.$icon.addEventListener(\"click\", () => {\n      this.player.next();\n    });\n    this.player.on(\"video_change\", () => {\n      this.player.hook.call(\"hasNext\", void 0, false).then((res) => {\n        this.setDisabled(!res);\n        if (this.singleHide && !res) {\n          this.player.hook.call(\"hasPrev\", void 0, false).then((res) => {\n            this.$el.classList.toggle(\"state-hidden\", !res);\n          });\n        } else {\n          this.$el.classList.remove(\"state-hidden\");\n        }\n      });\n    });\n  }\n  public setDisabled(flag: boolean) {\n    this.$el.classList.toggle(\"state-disabled\", flag);\n  }\n  /** 自动隐藏上一个/下一个按钮 */\n  setAutoHide(flag: boolean) {\n    this.$el.classList.toggle(\"state-autohide\", flag);\n  }\n  get disabled() {\n    return this.$el.classList.contains(\"state-disabled\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { secondToTime, timeToSecond } from \"@/utils\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-videotime\">\n    <div class=\"${classPrefix}-videotime-label\">\n      <span class=\"${classPrefix}-videotime-current\">00:00</span>\n      <span class=\"${classPrefix}-videotime-divider\">/</span>\n      <span class=\"${classPrefix}-videotime-total\">00:00</span>\n    </div>\n    <input class=\"${classPrefix}-videotime-input mpui-input\" />\n  </div>\n`;\n\nexport default class VideoTime extends ControlsPlugin {\n  static pluginName = \"videoTime\";\n  $label: HTMLElement;\n  $current: HTMLElement;\n  $total: HTMLElement;\n  $input: HTMLInputElement;\n  /** 点按时的值 */\n  private valueBeforeEdited = \"\";\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"videoTime\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$left,\n        order: 3,\n      },\n      el: fragment.querySelector(`.${classPrefix}-videotime`)!,\n    });\n    this.$label = this.$(`.${classPrefix}-videotime-label`)!;\n    this.$current = this.$(`.${classPrefix}-videotime-current`)!;\n    this.$total = this.$(`.${classPrefix}-videotime-total`)!;\n    this.$input = this.$(`.${classPrefix}-videotime-input`)!;\n  }\n\n  created() {\n    this.player.on(\"timeupdate\", (time) => {\n      this.$current.innerText = secondToTime(time);\n    });\n    this.player.on(\"durationchange\", (time) => {\n      this.$total.innerText = secondToTime(time);\n    });\n    this.$label.addEventListener(\"click\", () => {\n      this.$el.classList.add(\"state-input\");\n      this.$input.value = secondToTime(this.player.time);\n      this.valueBeforeEdited = this.$input.value;\n      this.$input.focus();\n    });\n    this.$input.addEventListener(\"blur\", () => {\n      const inputVal = this.$input.value;\n      if (inputVal != this.valueBeforeEdited) {\n        // 如果输入值有改动，则跳转\n        this.player.seek(timeToSecond(inputVal));\n        this.player.play();\n      }\n      this.exitInput();\n    });\n    this.$input.addEventListener(\"keydown\", (event) => {\n      const e = event || window.event;\n      if (e.keyCode == 13) {\n        this.player.seek(timeToSecond(this.$input.value));\n        this.player.play();\n        this.exitInput();\n      }\n      if (e.keyCode == 27) {\n        this.exitInput();\n      }\n    });\n  }\n\n  /** 退出输入模式 */\n  exitInput() {\n    this.$el.classList.remove(\"state-input\");\n    this.$input.value = \"\";\n    this.valueBeforeEdited = \"\";\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_loop\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-loop-off\"></i>\n      <i class=\"mpicon-loop\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">洗脑循环</div>\n  </div>\n`;\n\nexport default class ButtonLoop extends ControlsPlugin {\n  static pluginName = \"buttonLoop\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonLoop\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$left,\n        order: 4,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.player.watch(\"loop\", (flag) => {\n      this.$el.classList.toggle(\"state-on\", flag);\n      this.$tooltip.innerText = flag ? \"关闭洗脑循环\" : \"洗脑循环\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      if (this.player.loop) {\n        this.player.setLoop(false);\n      } else {\n        this.player.setLoop(true);\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_part\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <div class=\"${classPrefix}-controls-button-text\">P0</div>\n    </div>\n    <div class=\"mpui-tooltip\">分P列表</div>\n  </div>\n`;\n\nexport default class ButtonPart extends ControlsPlugin {\n  static pluginName = \"buttonPart\";\n  $icon: HTMLElement;\n  $text: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonPart\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n        order: 0,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$text = this.$(`.${classPrefix}-controls-button-text`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.$icon.addEventListener(\"click\", () => {\n      this.plugin.partList?.toggle();\n    });\n    this.player.on(\"video_change\", (info) => {\n      this.$text.innerText = `P${info.part}`;\n      this.$el.classList.toggle(\"state-show\", (info.list?.length || 1) > 1);\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { SliderVertical } from \"@/components\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_volume\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-volume\"></i>\n      <i class=\"mpicon-volume-off\"></i>\n    </div>\n\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel\">\n        <div class=\"${classPrefix}-button_volume-value\">0</div>\n        <div class=\"${classPrefix}-button_volume-slider\"></div>\n      </div>\n    </div>\n  </div>\n`;\n\nexport default class ButtonVolume extends ControlsPlugin {\n  static pluginName = \"buttonVolume\";\n  $icon: HTMLElement;\n  $slider: HTMLElement;\n  $value: HTMLElement;\n  slider!: SliderVertical;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonVolume\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n        order: 1,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$slider = this.$(`.${classPrefix}-button_volume-slider`)!;\n    this.$value = this.$(`.${classPrefix}-button_volume-value`)!;\n  }\n\n  created() {\n    this.slider = new SliderVertical({\n      container: this.$slider,\n      min: 0,\n      max: 100,\n      step: 1,\n      value: this.player.volume * 100,\n      onChange: (value) => {\n        this.$value.innerText = value.toString();\n      },\n      onDrag: (value) => {\n        this.player.setVolume(value / 100);\n      },\n      onDragStart: (value) => {\n        if (this.player.muted && value != 0) {\n          this.player.unmute();\n        }\n        this.$el.classList.add(\"state-control\");\n        this.player.controlled = true;\n      },\n      onDragEnd: () => {\n        this.$el.classList.remove(\"state-control\");\n        this.player.controlled = false;\n      },\n    });\n    this.player.on(\"volumechange\", (value: number, muted: boolean) => {\n      if (muted) {\n        this.$el.classList.add(\"state-muted\");\n        this.slider.setValue(0);\n      } else {\n        this.$el.classList.remove(\"state-muted\");\n        this.slider.setValue(Math.round(value * 100));\n      }\n      if (value == 0) {\n        this.$el.classList.add(\"state-muted\");\n      }\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      if (this.player.muted || this.player.volume == 0) {\n        if (this.player.volume == 0) {\n          this.player.setVolume(0.1);\n        }\n        this.player.unmute();\n      } else {\n        this.player.mute();\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { Picker } from \"@/components\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_settings\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-settings\"></i>\n    </div>\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel\"></div>\n    </div>\n  </div>\n`;\n\nexport default class ButtonSettings extends ControlsPlugin {\n  static pluginName = \"buttonSettings\";\n  $icon: HTMLElement;\n  $panel: HTMLElement;\n\n  pickerRate!: Picker;\n  pickerScale!: Picker;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonSettings\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n        order: 2,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$panel = this.$(`.${classPrefix}-controls-panel`)!;\n  }\n\n  created(options: PlayerOptions) {\n    this.$panel.appendChild(this.plugin.settings!.$el);\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { pictureInPictureEnabled } from \"@/utils\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_pip\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-pip\"></i>\n      <i class=\"mpicon-pip-exit\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">画中画</div>\n  </div>\n`;\n\nexport default class ButtonPip extends ControlsPlugin {\n  static pluginName = \"buttonPip\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonPip\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n        order: 7,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n      disabled: !pictureInPictureEnabled,\n    });\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.player.on(\"pip:enter\", () => {\n      this.$el.classList.add(\"state-on\");\n      this.$tooltip.innerText = \"退出画中画\";\n    });\n    this.player.on(\"pip:exit\", () => {\n      this.$el.classList.remove(\"state-on\");\n      this.$tooltip.innerText = \"画中画\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      const { pip } = this.plugin;\n      if (!pip) return;\n      if (pip.status) {\n        pip.exit();\n      } else {\n        pip.enter();\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport {} from \"../../screen/widescreen\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_widescreen\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-widescreen\"></i>\n      <i class=\"mpicon-widescreen-exit\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">宽屏模式</div>\n  </div>\n`;\n\nexport default class ButtonWidescreen extends ControlsPlugin {\n  static pluginName = \"buttonWidescreen\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonWide\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n        order: 8,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.player.on(\"widescreen:enter\", () => {\n      this.$el.classList.add(\"state-on\");\n      this.$tooltip.innerText = \"退出宽屏模式\";\n    });\n    this.player.on(\"widescreen:exit\", () => {\n      this.$el.classList.remove(\"state-on\");\n      this.$tooltip.innerText = \"宽屏模式\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      const { widescreen } = this.plugin;\n      if (!widescreen) return;\n      if (!widescreen.status) {\n        widescreen.enter();\n      } else {\n        widescreen.exit();\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_webscreen\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-webscreen\"></i>\n      <i class=\"mpicon-webscreen-exit\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">网页全屏</div>\n  </div>\n`;\n\nexport default class ButtonWebscreen extends ControlsPlugin {\n  static pluginName = \"buttonWebscreen\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonWebscreen\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n        order: 9,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.player.on(\"webscreen:enter\", () => {\n      this.$el.classList.add(\"state-on\");\n      this.$tooltip.innerText = \"退出网页全屏\";\n    });\n    this.player.on(\"webscreen:exit\", () => {\n      this.$el.classList.remove(\"state-on\");\n      this.$tooltip.innerText = \"网页全屏\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      const { webscreen } = this.plugin;\n      if (!webscreen) return;\n      if (!webscreen.status) {\n        webscreen.enter();\n      } else {\n        webscreen.exit();\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { fullScreenEnabled } from \"@/utils\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_fullscreen\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-fullscreen\"></i>\n      <i class=\"mpicon-fullscreen-exit\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">进入全屏</div>\n  </div>\n`;\n\nexport default class ButtonFullscreen extends ControlsPlugin {\n  static pluginName = \"buttonFullscreen\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonFullscreen\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n        order: 10,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n      disabled: !fullScreenEnabled,\n    });\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.player.on(\"fullscreen:enter\", () => {\n      this.$el.classList.add(\"state-on\");\n      this.$tooltip.innerText = \"退出全屏\";\n    });\n    this.player.on(\"fullscreen:exit\", () => {\n      this.$el.classList.remove(\"state-on\");\n      this.$tooltip.innerText = \"进入全屏\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      const { fullscreen } = this.plugin;\n      if (!fullscreen) return;\n      if (!fullscreen.status) {\n        fullscreen.enter();\n      } else {\n        fullscreen.exit();\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_danmakutoggle state-on\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-danmaku-off\"></i>\n      <i class=\"mpicon-danmaku\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">关闭弹幕</div>\n  </div>\n`;\n\nexport default class ButtonDanmakuToggle extends ControlsPlugin {\n  static pluginName = \"buttonDanmakuToggle\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonDanmakuToggle\",\n      defaultOptions: {\n        container: (p) => p.plugin.danmakuBar?.$slot || p.plugin.controller?.$right,\n        order: 0,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.player.on(\"danmaku:on\", () => {\n      this._change(true);\n    });\n    this.player.on(\"danmaku:off\", () => {\n      this._change(false);\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      this.plugin.danmaku?.toggle();\n    });\n  }\n\n  /** 设置按钮状态 */\n  private _change(flag: boolean) {\n    this.$el.classList.toggle(\"state-on\", flag);\n    this.$tooltip.innerText = flag ? \"关闭弹幕\" : \"开启弹幕\";\n  }\n}\n","import { MultiPicker, Slider } from \"@/components\";\nimport { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport Danmaku from \"@/plugins/danmaku\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_danmakusettings\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-danmaku-settings\"></i>\n    </div>\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel ${classPrefix}-controls-panel-danmaku-settings\">\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">类型屏蔽</div>\n          <div class=\"${classPrefix}-danmaku-settings-filter-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">不透明度</div>\n          <div\n            class=\"${classPrefix}-danmaku-settings-opacity-slider ${classPrefix}-slider-wrap\"\n          ></div>\n          <div class=\"${classPrefix}-danmaku-settings-opacity-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">显示区域</div>\n          <div class=\"${classPrefix}-danmaku-settings-area-slider ${classPrefix}-slider-wrap\"></div>\n          <div class=\"${classPrefix}-danmaku-settings-area-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">文字大小</div>\n          <div class=\"${classPrefix}-danmaku-settings-size-slider ${classPrefix}-slider-wrap\"></div>\n          <div class=\"${classPrefix}-danmaku-settings-size-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">弹幕速度</div>\n          <div\n            class=\"${classPrefix}-danmaku-settings-speed-slider  ${classPrefix}-slider-wrap\"\n          ></div>\n          <div class=\"${classPrefix}-danmaku-settings-speed-value ${classPrefix}-row-value\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n`;\n\nexport default class ButtonDanmakuSettings extends ControlsPlugin {\n  static pluginName = \"buttonDanmakuSettings\";\n  danmaku: Danmaku;\n\n  $icon: HTMLElement;\n\n  $filterPicker: HTMLElement;\n  $opacitySlider: HTMLElement;\n  $areaSlider: HTMLElement;\n  $sizeSlider: HTMLElement;\n  $speedSlider: HTMLElement;\n\n  $opacityValue: HTMLElement;\n  $areaValue: HTMLElement;\n  $sizeValue: HTMLElement;\n  $speedValue: HTMLElement;\n\n  pickerFilter!: MultiPicker;\n  sliderOpacity!: Slider;\n  sliderArea!: Slider;\n  sliderSize!: Slider;\n  sliderSpeed!: Slider;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonDanmakuSettings\",\n      defaultOptions: {\n        container: (p) => p.plugin.danmakuBar?.$slot || p.plugin.controller?.$right,\n        order: 1,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n\n    this.danmaku = player.plugin.danmaku!;\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n\n    this.$filterPicker = this.$(`.${classPrefix}-danmaku-settings-filter-picker`)!;\n    this.$opacitySlider = this.$(`.${classPrefix}-danmaku-settings-opacity-slider`)!;\n    this.$areaSlider = this.$(`.${classPrefix}-danmaku-settings-area-slider`)!;\n    this.$sizeSlider = this.$(`.${classPrefix}-danmaku-settings-size-slider`)!;\n    this.$speedSlider = this.$(`.${classPrefix}-danmaku-settings-speed-slider`)!;\n\n    this.$opacityValue = this.$(`.${classPrefix}-danmaku-settings-opacity-value`)!;\n    this.$areaValue = this.$(`.${classPrefix}-danmaku-settings-area-value`)!;\n    this.$sizeValue = this.$(`.${classPrefix}-danmaku-settings-size-value`)!;\n    this.$speedValue = this.$(`.${classPrefix}-danmaku-settings-speed-value`)!;\n  }\n\n  created() {\n    // 弹幕类型屏蔽\n    this.pickerFilter = new MultiPicker({\n      container: this.$filterPicker,\n      value: [],\n      list: [\n        { value: \"roll\", label: \"滚动\" },\n        { value: \"top\", label: \"顶部\" },\n        { value: \"bottom\", label: \"底部\" },\n        { value: \"color\", label: \"彩色\" },\n        { value: \"special\", label: \"特殊\" },\n      ],\n      onToggle: (value, flag) => {\n        this.danmaku.filter(value, flag);\n      },\n    });\n    // 不透明度\n    this.sliderOpacity = new Slider({\n      container: this.$opacitySlider,\n      min: 10,\n      max: 100,\n      step: 1,\n      value: 100,\n      onDrag: (value) => {\n        this.danmaku.setOpacity(value / 100);\n      },\n      onChange: (value) => {\n        this.$opacityValue.innerText = `${value}%`;\n      },\n    });\n    // 显示区域\n    this.sliderArea = new Slider({\n      container: this.$areaSlider,\n      min: 20,\n      max: 105,\n      step: 5,\n      value: 25,\n      onDrag: (value) => {\n        const area = value / 100;\n        this.danmaku.setArea(area > 100 ? 0 : area);\n      },\n      onChange: (value) => {\n        this.$areaValue.innerText = value < 100 ? `${value}%` : value == 100 ? \"不重叠\" : \"无限\";\n      },\n    });\n    this.sliderArea.drag(25);\n    // 文字大小\n    this.sliderSize = new Slider({\n      container: this.$sizeSlider,\n      min: 50,\n      max: 200,\n      step: 1,\n      value: 100,\n      onDrag: (value) => {\n        this.danmaku.setScale(value / 100);\n      },\n      onChange: (value) => {\n        this.$sizeValue.innerText = `${value}%`;\n      },\n    });\n    // 弹幕速度\n    this.sliderSpeed = new Slider({\n      container: this.$speedSlider,\n      min: 20,\n      max: 180,\n      step: 10,\n      value: 100,\n      divider: 5,\n      onDrag: (value) => {\n        this.danmaku.setSpeed(value / 100);\n      },\n      onChange: (value) => {\n        this.$speedValue.innerText = `${value}%`;\n      },\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { classPrefix, developers, repositoryLink } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { PanelPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-about\">\n    <div class=\"${classPrefix}-about-logo\"></div>\n    <div class=\"${classPrefix}-about-version\">version ${Player.version}-${Player.gitHash}</div>\n    <div>github：<a href=\"${repositoryLink}\" target=\"_blank\">mfuns-cn/mfunsPlayer</a></div>\n    <div>开发者：</div>\n    <ul class=\"${classPrefix}-about-developers\">\n      ${developers.map(\n        ({ name, link }) => html`\n          <li>\n            <a href=\"${link}\" target=\"_blank\">${name}</a>\n          </li>\n        `\n      )}\n      <li></li>\n    </ul>\n  </div>\n`;\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    about?: About;\n  }\n}\n\nexport default class About extends PanelPlugin {\n  static pluginName = \"about\";\n  title = \"关于\";\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template(), fragment);\n\n    super(player, options, {\n      name: \"about\",\n      defaultOptions: { mount: (player) => player.plugin.modal },\n      el: fragment.querySelector(`.${classPrefix}-about`)!,\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { PanelPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = (list: HotkeyInfoListItem[]) => html`\n  <div class=\"${classPrefix}-hotkeys\">\n    <div class=\"${classPrefix}-hotkeys-list\">\n      ${list.map(\n        ({ key, description }) => html`\n          <div class=\"${classPrefix}-hotkeys-list-item\">\n            <div class=\"${classPrefix}-hotkeys-list-key\">${key}</div>\n            <div class=\"${classPrefix}-hotkeys-list-description\">${description}</div>\n          </div>\n        `\n      )}\n    </div>\n  </div>\n`;\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    hotkeys?: Hotkeys;\n  }\n}\n\ninterface HotkeyInfoListItem {\n  key: string;\n  description: string;\n}\n\nexport default class Hotkeys extends PanelPlugin {\n  static pluginName = \"hotkeys\";\n  title = \"快捷键说明\";\n  constructor(player: Player, options: PlayerOptions) {\n    const hotkeyInfoList = [\n      { key: \"Space\", description: \"播放/暂停\" },\n      { key: \"→\", description: \"快进5秒\" },\n      { key: \"←\", description: \"快退5秒\" },\n      { key: \"↑\", description: \"音量增加10%\" },\n      { key: \"↓\", description: \"音量降低10%\" },\n    ];\n    const fragment = new DocumentFragment();\n    render(template(hotkeyInfoList), fragment);\n    super(player, options, {\n      name: \"hotkeys\",\n      defaultOptions: { mount: (player) => player.plugin.modal },\n      el: fragment.querySelector(`.${classPrefix}-hotkeys`)!,\n    });\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { DanmakuItem } from \"@/plugins/danmaku/types\";\nimport { html, render } from \"lit-html\";\nimport Danmaku from \"../danmaku\";\nimport { createElement } from \"@/utils\";\n\nconst template = (list: MenuItem[]) => html`\n  <div class=\"${classPrefix}-contextmenu\">\n    <ul class=\"${classPrefix}-contextmenu-danmaku mpui-black\"></ul>\n    <ul class=\"${classPrefix}-contextmenu-menu mpui-black\">\n      ${list.map(\n        ({ name, onClick }) => html`\n          <li class=\"${classPrefix}-contextmenu-item\" @click=${onClick}>${name}</li>\n        `\n      )}\n    </ul>\n  </div>\n`;\nconst templateDanmaku = (\n  danmaku: DanmakuItem[],\n  operation: (dm: DanmakuItem) => [string, (dm: DanmakuItem) => void, unknown][],\n  onClick: (dm: DanmakuItem) => void,\n  menu: ContextMenu\n) => html`\n  ${danmaku.map(\n    (dm) => html`\n      <li\n        class=\"${classPrefix}-contextmenu-danmaku-item\"\n        @click=${() => {\n          onClick(dm);\n        }}\n      >\n        <div class=\"${classPrefix}-contextmenu-danmaku-item-content\">${dm.content}</div>\n        <div class=\"${classPrefix}-contextmenu-danmaku-item-operate\">\n          ${operation(dm).map(\n            ([label, onClick]) => html`<div\n              class=\"${classPrefix}-contextmenu-danmaku-item-operate-btn\"\n              @click=${(e: MouseEvent) => {\n                e.stopPropagation();\n                onClick(dm);\n                menu.hide();\n              }}\n            >\n              ${label}\n            </div>`\n          )}\n        </div>\n      </li>\n    `\n  )}\n`;\n\nconst copyClip = (content: string) => {\n  navigator.clipboard.writeText(content).then(\n    (res) => {\n      // success\n    },\n    (rej) => {\n      // fail\n    }\n  );\n};\n\ninterface MenuItem {\n  name: string;\n  onClick?: () => void;\n}\n\nexport default class ContextMenu extends BasePlugin {\n  static pluginName = \"contextMenu\";\n  player: Player;\n  container: HTMLElement;\n  danmaku?: Danmaku;\n  $el: HTMLElement;\n  $danmaku: HTMLElement;\n  $menu: HTMLElement;\n  private isShow = false;\n  constructor(player: Player) {\n    super(player);\n    this.player = player;\n\n    const menuList: MenuItem[] = [\n      {\n        name: \"快捷键说明\",\n        onClick: () => {\n          this.plugin.hotkeys?.toggle(true);\n        },\n      },\n      {\n        name: `Mfuns Player v${Player.version}-${Player.gitHash}`,\n        onClick: () => {\n          this.plugin.about?.toggle(true);\n        },\n      },\n    ];\n    this.container = createElement(\"div\", { class: `${classPrefix}-contextmenu-wrap` });\n    render(template(menuList), this.container);\n    this.$el = this.container.querySelector(`.${classPrefix}-contextmenu`)!;\n    this.$danmaku = this.$el.querySelector(`.${classPrefix}-contextmenu-danmaku`)!;\n    this.$menu = this.$el.querySelector(`.${classPrefix}-contextmenu-menu`)!;\n\n    this.player.$main.appendChild(this.container);\n  }\n  created() {\n    this.player.$area.addEventListener(\"contextmenu\", (e: MouseEvent) => {\n      e.preventDefault();\n      const clientRect = this.player.$area.getBoundingClientRect();\n      const x = e.clientX - clientRect.left;\n      const y = e.clientY - clientRect.top;\n      this.show(x, y);\n      const captured = this.danmaku?.engine.captureDanmaku(x, y, 4);\n      this.showDanmaku(captured || []);\n    });\n    this.container.addEventListener(\"contextmenu\", (e: MouseEvent) => {\n      e.preventDefault();\n      const clientRect = this.container.getBoundingClientRect();\n      const x = e.clientX - clientRect.left;\n      const y = e.clientY - clientRect.top;\n      this.show(x, y);\n      const captured = this.danmaku?.engine.captureDanmaku(x, y, 4);\n      this.showDanmaku(captured || []);\n    });\n    document.addEventListener(\"click\", () => {\n      if (this.isShow) {\n        this.hide();\n      }\n    });\n  }\n  pluginsReady() {\n    this.danmaku = this.plugin.danmaku;\n  }\n  show(x: number, y: number) {\n    this.container.classList.add(\"state-show\");\n    const clientRect = this.player.$area.getBoundingClientRect();\n    if (x + this.$el.offsetWidth >= clientRect.width) {\n      this.$el.style.right = clientRect.width - x + \"px\";\n      this.$el.style.left = \"initial\";\n    } else {\n      this.$el.style.left = x + \"px\";\n      this.$el.style.right = \"initial\";\n    }\n    if (y + this.$el.offsetHeight >= clientRect.height) {\n      this.$el.style.bottom = clientRect.height - y + \"px\";\n      this.$el.style.top = \"initial\";\n    } else {\n      this.$el.style.top = y + \"px\";\n      this.$el.style.bottom = \"initial\";\n    }\n    this.isShow = true;\n  }\n  showDanmaku(danmaku: DanmakuItem[]) {\n    const api = this.danmaku?.api;\n    const operate = this.danmaku?.operate;\n    if (danmaku?.length) {\n      this.$danmaku.style.display = \"\";\n    } else {\n      this.$danmaku.style.display = \"none\";\n    }\n    render(\n      templateDanmaku(\n        danmaku,\n        (dm) => {\n          const myDanmaku = this.player.userId && dm.user == this.player.userId;\n          return [\n            [\n              \"举报\",\n              (dm: DanmakuItem) => {\n                operate?.report(dm);\n              },\n              !myDanmaku && api?.report,\n            ],\n            [\n              \"屏蔽\",\n              (dm: DanmakuItem) => {\n                operate?.blockUser(dm.user, true);\n              },\n              !myDanmaku && api?.blockUser,\n            ],\n            [\n              \"撤回\",\n              (dm: DanmakuItem) => {\n                operate?.recall(dm);\n              },\n              myDanmaku && api?.recall,\n            ],\n            [\n              \"复制\",\n              (dm: DanmakuItem) => {\n                copyClip(dm.content);\n              },\n              true,\n            ],\n          ].filter((v) => v[2]) as [string, (dm: DanmakuItem) => void, unknown][];\n        },\n        (dm) => {\n          this.player.emit(\"danmaku:select\", dm);\n        },\n        this\n      ),\n      this.$danmaku\n    );\n  }\n  hide() {\n    this.container.classList.remove(\"state-show\");\n    this.isShow = false;\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\n\nimport { BasePlugin } from \"@/plugin\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-mask\"></div>\n  <div class=\"${classPrefix}-controller mpui-black\">\n    <div class=\"${classPrefix}-controller-top\"></div>\n    <div class=\"${classPrefix}-controller-content\">\n      <div class=\"${classPrefix}-controller-left\"></div>\n      <div class=\"${classPrefix}-controller-center\"></div>\n      <div class=\"${classPrefix}-controller-right\"></div>\n    </div>\n  </div>\n`;\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    controller?: Controller;\n  }\n}\n\n/** 控制栏 */\nexport default class Controller extends BasePlugin {\n  static pluginName = \"controller\";\n  player: Player;\n  container: HTMLElement;\n  $el: HTMLElement;\n  $top: HTMLElement;\n  $content: HTMLElement;\n  $left: HTMLElement;\n  $center: HTMLElement;\n  $right: HTMLElement;\n\n  isHover = false;\n\n  protected inactiveHook: () => boolean | void;\n  protected mouseEnterHandler: () => void;\n  protected mouseLeaveHandler: () => void;\n\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.player = player;\n    this.container = document.createElement(\"div\");\n    this.container.className = `${classPrefix}-controller-wrap`;\n    const fragment = new DocumentFragment();\n    render(template(), fragment);\n    this.$el = fragment.querySelector(`.${classPrefix}-controller`)!;\n    this.$top = this.$el.querySelector(`.${classPrefix}-controller-top`)!;\n    this.$content = this.$el.querySelector(`.${classPrefix}-controller-content`)!;\n    this.$left = this.$el.querySelector(`.${classPrefix}-controller-left`)!;\n    this.$center = this.$el.querySelector(`.${classPrefix}-controller-center`)!;\n    this.$right = this.$el.querySelector(`.${classPrefix}-controller-right`)!;\n    this.player.$main.append(this.container);\n\n    this.inactiveHook = () => !this.isHover && void 0;\n    this.mouseEnterHandler = () => {\n      this.isHover = true;\n    };\n    this.mouseLeaveHandler = () => {\n      this.isHover = false;\n    };\n\n    this.container.appendChild(fragment);\n  }\n  created(options: PlayerOptions) {\n    this.player.hook.register(\"inactive\", this.inactiveHook);\n    this.container.addEventListener(\"mouseenter\", this.mouseEnterHandler);\n    this.container.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\n  }\n  destroy() {\n    this.player.hook.unregister(\"inactive\", this.inactiveHook);\n    this.container.removeEventListener(\"mouseenter\", this.mouseEnterHandler);\n    this.container.removeEventListener(\"mouseleave\", this.mouseLeaveHandler);\n  }\n}\n","import { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { keyCode } from \"@/utils/KeyCode.enum\";\n\nexport default class Hotkey {\n  static readonly pluginName = \"hotkey\";\n  player: Player;\n  controlMask: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    this.player = player;\n    this.controlMask = this.player.$area;\n    this.initKey();\n    this.initMask();\n  }\n\n  initKey() {\n    document.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n      if (this.player.focused) {\n        switch (e.keyCode) {\n          case keyCode.Space:\n            e.preventDefault();\n            this.player.toggle();\n            break;\n          case keyCode.LeftArrow:\n            e.preventDefault();\n            this.player.seek(this.player.time - 5);\n            break;\n          case keyCode.RightArrow:\n            e.preventDefault();\n            this.player.seek(this.player.time + 5);\n            break;\n          case keyCode.UpArrow:\n            e.preventDefault();\n            this.player.setVolume(this.player.volume + 0.1);\n            break;\n          case keyCode.DownArrow:\n            e.preventDefault();\n            this.player.setVolume(this.player.volume - 0.1);\n            break;\n        }\n      }\n    });\n  }\n\n  initMask() {\n    this.controlMask.addEventListener(\"click\", () => {\n      this.player.toggle();\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { createElement } from \"@/utils\";\nimport { BasePlugin, PanelPlugin } from \"@/plugin\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-modal-mask\"></div>\n  <div class=\"${classPrefix}-modal\">\n    <div class=\"${classPrefix}-modal-head\">\n      <div class=\"${classPrefix}-modal-title\"></div>\n      <div class=\"${classPrefix}-modal-close\">\n        <i class=\"mpicon-close\"></i>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-modal-content\"></div>\n  </div>\n`;\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    modal?: Modal;\n  }\n}\n\nexport default class Modal extends BasePlugin {\n  static readonly pluginName = \"modal\";\n  container: HTMLElement;\n  $el: HTMLElement;\n  $mask: HTMLElement;\n  $content: HTMLElement;\n  $title: HTMLElement;\n  $close: HTMLElement;\n  current: PanelPlugin | null = null;\n  get isShow(): boolean {\n    return this.container.classList.contains(\"state-show\");\n  }\n\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.container = createElement(\"div\", { class: `${classPrefix}-modal-wrap` });\n    render(template(), this.container);\n    this.$el = this.container.querySelector(`.${classPrefix}-modal`)!;\n    this.$mask = this.container.querySelector(`.${classPrefix}-modal-mask`)!;\n    this.$content = this.$el.querySelector(`.${classPrefix}-modal-content`)!;\n    this.$title = this.$el.querySelector(`.${classPrefix}-modal-title`)!;\n    this.$close = this.$el.querySelector(`.${classPrefix}-modal-close`)!;\n\n    this.player.$main.appendChild(this.container);\n  }\n\n  created() {\n    this.$mask.addEventListener(\"click\", () => {\n      this.hide();\n    });\n    this.$close.addEventListener(\"click\", () => {\n      this.hide();\n    });\n  }\n\n  hide() {\n    this.current?.toggle(false);\n  }\n\n  mount(panel: PanelPlugin) {\n    panel.mount(this.$content, (flag) => {\n      if (flag) {\n        for (const a of this.$content.children) {\n          a.classList.toggle(\"state-show\", a == panel.$el);\n        }\n        this.container.classList.add(\"state-show\");\n        this.$title.innerText = panel.title;\n        this.current = panel;\n      } else {\n        if (this.current == panel) {\n          this.container.classList.remove(\"state-show\");\n          panel.$el.classList.remove(\"state-show\");\n          this.$title.innerText = \"\";\n          this.current = null;\n        }\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { PlayerOptions } from \"@/types\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport Controller from \"../ui/controller\";\nimport { secondToTime } from \"@/utils\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-progress\">\n    <div class=\"${classPrefix}-progress-buffered\"></div>\n    <div class=\"${classPrefix}-progress-played\"></div>\n    <div class=\"${classPrefix}-progress-thumb-track\">\n      <div class=\"${classPrefix}-progress-thumb\"></div>\n    </div>\n    <div class=\"${classPrefix}-progress-preview\">\n      <div class=\"${classPrefix}-progress-thumbnail\"></div>\n      <div class=\"${classPrefix}-progress-time\"></div>\n    </div>\n    <div class=\"${classPrefix}-progress-tip\"></div>\n  </div>\n`;\n\n/** 进度条 */\nexport default class Progress {\n  static readonly pluginName = \"progress\";\n  controller: Controller;\n  player: Player;\n  container: HTMLElement;\n  $el: HTMLElement;\n\n  $buffered: HTMLElement;\n  $played: HTMLElement;\n  $thumbTrack: HTMLElement;\n  $thumb: HTMLElement;\n  $preview: HTMLElement;\n  $thumbnail: HTMLElement;\n  $time: HTMLElement;\n  $tip: HTMLElement;\n  /** 轨道长度 */\n  private trackLength = 0;\n  /** 鼠标与轨道距离 */\n  private distance = 0;\n  /** 滑块可滑动距离 */\n  private nMax = 0;\n  /** 滑块轨道位置 */\n  private nLeft = 0;\n  /** 滑动距离 */\n  get nLength(): number {\n    const nLength = this.distance - this.thumbTrackX;\n    // 限制滑块移动位置\n    return nLength >= this.nMax ? this.nMax : nLength <= 0 ? 0 : nLength;\n  }\n  /** 滑块轨道与总轨道距离差 */\n  get thumbTrackX(): number {\n    return (this.trackLength - this.nMax) / 2;\n  }\n  /** 滑动值 */\n  get nValue(): number {\n    return (this.nLength / this.nMax) * this.player.duration;\n  }\n  private isDragging = false;\n  private isHover = false;\n  private isActive = false;\n\n  constructor(player: Player, options: PlayerOptions) {\n    this.player = player;\n    this.controller = player.plugin.controller!;\n    this.container = this.controller.$top;\n    render(template(), this.container);\n\n    this.$el = this.container.querySelector(`.${classPrefix}-progress`)!;\n    this.$buffered = this.$el.querySelector(`.${classPrefix}-progress-buffered`)!;\n    this.$played = this.$el.querySelector(`.${classPrefix}-progress-played`)!;\n    this.$thumbTrack = this.$el.querySelector(`.${classPrefix}-progress-thumb-track`)!;\n    this.$thumb = this.$el.querySelector(`.${classPrefix}-progress-thumb`)!;\n    this.$preview = this.$el.querySelector(`.${classPrefix}-progress-preview`)!;\n    this.$thumbnail = this.$el.querySelector(`.${classPrefix}-progress-thumbnail`)!;\n    this.$time = this.$el.querySelector(`.${classPrefix}-progress-time`)!;\n    this.$tip = this.$el.querySelector(`.${classPrefix}-progress-tip`)!;\n\n    // 点按进度条事件\n    this.container.addEventListener(\"mousedown\", (e: MouseEvent) => {\n      const { clientX } = e;\n      // 更新滑动条位置信息\n      this.trackLength = this.$el.offsetWidth;\n      this.nMax = this.$thumbTrack.offsetWidth || this.trackLength;\n      this.nLeft = this.container.getBoundingClientRect().left;\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      this.setPlayed(this.nValue);\n      this.$el.classList.add(`${classPrefix}-progress-dragging`);\n      this.isDragging = true;\n      document.addEventListener(\"mousemove\", dragMoveEvent);\n      document.addEventListener(\"mouseup\", dragEndEvent);\n    });\n\n    // 滑动进度条事件\n    const dragMoveEvent = (e: MouseEvent) => {\n      // 鼠标X位置\n      const { clientX } = e;\n      // 鼠标移动时取消默认行为，避免选中其他元素或文字\n      e.preventDefault();\n      e.stopPropagation();\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      this.setPlayed(this.nValue);\n      // 更新指针显示\n      this.updateTip();\n      window.getSelection()?.removeAllRanges();\n    };\n\n    // 松开进度条事件\n    const dragEndEvent = (e: MouseEvent) => {\n      e.stopPropagation();\n      window.getSelection()?.removeAllRanges();\n      document.removeEventListener(\"mousemove\", dragMoveEvent);\n      document.removeEventListener(\"mouseup\", dragEndEvent);\n      this.$el.classList.remove(`${classPrefix}-progress-dragging`);\n      this.isDragging = false;\n      if (!this.isHover) this.setActive(false);\n      // 跳转\n      this.player.seek(this.nValue);\n      this.player.play();\n    };\n\n    // 鼠标离开进度条区域\n    this.container.addEventListener(\"mouseenter\", () => {\n      this.isHover = true;\n      if (!this.isDragging) this.updateTip();\n    });\n    // 鼠标在进度条区域内移动\n    this.container.addEventListener(\"mousemove\", (e: MouseEvent) => {\n      // 如果进度条处于拖动状态，则无需重复显示进度条指针\n      if (this.isDragging) return;\n      // 鼠标X位置\n      const { clientX } = e;\n      // 更新滑动条位置信息\n      this.trackLength = this.$el.offsetWidth;\n      this.nMax = this.$thumbTrack.offsetWidth || this.trackLength;\n      this.nLeft = this.container.getBoundingClientRect().left;\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      // 更新指针显示\n      this.updateTip();\n    });\n    // 鼠标离开进度条区域\n    this.container.addEventListener(\"mouseleave\", () => {\n      this.isHover = false;\n      if (!this.isDragging) this.setActive(false);\n    });\n\n    // 视频播放时间更新\n    this.player.on(\"timeupdate\", (time) => {\n      if (!this.isDragging) this.setPlayed(time);\n    });\n\n    // 视频缓存更新\n    this.player.on(\"progress\", (buffered) => {\n      this.setBuffered(buffered.length ? buffered.end(buffered.length - 1) : 0);\n    });\n  }\n\n  /** 设置已播放进度条位置 */\n  public setPlayed(time: number) {\n    // 计算进度比值\n    const per = time / this.player.duration || 0;\n    // 修改滑块位置\n    this.$thumb.style.left = `${per * 100}%`;\n    // 修改滑动痕迹宽度\n    this.$played.style.width = `${per * 100}%`;\n  }\n\n  /** 设置已播放进度条位置 */\n  public setBuffered(time: number) {\n    // 计算进度比值\n    const per = time / this.player.duration || 0;\n    // 修改滑动痕迹宽度\n    this.$buffered.style.width = `${per * 100}%`;\n  }\n\n  /** 设置进度条活跃状态 */\n  private setActive(flag: boolean) {\n    this.isActive = flag;\n    this.$el.classList.toggle(`${classPrefix}-progress-active`, flag);\n    if (flag) {\n      this.player.controlled = true;\n    } else {\n      this.player.controlled = false;\n    }\n  }\n\n  /** 更新指针位置 */\n  public updateTip() {\n    if (!this.isActive) this.setActive(true);\n    let per = this.distance / this.trackLength;\n    per = per >= 1 ? 1 : per <= 0 ? 0 : per;\n    this.$tip.style.left = `${per * 100}%`;\n    this.$preview.style.left = `${per * 100}%`;\n    this.$time.innerText = secondToTime(this.nValue);\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Checkbox, Picker } from \"@/components\";\nimport { html, render } from \"lit-html\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    settings?: Settings;\n  }\n}\n\nconst template = html`\n  <div class=\"${classPrefix}-settings\">\n    <div class=\"${classPrefix}-settings-slot\">\n      <div class=\"${classPrefix}-panel-row\">\n        <div class=\"${classPrefix}-row-label\">播放倍速</div>\n        <div class=\"${classPrefix}-settings-rate-picker\"></div>\n      </div>\n      <div class=\"${classPrefix}-panel-row\">\n        <div class=\"${classPrefix}-row-label\">视频比例</div>\n        <div class=\"${classPrefix}-settings-ratio-picker\"></div>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-panel-row\">\n      <div class=\"${classPrefix}-row-label\">播放方式</div>\n      <div class=\"${classPrefix}-settings-play\"></div>\n    </div>\n    <div class=\"${classPrefix}-panel-row\">\n      <div class=\"${classPrefix}-row-label\">其他设置</div>\n      <div class=\"${classPrefix}-settings-others\"></div>\n    </div>\n  </div>\n`;\n\nexport default class Settings extends BasePlugin {\n  static pluginName = \"settings\";\n\n  $el: HTMLElement;\n  $slot: HTMLElement;\n  $play: HTMLElement;\n  $others: HTMLElement;\n\n  $ratePicker: HTMLElement;\n  $ratioPicker: HTMLElement;\n\n  pickerRate!: Picker;\n  pickerRatio!: Picker;\n  toggleAutoplay!: Checkbox;\n  toggleAutopart!: Checkbox;\n\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    this.$el = fragment.querySelector(`.${classPrefix}-settings`)!;\n    this.$slot = this.$el.querySelector(`.${classPrefix}-settings-slot`)!;\n    this.$play = this.$el.querySelector(`.${classPrefix}-settings-play`)!;\n    this.$others = this.$el.querySelector(`.${classPrefix}-settings-others`)!;\n\n    this.$ratePicker = this.$el.querySelector(`.${classPrefix}-settings-rate-picker`)!;\n    this.$ratioPicker = this.$el.querySelector(`.${classPrefix}-settings-ratio-picker`)!;\n  }\n  created(options: PlayerOptions) {\n    this.pickerRate = new Picker({\n      container: this.$ratePicker,\n      list: [\n        { value: 0.5, label: \"0.5\" },\n        { value: 0.75, label: \"0.75\" },\n        { value: 1, label: \"1.0\" },\n        { value: 1.25, label: \"1.25\" },\n        { value: 1.5, label: \"1.5\" },\n        { value: 2, label: \"2.0\" },\n      ],\n      value: options.playbackRate || 1,\n      onPick: (value) => {\n        this.player.setPlaybackRate(Number(value));\n      },\n    });\n    this.player.on(\"ratechange\", (rate: number) => {\n      this.pickerRate.setValue(rate);\n    });\n\n    this.pickerRatio = new Picker({\n      container: this.$ratioPicker,\n      list: [{ value: \"\", label: \"自动\" }, { value: \"16:9\" }, { value: \"4:3\" }],\n      value: options.aspectRatio ? options.aspectRatio.join(\":\") : \"\",\n      onPick: (value) => {\n        this.player.setRatio(\n          value ? ((value as string).split(\":\").map((v) => Number(v)) as [number, number]) : null\n        );\n      },\n    });\n    this.player.watch(\"aspectRatio\", (ratio) => {\n      this.pickerRatio.setValue(ratio ? ratio.join(\":\") : \"\");\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    sources?: Sources;\n  }\n  export interface VideoInfo {\n    /** 视频源列表 */\n    sources?: VideoSource[];\n  }\n}\n\nexport interface VideoSource {\n  url: string;\n  type?: string;\n}\n\nexport default class Sources extends BasePlugin {\n  static pluginName = \"sources\";\n  created() {\n    this.player.hook.register(\"setVideo\", (info) => {\n      if (!info.url) {\n        const source = info.sources?.[0];\n        if (source) {\n          info.url = source.url;\n          info.type = source.type;\n        }\n      }\n    });\n  }\n  /** 设置视频源 */\n  set(v: VideoSource) {\n    this.player.switchVideo({ url: v.url, type: v.type });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { BasePlugin, PanelPlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-side-mask\"></div>\n  <div class=\"${classPrefix}-side\">\n    <div class=\"${classPrefix}-side-head\">\n      <div class=\"${classPrefix}-side-title\"></div>\n      <div class=\"${classPrefix}-side-close\">\n        <i class=\"mpicon-close\"></i>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-side-content\"></div>\n  </div>\n`;\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    side?: Side;\n  }\n}\n\nexport default class Side extends BasePlugin {\n  static readonly pluginName = \"side\";\n  container: HTMLElement;\n  $el: HTMLElement;\n  $mask: HTMLElement;\n  $content: HTMLElement;\n  $title: HTMLElement;\n  $close: HTMLElement;\n  current: PanelPlugin | null = null;\n  get isShow(): boolean {\n    return this.container.classList.contains(\"state-show\");\n  }\n\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.container = createElement(\"div\", { class: `${classPrefix}-side-wrap` });\n    render(template(), this.container);\n    this.$el = this.container.querySelector(`.${classPrefix}-side`)!;\n    this.$mask = this.container.querySelector(`.${classPrefix}-side-mask`)!;\n    this.$content = this.$el.querySelector(`.${classPrefix}-side-content`)!;\n    this.$title = this.$el.querySelector(`.${classPrefix}-side-title`)!;\n    this.$close = this.$el.querySelector(`.${classPrefix}-side-close`)!;\n\n    this.player.$main.appendChild(this.container);\n  }\n  created() {\n    // --- 事件 --- //\n    this.$mask.addEventListener(\"click\", () => {\n      this.hide();\n    });\n    this.$close.addEventListener(\"click\", () => {\n      this.hide();\n    });\n  }\n\n  hide() {\n    this.current?.toggle(false);\n  }\n\n  mount(panel: PanelPlugin) {\n    panel.mount(this.$content, (flag) => {\n      if (flag) {\n        this.current?.toggle(false);\n        for (const a of this.$content.children) {\n          a.classList.toggle(\"state-show\", a == panel.$el);\n        }\n        this.container.classList.add(\"state-show\");\n        this.$title.innerText = panel.title;\n        this.current = panel;\n      } else {\n        if (this.current == panel) {\n          this.container.classList.remove(\"state-show\");\n          panel.$el.classList.remove(\"state-show\");\n          this.$title.innerText = \"\";\n          this.current = null;\n        }\n      }\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    pip?: Pip;\n  }\n  interface PlayerEventMap {\n    /** 进入画中画模式 */\n    \"pip:enter\": () => void;\n    /** 退出画中画模式 */\n    \"pip:exit\": () => void;\n  }\n}\n\nexport default class Pip extends BasePlugin {\n  static pluginName = \"pip\";\n\n  constructor(player: Player) {\n    super(player);\n\n    this.player.on(\"enterpictureinpicture\", () => {\n      this.player.$el.classList.add(\"state-pip\");\n      this.player.emit(\"pip:enter\");\n    });\n    this.player.on(\"leavepictureinpicture\", () => {\n      this.player.$el.classList.remove(\"state-pip\");\n      this.player.emit(\"pip:exit\");\n    });\n    // 进入画中画时，退出全屏模式\n    this.player.on(\"pip:enter\", () => {\n      this.plugin.fullscreen?.exit();\n    });\n    // 进入全屏时，退出画中画模式\n    this.player.on(\"fullscreen:enter\", () => {\n      this.exit();\n    });\n  }\n\n  /** 进入画中画模式 */\n  enter() {\n    if (this.status) return;\n    this.player.$video.requestPictureInPicture();\n  }\n\n  /** 退出画中画模式 */\n  exit() {\n    if (!this.status) return;\n    document.exitPictureInPicture();\n  }\n\n  /** 是否已进入画中画模式 */\n  get status(): boolean {\n    return !!(document.pictureInPictureElement == this.player.$video);\n  }\n}\n","import Player from \"@/player\";\nimport { getFullscreenElement } from \"@/utils\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    fullscreen?: Fullscreen;\n  }\n  interface PlayerEventMap {\n    /** 进入全屏模式 */\n    \"fullscreen:enter\": () => void;\n    /** 退出全屏模式 */\n    \"fullscreen:exit\": () => void;\n  }\n}\n\nexport default class Fullscreen {\n  static pluginName = \"fullscreen\";\n\n  player: Player;\n\n  $el: HTMLElement;\n\n  constructor(player: Player) {\n    this.player = player;\n    this.$el = this.player.$main;\n\n    const fullScreenChangeHandler = () => {\n      if (this.status) {\n        this.player.$el.classList.add(\"state-fullscreen\");\n        this.player.emit(\"fullscreen:enter\");\n      } else {\n        this.player.$el.classList.remove(\"state-fullscreen\");\n        this.player.emit(\"fullscreen:exit\");\n      }\n    };\n    this.$el.addEventListener(\"fullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"webkitfullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"mozfullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"msfullscreenchange\", fullScreenChangeHandler);\n  }\n\n  /** 进入全屏模式 */\n  enter() {\n    if (this.status) return;\n    const el: any = this.$el;\n    if (el.requestFullscreen) {\n      el.requestFullscreen();\n    } else if (el.mozRequestFullScreen) {\n      el.mozRequestFullScreen();\n    } else if (el.webkitRequestFullscreen) {\n      el.webkitRequestFullscreen();\n    } else if (el.webkitEnterFullscreen) {\n      // Safari for iOS\n      el.webkitEnterFullscreen();\n    } else if (el.webkitEnterFullScreen) {\n      el.webkitEnterFullScreen();\n    } else if (el.msRequestFullscreen) {\n      el.msRequestFullscreen();\n    }\n  }\n\n  /** 退出全屏模式 */\n  exit() {\n    if (!this.status) return;\n    const doc: any = document;\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if (doc.webkitExitFullscreen) {\n      doc.webkitExitFullscreen();\n    } else if (doc.webkitExitFullScreen) {\n      doc.webkitExitFullScreen();\n    } else if ((this.$el as any).msExitFullscreen!) {\n      (this.$el as any).msExitFullscreen();\n    }\n  }\n\n  /** 是否处于全屏模式 */\n  get status(): boolean {\n    return !!(getFullscreenElement() == this.$el);\n  }\n}\n","import ContextMenu from \"@/plugins/contextMenu\";\nimport Controller from \"@/plugins/ui/controller\";\nimport {\n  ButtonPlay,\n  ButtonPrev,\n  ButtonNext,\n  LabelTime,\n  ButtonLoop,\n  ButtonPart,\n  ButtonVolume,\n  ButtonSettings,\n  ButtonPip,\n  ButtonFullscreen,\n} from \"@/plugins/controls\";\nimport Hotkey from \"@/plugins/hotkey\";\nimport Modal from \"@/plugins/ui/modal\";\nimport Progress from \"@/plugins/progress\";\nimport Settings from \"@/plugins/settings\";\nimport { PlayerOptions } from \"@/types\";\nimport Sources from \"@/plugins/core/sources\";\nimport Side from \"@/plugins/ui/side\";\nimport Pip from \"@/plugins/screen/pip\";\nimport Fullscreen from \"@/plugins/screen/fullscreen\";\n\n/** 核心插件 */\nexport const corePlugins = [Sources, Pip, Fullscreen];\n\n/** 基础插件 */\nexport const basicPlugins = [Modal, Side, Controller, Settings, Hotkey, ContextMenu];\n\n/** 基础控件 */\nexport const basicControls = [\n  Progress,\n  ButtonPlay,\n  ButtonPrev,\n  ButtonNext,\n  LabelTime,\n  ButtonLoop,\n  ButtonPart,\n  ButtonVolume,\n  ButtonSettings,\n  ButtonPip,\n  ButtonFullscreen,\n];\n\nexport function presetBasic(config: PlayerOptions): PlayerOptions {\n  return {\n    ...config,\n    plugins: [...corePlugins, ...basicPlugins, ...basicControls, ...(config.plugins || [])],\n  };\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Checkbox } from \"@/components\";\n\ndeclare module \"@/types\" {\n  interface PlayerPropertyMap {\n    /** 分P连播 */\n    autoPart: boolean;\n  }\n  interface PlayerOptions {\n    /** 分P连播 */\n    autoPart?: boolean;\n  }\n}\n\n/** 自动切换下一P */\n\nexport default class AutoPart extends BasePlugin {\n  static pluginName = \"autoPart\";\n  private _status = false;\n  protected checkbox?: Checkbox;\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    if (options.autoPart) this.toggle(true);\n    this.player.hook.register(\"end\", () => {\n      if (this.status) {\n        if (this.player.videoInfo.part != this.player.videoInfo.list?.length) {\n          this.player.next();\n          return false;\n        }\n      }\n    });\n  }\n  pluginsReady() {\n    if (this.plugin.settings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.status,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"分P连播\",\n      });\n      this.plugin.settings.$play.appendChild(container);\n    }\n  }\n  toggle(v: boolean) {\n    if (v) {\n      this._status = true;\n    } else {\n      this._status = false;\n    }\n    this.player.emitChange(\"autoPart\", v);\n  }\n  get status() {\n    return this._status;\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Checkbox } from \"@/components\";\n\ndeclare module \"@/types\" {\n  interface PlayerPropertyMap {\n    /** 自动播放 */\n    autoPlay: boolean;\n  }\n}\n\n/** 启用自动播放设置 */\n\nexport default class AutoPlay extends BasePlugin {\n  static pluginName = \"autoPlay\";\n  private _status = false;\n  protected checkbox?: Checkbox;\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    if (options.autoPlay) this.toggle(true);\n  }\n  pluginsReady() {\n    if (this.plugin.settings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.status,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"自动播放\",\n      });\n      this.plugin.settings.$play.appendChild(container);\n    }\n  }\n  toggle(v: boolean) {\n    if (v) {\n      this._status = true;\n    } else {\n      this._status = false;\n    }\n    this.player.emitChange(\"autoPlay\", v);\n  }\n  get status() {\n    return this._status;\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Checkbox } from \"@/components\";\n\ndeclare module \"@/types\" {\n  interface PlayerPropertyMap {\n    /** 跳转到上次播放位置 */\n    seekLast: boolean;\n  }\n  interface PlayerOptions {\n    /** 跳转到上次播放位置 */\n    seekLast?: boolean;\n    /** 上次播放的时间点(秒)，若存在time选项则此项失效 */\n    lastPosition?: number;\n  }\n}\n\n/** 跳转到上次播放位置 */\n\nexport default class SeekLast extends BasePlugin {\n  static pluginName = \"seekLast\";\n  private _status = false;\n  protected checkbox?: Checkbox;\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    if (options.seekLast) {\n      this.toggle(true);\n      this.player.once(\"loadedmetadata\", () => {\n        console.log(`ok: ${options.time} ${options.lastPosition}`);\n        !options.time && options.lastPosition && this.player.seek(Math.floor(options.lastPosition));\n        options.autoPlay && this.player.play();\n      });\n    }\n  }\n\n  pluginsReady() {\n    if (this.plugin.settings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.status,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"断点续播\",\n      });\n      this.plugin.settings.$play.appendChild(container);\n    }\n  }\n\n  toggle(v: boolean) {\n    if (v) {\n      this._status = true;\n    } else {\n      this._status = false;\n    }\n    this.player.emitChange(\"seekLast\", v);\n  }\n  get status() {\n    return this._status;\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst themeOptionsVars = {\n  primaryColor: \"--mp-primary-color\",\n  secondaryColor: \"--mp-secondary-color\",\n  borderRadius: \"--mp-border-radius\",\n  bgLight: \"--mp-bg-light\",\n  bgDark: \"--mp-bg-dark\",\n  bgBlack: \"--mp-bg-black\",\n};\n\nexport type ThemeOptions = Partial<Record<keyof typeof themeOptionsVars, string>>;\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    theme?: Theme;\n  }\n  interface PlayerOptions {\n    theme?: ThemeOptions;\n    /** 颜色模式 */\n    colorScheme?: ThemeColorScheme;\n  }\n}\n\nexport type ThemeColorScheme = \"light\" | \"dark\" | \"auto\";\n\nexport default class Theme extends BasePlugin {\n  static pluginName = \"theme\";\n  private properties: ThemeOptions = {};\n  /** 绑定了主题变量的DOM元素 */\n  private themeElement: HTMLElement[];\n  /** 匹配暗黑模式 */\n  private _matchDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  private _handleDarkScheme: (e: MediaQueryListEvent) => void;\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.themeElement = [this.player.container];\n    this.setTheme(options.theme || {});\n    this._handleDarkScheme = (e) => {\n      this.player.$el.classList.toggle(\"mpui-dark\", e.matches);\n    };\n  }\n  /** 设置主题 */\n  setTheme(theme: ThemeOptions) {\n    Object.assign(this.properties, theme);\n    this.themeElement.forEach((el) => {\n      let name: keyof ThemeOptions;\n      for (name in theme) {\n        el.style.setProperty(themeOptionsVars[name], theme[name]!);\n      }\n    });\n  }\n  /** 设置某个主题属性 */\n  set(name: keyof ThemeOptions, value: string) {\n    this.properties[name] = value;\n    this.themeElement.forEach((el) => {\n      el.style.setProperty(themeOptionsVars[name], value);\n    });\n  }\n  get(name: keyof ThemeOptions) {\n    return this.properties[name];\n  }\n  /** 为元素绑定主题变量 */\n  public bind(el: HTMLElement) {\n    this.themeElement.push(el);\n    let name: keyof typeof themeOptionsVars;\n    for (name in this.properties) {\n      const value = this.properties[name];\n      value && el.style.setProperty(themeOptionsVars[name], value);\n    }\n  }\n  setColorScheme(scheme: ThemeColorScheme) {\n    this.player.$el.classList.toggle(\"mpui-dark\", scheme == \"dark\");\n    if (scheme == \"auto\") {\n      this._matchDarkScheme.addEventListener(\"change\", this._handleDarkScheme);\n    } else {\n      this._matchDarkScheme.removeEventListener(\"change\", this._handleDarkScheme);\n    }\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    part?: Part;\n  }\n\n  export interface VideoInfo {\n    /** 视频分P列表 */\n    list?: Omit<VideoInfo, \"list\" | \"part\">[];\n    /** 要播放的分P */\n    part?: number;\n  }\n}\n\nexport default class Part extends BasePlugin {\n  static pluginName = \"part\";\n  constructor(player: Player) {\n    super(player);\n  }\n  created() {\n    this.player.hook.register(\n      \"setVideo\",\n      (info) => {\n        // 如果视频信息中存在list，且没有url或者sources，则设置part\n        if (info.list && !info.url && !info.sources) {\n          info.part ||= 1;\n          Object.assign(info, info.list[info.part - 1]);\n        }\n      },\n      true\n    );\n    this.player.hook.register(\"next\", () => {\n      // 如果视频信息中有list，且part<list.length，则设置下一P\n      if (this.list && this.part! < this.num) {\n        this.set(this.part + 1);\n        return false;\n      }\n    });\n    this.player.hook.register(\"prev\", () => {\n      // 如果视频信息中有list，且part>1，则设置上一P\n      if (this.list && this.part! > 1) {\n        this.set(this.part - 1);\n        return false;\n      }\n    });\n    this.player.hook.register(\"hasNext\", () => (this.list && this.part! < this.num) || void 0);\n    this.player.hook.register(\"hasPrev\", () => (this.list && this.part! > 1) || void 0);\n  }\n  /** 设置分P */\n  set(p: number, play?: boolean) {\n    const info = this.player.videoInfo;\n    if (p > 0 && p <= (info.list?.length || 0)) {\n      this.player.setVideo(\n        {\n          ...info,\n          url: void 0,\n          type: void 0,\n          sources: void 0,\n          ...info.list![p - 1],\n          part: p,\n        },\n        play ?? !this.player.paused\n      );\n    }\n  }\n  get num() {\n    return this.player.videoInfo.list?.length || 0;\n  }\n  get list() {\n    return this.player.videoInfo.list || [];\n  }\n  get part() {\n    return this.player.videoInfo.part || 1;\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { LoadInfo, PlayerOptions } from \"@/types\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    seamless?: Seamless;\n  }\n}\n\nexport default class Seamless extends BasePlugin {\n  static pluginName = \"seamless\";\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n  }\n  /** 无缝加载视频 */\n  load(info: LoadInfo) {\n    this.player.emit(\"video_load\", info);\n    const { url, type, play, time } = info;\n    const oldVideo = this.player.$video;\n    const video = oldVideo.cloneNode() as HTMLVideoElement;\n    video.src = url;\n    video.addEventListener(\n      \"loadedmetadata\",\n      () => {\n        this.player.$content.insertBefore(video, oldVideo);\n        video.currentTime = this.player.time;\n        !this.player.paused && video.play();\n        video.addEventListener(\n          \"canplay\",\n          () => {\n            this.player.emit(\"video_load\", info);\n            this.plugin.pip?.status && video.requestPictureInPicture();\n            this.player.bindVideo(video);\n            oldVideo.remove();\n            play == true && this.player.paused && this.player.play();\n            play == false && !this.player.paused && this.player.pause();\n            time != null && this.player.seek(time);\n          },\n          { once: true }\n        );\n      },\n      { once: true }\n    );\n  }\n  pluginsReady() {\n    this.player.hook.register(\"switchVideo\", (ctx) => {\n      this.load(ctx);\n      return false;\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { PlayerOptions, VideoInfo } from \"@/types\";\nimport { PanelPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-partlist\">\n    <ul class=\"${classPrefix}-partlist-list mpui-list\"></ul>\n  </div>\n`;\n\nconst templateList = (list: Omit<VideoInfo, \"list\" | \"part\">[], setPart: (p: number) => void) =>\n  list.map(\n    ({ title }, index) => html`\n      <li\n        class=\"${classPrefix}-partlist-item\"\n        @click=${() => {\n          setPart(index + 1);\n        }}\n        data-part=\"${index + 1}\"\n      >\n        <div class=\"${classPrefix}-partlist-item-id\">P${index + 1}</div>\n        <div class=\"${classPrefix}-partlist-item-title\">${title}</div>\n      </li>\n    `\n  );\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    partList?: PartList;\n  }\n}\n\nexport default class PartList extends PanelPlugin {\n  static pluginName = \"partList\";\n  title = \"分P列表\";\n  $list: HTMLElement;\n  private _part = 0;\n  private _list: VideoInfo[\"list\"] = [];\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"partList\",\n      el: fragment.querySelector(`.${classPrefix}-partlist`)!,\n      defaultOptions: {\n        mount: (p) => p.plugin.side,\n      },\n    });\n    this.$list = this.$(`.${classPrefix}-partlist-list`)!;\n  }\n  created() {\n    this.player.on(\"video_change\", (v) => {\n      this._update(v.list);\n      this._select(v.part || 1);\n    });\n  }\n  private _update(list: VideoInfo[\"list\"]) {\n    if (list == this._list) return;\n    this._list = list;\n    render(\n      templateList(list || [], (p) => {\n        this.plugin.part?.set(p);\n      }),\n      this.$list\n    );\n  }\n  private _select(p: number) {\n    this.$list.querySelector(`li[data-part=\"${this._part}\"]`)?.classList.remove(\"state-selected\");\n    this._part = p;\n    this.$list.querySelector(`li[data-part=\"${p}\"]`)?.classList.add(\"state-selected\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_danmakulist\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <div class=\"${classPrefix}-controls-button-text\">弹幕列表</div>\n    </div>\n    <div class=\"mpui-tooltip\">弹幕列表</div>\n  </div>\n`;\n\nexport default class ButtonDanmakulist extends ControlsPlugin {\n  static pluginName = \"buttonDanmakuList\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n  $text: HTMLElement;\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonDanmakuList\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$text = this.$(`.${classPrefix}-controls-button-text`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  created() {\n    this.$icon.addEventListener(\"click\", () => {\n      this.plugin.danmakuList?.toggle();\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { VideoSource } from \"@/plugins/core/sources\";\nimport { PlayerOptions } from \"@/types\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    quality?: Quality;\n  }\n  export interface VideoInfo {\n    /** 视频源列表 */\n    sources?: VideoSource[];\n  }\n  export interface PlayerPropertyMap {\n    quality: string;\n  }\n}\n\ndeclare module \"@/plugins/core/sources\" {\n  interface VideoSource {\n    url: string;\n    type?: string;\n    label?: string;\n    quality?: string;\n  }\n}\n\nexport default class Quality extends BasePlugin {\n  static pluginName = \"quality\";\n  value = \"\";\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n  }\n  created() {\n    this.player.hook.register(\"setVideo\", (info) => {\n      if (!info.url && info.sources) {\n        const source = info.sources[0];\n        info.url = source.url;\n        info.type = source.type;\n      }\n    });\n  }\n  /** 切换视频质量\n   */\n  async set(quality: string) {\n    const sources = this.player.videoInfo.sources;\n    if (!sources) return;\n    let source = sources.find((src) => src.quality == quality);\n    if (!source) source = this.findSourceByQuality(sources, quality);\n    this.player.switchVideo(source);\n    this.player.emitChange(\"quality\", source.quality || \"\");\n  }\n\n  /** 根据视频质量选择合适的视频源\n   * 返回小于等于该质量的视频源中最大的一个\n   */\n  private findSourceByQuality(sourceList: VideoSource[], quality: string) {\n    // 视频质量从高到低排序\n    const sortedSources: VideoSource[] = [...sourceList].sort(\n      (a, b) => parseInt(b.quality || \"\") - parseInt(a.quality || \"\")\n    );\n    // 从前向后找，找到小于等于该分辨率的即可\n    let source = sortedSources.find((src) => parseInt(src.quality || \"\") <= parseInt(quality));\n    if (!source) {\n      source = sortedSources[sortedSources.length - 1];\n    }\n    return source;\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { VideoSource } from \"@/plugins/core/sources\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button_quality\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <div class=\"${classPrefix}-controls-button-text\">自动</div>\n    </div>\n\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel\">\n        <ul class=\"${classPrefix}-button_quality-list\"></ul>\n      </div>\n    </div>\n  </div>\n`;\n\nconst templateList = (\n  sources: { quality: string; label?: string }[] | undefined,\n  onClick: (quality: string) => void\n) =>\n  sources?.map(\n    ({ quality, label }) =>\n      html`\n        <li\n          class=\"${classPrefix}-button_quality-item\"\n          @click=${() => {\n            onClick(quality);\n          }}\n          data-value=\"${quality}\"\n        >\n          <span class=\"${classPrefix}-button_quality-item-label\">${label || quality}</span>\n        </li>\n      `\n  );\n\nexport default class ButtonQuality extends ControlsPlugin {\n  static pluginName = \"buttonQuality\";\n  $icon: HTMLElement;\n  $text: HTMLElement;\n  $panel: HTMLElement;\n\n  $list: HTMLElement;\n\n  private _list?: VideoSource[];\n  private _value = \"\";\n\n  constructor(player: Player, options: PlayerOptions) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, options, {\n      name: \"buttonQuality\",\n      defaultOptions: {\n        container: (p) => p.plugin.controller?.$right,\n      },\n      el: fragment.querySelector(`.${classPrefix}-controls-button`)!,\n    });\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$text = this.$(`.${classPrefix}-controls-button-text`)!;\n    this.$panel = this.$(`.${classPrefix}-controls-panel`)!;\n\n    this.$list = this.$(`.${classPrefix}-button_quality-list`)!;\n  }\n\n  created() {\n    this.player.on(\"video_change\", (v) => {\n      this._update(v.sources);\n    });\n    this.player.on(\"video_load\", (info) => {\n      const s = this.player.videoInfo.sources?.find(({ url }) => url == info.url);\n      if (s?.quality) {\n        this._select(s?.quality, s.label);\n      } else {\n        this.player.once(\"loadedmetadata\", () => {\n          const { videoWidth, videoHeight } = this.player.$video;\n          this._select(`${Math.min(videoWidth, videoHeight)}P`);\n        });\n      }\n    });\n  }\n\n  private _update(sources?: VideoSource[]) {\n    if (sources && sources == this._list) return;\n    const list: { quality: string; label?: string }[] = [];\n    sources?.forEach(({ quality, label }) => {\n      if (quality && !list.find((s) => s.quality == quality)) {\n        list.push({ quality, label });\n      }\n    });\n    if (!list.length) {\n      this.player.once(\"loadedmetadata\", () => {\n        const { videoWidth, videoHeight } = this.player.$video;\n        render(\n          templateList([{ quality: `${Math.min(videoWidth, videoHeight)}P` }], (q) => {\n            this.plugin.quality?.set(q);\n          }),\n          this.$list\n        );\n      });\n    } else {\n      console.log(\"mmmmmmmm\");\n      render(\n        templateList(list, (q) => {\n          this.plugin.quality?.set(q);\n        }),\n        this.$list\n      );\n    }\n    this._list = sources;\n  }\n  private _select(quality: string, label?: string) {\n    this.$list.querySelector(`li[data-value=\"${this._value}\"]`)?.classList.remove(\"state-selected\");\n    this._value = quality;\n    this.$list.querySelector(`li[data-value=\"${quality}\"]`)?.classList.add(\"state-selected\");\n    this.$text.innerText = label || quality;\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { createElement } from \"@/utils\";\nimport MfunsPlayer from \"@/player\";\nimport { html, render } from \"lit-html\";\n\nconst template = html`\n  <div class=\"${classPrefix}-videostatus-paused\"></div>\n  <div class=\"${classPrefix}-videostatus-loading\">\n    <div class=\"${classPrefix}-videostatus-loading-icon\">\n      <span>L</span>\n      <span>O</span>\n      <span>A</span>\n      <span>D</span>\n      <span>I</span>\n      <span>N</span>\n      <span>G</span>\n    </div>\n    <div class=\"${classPrefix}-videostatus-loading-content\">正在缓冲</div>\n    <div class=\"${classPrefix}-videostatus-loading-speed\"></div>\n  </div>\n  <div class=\"${classPrefix}-videostatus-volume\"></div>\n`;\n\nexport default class VideoStatus extends BasePlugin {\n  static pluginName = \"videoStatus\";\n  $el: HTMLElement;\n  $paused: HTMLElement;\n  $loading: HTMLElement;\n  $volume: HTMLElement;\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    super(player);\n    this.$el = createElement(\"div\", { class: `${classPrefix}-videostatus` });\n    render(template, this.$el);\n    this.$paused = this.$el.querySelector(`.${classPrefix}-videostatus-paused`)!;\n    this.$loading = this.$el.querySelector(`.${classPrefix}-videostatus-loading`)!;\n    this.$volume = this.$el.querySelector(`.${classPrefix}-videostatus-volume`)!;\n\n    this.player.$area.appendChild(this.$el);\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { createElement } from \"@/utils\";\nimport MfunsPlayer from \"@/player\";\nimport { html, render } from \"lit-html\";\n\ndeclare module \"@/types\" {\n  interface PlayerOptions {\n    loadingMask?: {\n      delay?: number;\n      getTips?: () => Promise<string | Node>;\n    };\n  }\n}\n\nconst template = html`\n  <div class=\"${classPrefix}-loadingmask-icon\">\n    <div class=\"${classPrefix}-loadingmask-image\"></div>\n  </div>\n  <div class=\"${classPrefix}-loadingmask-info\"></div>\n  <div class=\"${classPrefix}-loadingmask-tips\">Loading...</div>\n`;\n\nexport default class LoadingMask extends BasePlugin {\n  static pluginName = \"loadingMask\";\n  $el: HTMLElement;\n  $info: HTMLElement;\n  $tips: HTMLElement;\n  getTips?: () => Promise<string | Node>;\n  delay: number;\n\n  constructor(player: MfunsPlayer, options: PlayerOptions) {\n    super(player);\n    this.$el = createElement(\"div\", { class: `${classPrefix}-loadingmask` });\n    render(template, this.$el);\n    this.$info = this.$el.querySelector(`.${classPrefix}-loadingmask-info`)!;\n    this.$tips = this.$el.querySelector(`.${classPrefix}-loadingmask-tips`)!;\n\n    this.getTips = options.loadingMask?.getTips;\n    this.delay = options.loadingMask?.delay || 0;\n    this.player.$main.appendChild(this.$el);\n    /* if (!this.api?.loadingTips) {\n      this.$tips.style.display = \"none\";\n    } */\n  }\n  created() {\n    this._toggle(true);\n    this._add(\"init\", \"播放器初始化…\");\n    this.player.on(\"danmaku:loading\", () => {\n      this._add(\"danmaku\", \"请求弹幕数据中…\");\n    });\n    this.player.on(\"danmaku:loaded\", (dan, err) => {\n      this._change(\"danmaku\", (line) => {\n        if (!err) {\n          line.innerText = \"请求弹幕数据中… [完成]\";\n        } else {\n          line.innerText = `请求弹幕数据中… [失败] ${err}`;\n        }\n      });\n    });\n    this.player.on(\"video_change\", async () => {\n      this._toggle(true);\n      this._tips(await this.getTips?.());\n    });\n    this.player.on(\"video_load\", () => {\n      this._add(\"video\", \"请求视频数据中…\");\n\n      this.player.once(\"canplay\", () => {\n        this._change(\"video\", (line) => {\n          line.innerText = \"请求视频数据中… [完成]\";\n          let timer = 0;\n          const handler = () => {\n            this._toggle(false);\n            this._tips(\"Loading...\");\n            this._clear();\n            window.clearTimeout(timer);\n          };\n          if (this.delay) {\n            timer = window.setTimeout(handler, this.delay);\n          } else {\n            handler();\n          }\n        });\n      });\n      this.player.$video.addEventListener(\n        \"error\",\n        (err) => {\n          this._change(\"video\", (line) => {\n            line.innerText = `请求视频数据中… [失败] ${err}`;\n          });\n        },\n        { once: true }\n      );\n    });\n    this.player.on(\"error\", (err) => {\n      this._add(\"error\", `${err}`);\n    });\n  }\n  pluginsReady() {\n    this._change(\"init\", (line) => {\n      line.innerText = \"播放器初始化… [完成]\";\n    });\n  }\n  private _clear() {\n    this.$info.innerHTML = \"\";\n  }\n  private _add(id: string, content: string | Node) {\n    const item = createElement(\"div\", { class: `${classPrefix}-loadingmask-info-item` });\n    item.dataset.id = id;\n    item.append(content);\n    this.$info.appendChild(item);\n  }\n  private _change(id: string, func: (line: HTMLElement) => void) {\n    const item: HTMLElement | null = this.$info.querySelector(`[data-id=\"${id}\"]`);\n    item && func(item);\n  }\n  private _toggle(flag: boolean) {\n    this.$el.classList.toggle(\"state-show\", flag);\n  }\n  private _tips(content?: string | Node) {\n    this.$tips.innerHTML = \"\";\n    content && this.$tips.append(content);\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { createElement } from \"@/utils\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nexport default class VideoTitle extends ControlsPlugin {\n  static pluginName = \"videoTitle\";\n\n  constructor(player: Player, options: PlayerOptions) {\n    super(player, options, {\n      name: \"videoTitle\",\n      defaultOptions: {\n        container: (p) => p.plugin.header?.$left,\n        order: 0,\n      },\n      el: createElement(\"div\", { class: `${classPrefix}-videotitle` }),\n    });\n  }\n\n  created() {\n    this.player.on(\"video_change\", (info) => {\n      console.log(info.title);\n      this.$el.innerText = info.title || \"\";\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\n\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-header-mask\"></div>\n  <div class=\"${classPrefix}-header-main mpui-crystal\">\n    <div class=\"${classPrefix}-header-left\"></div>\n    <div class=\"${classPrefix}-header-center\"></div>\n    <div class=\"${classPrefix}-header-right\"></div>\n  </div>\n`;\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    header?: Header;\n  }\n}\n\n/** 控制栏 */\nexport default class Header extends BasePlugin {\n  static pluginName = \"header\";\n  player: Player;\n  $el: HTMLElement;\n  $main: HTMLElement;\n  $left: HTMLElement;\n  $center: HTMLElement;\n  $right: HTMLElement;\n\n  isHover = false;\n\n  protected inactiveHook: () => boolean;\n  protected mouseEnterHandler: () => void;\n  protected mouseLeaveHandler: () => void;\n\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.player = player;\n    this.$el = createElement(\"div\", { class: `${classPrefix}-header` });\n    render(template(), this.$el);\n    this.$main = this.$el.querySelector(`.${classPrefix}-header-main`)!;\n    this.$left = this.$el.querySelector(`.${classPrefix}-header-left`)!;\n    this.$center = this.$el.querySelector(`.${classPrefix}-header-center`)!;\n    this.$right = this.$el.querySelector(`.${classPrefix}-header-right`)!;\n    this.player.$main.append(this.$el);\n\n    this.inactiveHook = () => !this.isHover;\n    this.mouseEnterHandler = () => {\n      this.isHover = true;\n    };\n    this.mouseLeaveHandler = () => {\n      this.isHover = false;\n    };\n  }\n  created(options: PlayerOptions) {\n    this.player.hook.register(\"inactive\", this.inactiveHook);\n    this.$el.addEventListener(\"mouseenter\", this.mouseEnterHandler);\n    this.$el.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\n  }\n  destroy() {\n    this.player.hook.unregister(\"inactive\", this.inactiveHook);\n    this.$el.removeEventListener(\"mouseenter\", this.mouseEnterHandler);\n    this.$el.removeEventListener(\"mouseleave\", this.mouseLeaveHandler);\n  }\n}\n","import { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\nimport { classPrefix } from \"@/config\";\nimport { Checkbox } from \"@/components\";\n\ndeclare module \"@/types\" {\n  interface PlayerOptions {\n    mini?: boolean;\n  }\n  interface PlayerPropertyMap {\n    mini: boolean;\n  }\n}\n\nexport default class Mini extends BasePlugin {\n  static readonly pluginName = \"mini\";\n  /** 播放器小窗显示状态 */\n  private _shown = false;\n  /** 播放器小窗拖动状态 */\n  private _dragging = false;\n  /** 播放器小窗启用状态 */\n  private _enabled = false;\n\n  $el: HTMLElement;\n  checkbox?: Checkbox;\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.$el = createElement(\"div\", { class: `${classPrefix}-mini` });\n    this.player.$el.appendChild(this.$el);\n    this.player.on(\"intersection\", (isIntersecting) => {\n      const disabled = !this._enabled || this.plugin.pip?.status;\n      if (isIntersecting) {\n        !disabled && this._hide();\n      } else {\n        !disabled && this._show();\n      }\n      console.log(isIntersecting);\n    });\n    if (player.plugin.buttonSettings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.enabled,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"小窗模式\",\n      });\n      player.plugin.settings?.$others.appendChild(container);\n      player.watch(\"mini\", (flag) => this.checkbox?.setValue(flag));\n    }\n    if (options.blackBorder) this.toggle(true);\n  }\n  created() {\n    this.$el.addEventListener(\"click\", () => {\n      !this._dragging && this.player.toggle();\n    });\n    // 拖动操作\n    this.$el.addEventListener(\"mousedown\", (e) => {\n      const { clientX, clientY } = e;\n      const { offsetLeft, offsetTop } = this.$el;\n      console.log([offsetLeft, offsetTop]);\n      const mLeft = clientX - offsetLeft;\n      const mTop = clientY - offsetTop;\n      const mousemoveHandler = (e: MouseEvent) => {\n        this._dragging = true;\n        const { clientX, clientY } = e;\n        this.$el.style.left = `${clientX - mLeft}px`;\n        this.$el.style.top = `${clientY - mTop}px`;\n      };\n      const mouseupHandler = () => {\n        this.$el.removeEventListener(\"mousemove\", mousemoveHandler);\n        document.removeEventListener(\"mouseup\", mouseupHandler);\n        requestAnimationFrame(() => {\n          this._dragging = false;\n        });\n      };\n      this.$el.addEventListener(\"mousemove\", mousemoveHandler);\n      document.addEventListener(\"mouseup\", mouseupHandler);\n    });\n\n    this.player.on(\"pip:enter\", () => this._hide());\n    this.player.on(\"pip:exit\", () => !this.player.intersecting && this._show());\n  }\n  pluginsReady(options: PlayerOptions) {\n    options.mini && this.toggle(true);\n  }\n  private _show() {\n    if (this._shown) return;\n    this.player.$area.style.height = `${this.player.$area.clientHeight}px`;\n    this.$el.append(...this.player.$area.children);\n    this.$el.classList.add(\"state-show\");\n    this._shown = true;\n  }\n  private _hide() {\n    if (!this._shown) return;\n    this.player.$area.style.height = \"\";\n    this.player.$area.append(...this.$el.children);\n    this.$el.classList.remove(\"state-show\");\n    this._shown = false;\n  }\n  /** 播放器小窗启用状态 */\n  get enabled() {\n    return this._enabled;\n  }\n  /** 播放器小窗显示状态 */\n  get shown() {\n    return this._shown;\n  }\n  toggle(flag: boolean) {\n    if (flag) {\n      if (this.enabled) return;\n      !this.player.intersecting && this._show();\n      this.player.emitChange(\"mini\", true);\n    } else {\n      if (!this.enabled) return;\n      this._hide();\n      this.player.emitChange(\"mini\", false);\n    }\n\n    this._enabled = flag;\n  }\n}\n","import { Checkbox } from \"@/components\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\nimport { classPrefix } from \"@/config\";\n\ndeclare module \"@/types\" {\n  interface PlayerPropertyMap {\n    /** 关灯模式 */\n    lightOff: boolean;\n  }\n}\n\nexport default class LightOff extends BasePlugin {\n  static pluginName: \"lightOff\";\n  status = false;\n  checkbox?: Checkbox;\n  $mask: HTMLElement;\n  constructor(player: Player, options: PlayerOptions) {\n    super(player);\n    this.$mask = createElement(\"div\", { class: `${classPrefix}-lightoff-mask` });\n    if (player.plugin.buttonSettings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.status,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"关灯模式\",\n      });\n      player.plugin.settings?.$others.appendChild(container);\n      player.watch(\"lightOff\", (flag) => this.checkbox?.setValue(flag));\n    }\n  }\n  pluginsReady() {\n    this.player.$el.append(this.$mask);\n  }\n  toggle(v: boolean) {\n    if (v) {\n      this.player.$el.classList.add(\"state-lightoff\");\n    } else {\n      this.player.$el.classList.remove(\"state-lightoff\");\n    }\n    this.player.emitChange(\"lightOff\", v);\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@/types\" {\n  interface PluginExports {\n    webscreen?: Webscreen;\n  }\n}\n\nexport default class Webscreen extends BasePlugin {\n  static pluginName = \"webscreen\";\n\n  constructor(player: Player) {\n    super(player);\n\n    // 进入网页全屏时，退出全屏模式\n    this.player.on(\"webscreen:enter\", () => {\n      this.plugin.fullscreen?.exit();\n    });\n    // 进入全屏时，退出网页全屏模式\n    this.player.on(\"fullscreen:enter\", () => {\n      this.exit();\n    });\n  }\n\n  /** 进入网页全屏 */\n  enter() {\n    if (this.status) return;\n    this.player.$el.classList.add(\"state-webscreen\");\n    this.player.emit(\"webscreen:enter\");\n  }\n\n  /** 退出网页全屏 */\n  exit() {\n    if (!this.status) return;\n    this.player.$el.classList.remove(\"state-webscreen\");\n    this.player.emit(\"webscreen:exit\");\n  }\n\n  /** 是否处于网页全屏模式 */\n  get status(): boolean {\n    return this.player.$el.classList.contains(\"state-webscreen\");\n  }\n}\n","import Player from \"@/index\";\nimport { PlayerOptions } from \"@/types\";\nimport DanmakuList from \"../plugins/danmakuList\";\nimport DanmakuBar from \"@/plugins/danmakuBar\";\nimport BlackBorder from \"@/plugins/blackBorder\";\nimport Danmaku from \"@/plugins/danmaku\";\nimport Widescreen from \"@/plugins/screen/widescreen\";\nimport { ButtonWebscreen, ButtonWidescreen } from \"@/plugins/controls\";\nimport ButtonDanmakuToggle from \"@/plugins/controls/button/ButtonDanmakuToggle\";\nimport ButtonDanmakuSettings from \"@/plugins/controls/button/ButtonDanmakuSettings\";\nimport About from \"@/plugins/panels/about\";\nimport Hotkeys from \"@/plugins/panels/hotkeys\";\nimport { presetBasic } from \"../plugins/presets\";\nimport AutoPart from \"@/plugins/playSettings/autoPart\";\nimport AutoPlay from \"@/plugins/playSettings/autoPlay\";\nimport SeekLast from \"@/plugins/playSettings/seekLast\";\nimport Theme from \"@/plugins/theme\";\nimport Part from \"@/plugins/part\";\nimport Seamless from \"@/plugins/seamless\";\nimport PartList from \"@/plugins/panels/partList\";\nimport ButtonDanmakulist from \"@/plugins/controls/button/ButtonDanmakulist\";\nimport Quality from \"@/plugins/quality\";\nimport ButtonQuality from \"@/plugins/controls/button/ButtonQuality\";\nimport VideoStatus from \"@/plugins/videoStatus\";\nimport LoadingMask from \"@/plugins/loadingMask\";\nimport VideoTitle from \"@/plugins/controls/videoTitle\";\nimport Header from \"@/plugins/ui/header\";\nimport Mini from \"@/plugins/mini\";\nimport LightOff from \"@/plugins/lightOff\";\nimport Webscreen from \"@/plugins/screen/webscreen\";\n\n/** 内置插件 */\nconst plugins = [\n  Header,\n  Part,\n  Seamless,\n  Danmaku,\n  DanmakuBar,\n  DanmakuList,\n  BlackBorder,\n  Webscreen,\n  Widescreen,\n  AutoPlay,\n  AutoPart,\n  SeekLast,\n  Theme,\n  Quality,\n  VideoStatus,\n  LoadingMask,\n  Mini,\n  LightOff,\n];\n\nconst panels = [About, Hotkeys, PartList];\n\nconst controls = [\n  ButtonWebscreen,\n  ButtonWidescreen,\n  ButtonDanmakuToggle,\n  ButtonDanmakuSettings,\n  ButtonDanmakulist,\n  ButtonQuality,\n  VideoTitle,\n];\n\n/** MfunsPlayer 播放页版播放器\n *\n * 插件功能：快捷键、右键菜单、弹幕栏、弹幕列表、视频黑边、宽屏模式、关灯模式\n */\nexport default class MfunsPlayer extends Player {\n  constructor(config: PlayerOptions) {\n    super(\n      presetBasic({\n        autoPart: true,\n        ...config,\n        plugins: [...plugins, ...panels, ...controls, ...(config.plugins || [])],\n      })\n    );\n  }\n}\n"],"names":["PluginManager","player","PluginCon","options","_a","_b","_c","_d","plugin","name","Events","listener","index","args","i","VideoLoader","video","src","flvPlayer","hls","dashPlayer","isMobile","createArray","count","val","getFullscreenElement","fullScreenEnabled","pictureInPictureEnabled","timeToSecond","str","arr","sec","min","hour","debounce","fn","delay","immediate","timer","isInvoke","createElement","tagName","attributes","children","el","throttle","wait","secondToTime","second","showHour","add0","num","storage","key","value","nameMap","colorLuminance","hex","lum","rgb","c","hex2Rgb","opacity","newStr","len","t","s","rgb2Hex","color","color2Number","number2Color","number","initHash","hashLength","ar","hs","hl","al","randomFontsize","range","allSize","random","dateFormatMap","d","dateFormat","date","format","match","classPrefix","repositoryLink","developers","videoEventMap","v","Video","res","info","url","type","play","time","flag","ratioW","ratioH","width","height","cWidth","cHeight","eventName","values","rwxh","rhxw","State","item","isIntersecting","debounceRemoveActive","Hooks","func","before","hook","ctx","f","e","o","n","l","h","r","u","a","_","m","p","g","$","y","w","x","T","A","E","C","P","V","N","H","L","z","k","S","M","R","Z","I","B","D","template","divider","html","Slider","container","max","step","onChange","onDragStart","onDragEnd","onDrag","render","event","clientX","trackLength","nMax","thumbTrackX","nLeft","nLength","mousemoveEvent","removeEvent","per","SliderVertical","clientY","thumbTrackY","nTop","templateWrap","list","Picker","onPick","condition","MultiPicker","onToggle","b","label","Switch","Checkbox","Player","volume","err","Utils","Components","VirtualList","getData","itemHeight","createItem","overflow","clientH","scrollTop","oldRenderStart","oldRenderEnd","beforeItems","addFrom","addTo","removeFrom","removeTo","child","afterItems","top","BasePlugin","ControlsPlugin","defaultOptions","disabled","opt","selectors","PanelPlugin","onUnmount","clearSelect","getDanmakuListItem","danmaku","operation","onClick","onDblclick","selected","focused","title","fragment","DanmakuList","dm","pos","api","operate","myDanmaku","unFreeze","dan","sortedBy","sortOrder","at","bt","status","viewEnd","selectedIndex","focusedIndex","focusedItem","shift","ctrl","from","to","keyCode","ButtonDanmakuStyle","danmakuBar","defaultFontSizeList","defaultModeList","defaultColorList","sRGBHex","DanmakuBar","defaultPlaceholder","placeholder","BlackBorder","DanmakuMode","DanmakuEngine","ids","displayed","id","content","contentIndex","items","keyword","user","containerWidth","containerHeight","itemY","danItemRight","containerRight","elRight","danItemLeft","containerLeft","getSpeed","getDOMTrack","getTrack","ele","forTrack","DOMTrack","track","enterTime","danRight","danLeft","docFragment","itemWidth","trackType","trackIndex","maxTop","prev","cur","speed","distance","topArr","topDan","bottomArr","bottomDan","bottom","text","font","single","result","elRect","containerRect","edgeLeft","edgeRight","edgeTop","edgeBottom","resultDOM","randomId","DanmakuParser","defaultParser","data","xmlData","nodeList","generate","currentNode","parser","DanmakuOperate","Danmaku","danmakuId","danmakuAddition","response","danmakuData","offset","addition","ad","basicDanmaku","advancedDanmaku","mode","Widescreen","ButtonPlay","ButtonPrev","ButtonNext","VideoTime","inputVal","ButtonLoop","ButtonPart","ButtonVolume","muted","ButtonSettings","ButtonPip","pip","ButtonWidescreen","widescreen","ButtonWebscreen","webscreen","ButtonFullscreen","fullscreen","ButtonDanmakuToggle","ButtonDanmakuSettings","area","link","About","description","Hotkeys","hotkeyInfoList","templateDanmaku","menu","copyClip","rej","ContextMenu","menuList","clientRect","captured","Controller","Hotkey","Modal","panel","Progress","dragMoveEvent","dragEndEvent","buffered","Settings","rate","ratio","Sources","source","Side","Pip","Fullscreen","fullScreenChangeHandler","doc","corePlugins","basicPlugins","basicControls","LabelTime","presetBasic","config","AutoPart","AutoPlay","SeekLast","themeOptionsVars","Theme","theme","scheme","Part","Seamless","oldVideo","templateList","setPart","PartList","ButtonDanmakulist","Quality","quality","sources","sourceList","sortedSources","ButtonQuality","videoWidth","videoHeight","q","VideoStatus","LoadingMask","line","handler","VideoTitle","Header","Mini","offsetLeft","offsetTop","mLeft","mTop","mousemoveHandler","mouseupHandler","LightOff","Webscreen","plugins","panels","controls","MfunsPlayer"],"mappings":"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","x_google_ignoreList":[8]}