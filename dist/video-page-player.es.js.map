{"version":3,"file":"video-page-player.es.js","sources":["../src/core/utils/index.ts","../src/core/config.ts","../src/core/module/videoController.ts","../src/core/module/pluginManager.ts","../src/core/module/hookManager.ts","../src/core/module/controlsManager.ts","../src/core/module/panelManager.ts","../src/core/module/menuManager.ts","../src/core/module/loaderManager.ts","../src/core/module/eventEmitter.ts","../src/core/player.ts","../player/core-player.ts","../node_modules/lit-html/lit-html.js","../mfuns-plugin/danmakuList/VirtualList.ts","../src/core/plugin.ts","../mfuns-plugin/danmakuList/index.ts","../src/core/components/Slider.ts","../src/core/components/SliderVertical.ts","../src/core/components/Picker.ts","../src/core/components/MultiPicker.ts","../src/core/components/Checkbox.ts","../src/plugin/enhance/video/blackBorder.ts","../src/plugin/screen/widescreen.ts","../src/plugin/controls/button/ButtonPlay.ts","../src/plugin/controls/button/ButtonPrev.ts","../src/plugin/controls/button/ButtonNext.ts","../src/plugin/controls/videoTime.ts","../src/plugin/controls/button/ButtonLoop.ts","../src/plugin/controls/button/ButtonPart.ts","../src/plugin/controls/button/ButtonVolume.ts","../src/plugin/controls/button/ButtonSettings.ts","../src/plugin/controls/button/ButtonPip.ts","../src/plugin/controls/button/ButtonWidescreen.ts","../src/plugin/controls/button/ButtonWebscreen.ts","../src/plugin/controls/button/ButtonFullscreen.ts","../src/plugin/panels/about/index.ts","../src/plugin/panels/hotkeyInfo/index.ts","../src/plugin/ui/contextMenu.ts","../src/plugin/ui/controller.ts","../src/core/utils/KeyCode.enum.ts","../src/plugin/hotkey.ts","../src/plugin/ui/modal.ts","../src/plugin/controls/progress.ts","../src/plugin/settings.ts","../src/plugin/ui/side.ts","../src/plugin/screen/pip.ts","../src/plugin/screen/fullscreen.ts","../src/plugin/videoOptions/user.ts","../src/plugin/state/stateActive.ts","../src/plugin/state/stateFocus.ts","../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/utils/freeze.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/utils/process.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../src/plugin/state/stateResize.ts","../src/plugin/state/stateIntersecting.ts","../src/plugin/presets/basic.ts","../src/plugin/enhance/playback/autoPart.ts","../src/plugin/enhance/playback/autoPlay.ts","../src/plugin/enhance/playback/autoSeek.ts","../src/plugin/theme.ts","../src/plugin/videoOptions/part.ts","../src/plugin/patch/seamless.ts","../src/plugin/panels/partList/index.ts","../src/plugin/controls/button/ButtonDanmakulist.ts","../src/plugin/quality.ts","../src/plugin/controls/button/ButtonQuality.ts","../src/plugin/enhance/ui/videoStatus.ts","../src/plugin/enhance/ui/loadingMask.ts","../src/plugin/controls/videoTitle.ts","../src/plugin/ui/header.ts","../src/plugin/enhance/ui/mini.ts","../src/plugin/enhance/ui/lightOff.ts","../src/plugin/screen/webscreen.ts","../src/plugin/danmaku/danmaku.ts","../src/plugin/danmaku/types.ts","../src/plugin/danmaku/danmakuEngine/MeonDanmakuEngine.ts","../src/plugin/danmaku/danmakuEngine/index.ts","../src/core/utils/randomId.ts","../src/plugin/danmaku/danmakuLoader.ts","../src/plugin/danmaku/danmakuOperate.ts","../src/plugin/danmaku/controls/ButtonDanmakuToggle.ts","../src/plugin/danmaku/danmakuBar.ts","../src/plugin/danmaku/controls/ButtonDanmakuSettings.ts","../src/plugin/danmaku/danmakuMenu.ts","../src/plugin/presets/danmaku.ts","../src/plugin/videoOptions/qualities.ts","../src/plugin/videoLoader/hlsLoader.ts","../src/plugin/videoLoader/dashLoader.ts","../src/plugin/videoLoader/flvLoader.ts","../src/plugin/enhance/video/aspectRatio.ts","../player/video-page-player.ts"],"sourcesContent":["const isMobile = /mobile/i.test(window.navigator.userAgent);\n\n/** 创建特定长度的填充数组 */\nexport const createArray = <T>(count: number, val: T) => Array.from({ length: count }, () => val);\n\n/** 获取全屏元素 */\nexport const getFullscreenElement = (): HTMLElement | null =>\n  document.fullscreenElement ||\n  (document as any).mozFullScreenElement ||\n  (document as any).webkitFullscreenElement ||\n  (document as any).msFullscreenElement ||\n  null;\n\n/** 是否支持全屏 */\nexport const fullScreenEnabled: boolean =\n  document.fullscreenEnabled ||\n  (document as any).webkitFullscreenEnabled ||\n  (document as any).mozFullScreenEnabled ||\n  (document as any).msFullscreenEnabled ||\n  false;\n\n/** 是否支持画中画 */\nexport const pictureInPictureEnabled = document.pictureInPictureEnabled;\n\n/**\n * 将时间文本转换为秒数\n *\n * @param {String} str 冒号分隔的时间文本，支持全角冒号\n * @return {Number} second\n */\nexport const timeToSecond = (str: string): number => {\n  const arr = str.split(/[:：]/).slice(-3);\n  const sec = parseInt(arr[arr.length - 1]) || 0;\n  const min = parseInt(arr[arr.length - 2]) || 0;\n  const hour = parseInt(arr[arr.length - 3]) || 0;\n  return sec + min * 60 + hour * 3600;\n};\n\n/**\n * 防抖\n * @param {Function} fn 需要防抖处理的函数\n * @param {number} delay 防抖延迟执行时间\n * @param {boolean} immediate 是否立即执行一次\n */\nexport const debounce = (fn: (...args: unknown[]) => void, delay: number, immediate = false) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let isInvoke = false;\n  const f = function (this: unknown, ...args: unknown[]) {\n    if (timer) clearTimeout(timer);\n    if (immediate && !isInvoke) {\n      fn.apply(this, args);\n      isInvoke = true;\n    } else {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n        isInvoke = false;\n      }, delay);\n    }\n  };\n  /*   f.clear = () => {\n    if (timer) clearTimeout(timer);\n  }; */\n  return f;\n};\n\n/** 创建元素 */\nexport function createElement<T extends keyof HTMLElementTagNameMap>(\n  tagName: T,\n  attributes?: Record<string, string>,\n  children?: Node\n) {\n  const el = document.createElement(tagName);\n  if (attributes) {\n    for (const name in attributes) {\n      el.setAttribute(name, attributes[name]);\n    }\n  }\n  if (children) {\n    el.append(children);\n  }\n  return el;\n}\n\n/**\n * 节流\n * @param {Function} fn 需要节流处理的函数\n * @param {number} wait 执行一次后需要等待的时间\n */\nexport const throttle = (fn: (...args: unknown[]) => void, wait: number) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  return function (this: unknown, ...args: unknown[]) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n      }, wait);\n    }\n  };\n};\n/** 限制数值 */\nexport function clamp(number: number, lower: number, upper: number) {\n  return number > lower ? (number < upper ? number : upper) : lower;\n}\n\n// === 未完全重构 ==========\n\n/**\n * 将秒数转换为时间文本\n *\n * @param {Number} second\n * @param {Boolean} showHour\n * @return {String} 00:00 or 00:00:00\n */\nexport const secondToTime = (second: number, showHour = true) => {\n  second = second || 0;\n  if (second === 0 || second === Infinity || second.toString() === \"NaN\") {\n    return \"00:00\";\n  }\n  const add0 = (num: number) => (num < 10 ? `0${num}` : `${num}`);\n  const hour = Math.floor(second / 3600);\n  const min = Math.floor((second - hour * 3600) / 60);\n  const sec = Math.floor(second - hour * 3600 - min * 60);\n  if (showHour) {\n    return (hour > 0 ? [hour, min, sec] : [min, sec]).map(add0).join(\":\");\n  }\n  return [hour * 60 + min, sec].map(add0).join(\":\");\n};\n\nexport const storage = {\n  set: (key: string, value: any) => {\n    localStorage.setItem(key, value);\n  },\n\n  get: (key: string) => localStorage.getItem(key),\n};\n\nexport const nameMap = {\n  dragStart: isMobile ? \"touchstart\" : \"mousedown\",\n  dragMove: isMobile ? \"touchmove\" : \"mousemove\",\n  dragEnd: isMobile ? \"touchend\" : \"mouseup\",\n};\nexport const colorLuminance = (hex: string, lum: number) => {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  let rgb = \"#\";\n  let c;\n  let i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += `00${c}`.substr(c.length);\n  }\n\n  return rgb;\n};\n\nexport const hex2Rgb = (str: string, opacity: number) => {\n  // 16进制转rgb\n  const reg = /^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$/;\n  if (!reg.test(str)) {\n    return;\n  }\n  let newStr = str.toLowerCase().replace(/#/g, \"\");\n  const len = newStr.length;\n  if (len == 3) {\n    let t = \"\";\n    for (let i = 0; i < len; i++) {\n      t += newStr.slice(i, i + 1).concat(newStr.slice(i, i + 1));\n    }\n    newStr = t;\n  }\n  const arr = []; // 将字符串分隔，两个两个的分隔\n  for (let i = 0; i < 6; i += 2) {\n    const s = newStr.slice(i, i + 2);\n    arr.push(parseInt(`0x${s}`));\n  }\n  if (opacity) return `rgba(${arr.join(\",\")},${opacity})`;\n  return `rgb(${arr.join(\",\")})`;\n};\nexport const rgb2Hex = (str: string) => {\n  // rgb转16进制\n  const reg = /^(rgb|RGB)/;\n  if (!reg.test(str)) {\n    return;\n  }\n  const arr = str.slice(4, str.length - 1).split(\",\");\n  let color = \"#\";\n  for (let i = 0; i < arr.length; i++) {\n    let t = Number(arr[i]).toString(16);\n    if (t == \"0\") {\n      // 如果为“0”的话，需要补0操作,否则只有5位数\n      t += \"0\";\n    }\n    color += t;\n  }\n  return color;\n};\nexport const color2Number = (color: string) => {\n  if (color[0] === \"#\") {\n    color = color.substr(1);\n  }\n  if (color.length === 3) {\n    color = `${color[0]}${color[0]}${color[1]}${color[1]}${color[2]}${color[2]}`;\n  }\n  return (parseInt(color, 16) + 0x000000) & 0xffffff;\n};\n\nexport const number2Color = (number: number) => `#${`00000${number.toString(16)}`.slice(-6)}`;\nexport const initHash = () => {\n  let count = 100;\n\n  return function (hashLength: number) {\n    if (!hashLength || typeof Number(hashLength) !== \"number\") {\n      return;\n    }\n    const ar = [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"0\",\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ];\n    const hs = [];\n    const hl = Number(hashLength);\n    const al = ar.length;\n    for (let i = 0; i < hl; i++) {\n      hs.push(ar[Math.floor(Math.random() * al)]);\n    }\n    count++;\n    return `${hs.join(\"\")}${count}`;\n  };\n};\nexport const randomFontsize = (range: number) => {\n  const allSize = [16, 18, 25, 36, 45, 64];\n  const random = Math.floor(Math.random() * range);\n  return allSize[random];\n};\n\nconst dateFormatMap = {\n  yyyy: (d: Date) => d.getFullYear().toString(),\n  yy: (d: Date) => d.getFullYear().toString().slice(-2),\n  MM: (d: Date) => (d.getMonth() + 1).toString().padStart(2, \"0\"),\n  dd: (d: Date) => d.getDate().toString().padStart(2, \"0\"),\n  HH: (d: Date) => d.getHours().toString().padStart(2, \"0\"),\n  mm: (d: Date) => d.getMinutes().toString().padStart(2, \"0\"),\n  ss: (d: Date) => d.getSeconds().toString().padStart(2, \"0\"),\n};\n\n// date: 时间对象, pattern: 日期格式\nexport const dateFormat = (date: Date, format: string) => {\n  return format.replace(/yyyy|yy|MM|dd|HH|mm|ss/g, (match) =>\n    dateFormatMap[match as keyof typeof dateFormatMap]?.(date)\n  );\n};\n","export const classPrefix = \"mfuns-player\";\n\n/** 项目链接 */\nexport const repositoryLink = \"https://github.com/Mfuns-cn/mfunsPlayer/tree/v3-beta\";\n\n/** 开发者列表 */\nexport const developers = [\n  { name: \"Minteea\", id: \"Minteea\", link: \"https://github.com/Minteea\" },\n  { name: \"鲁迪钨丝\", id: \"Rudiusu\", link: \"https://github.com/Rudiusu\" },\n];\n","import { LoadInfo, MediaController, PlayerOptions, VideoInfo } from \"@/types\";\nimport Player from \"@/player\";\nimport { PlayerEventMap } from \"@/types/PlayerEventMap\";\nimport { createElement } from \"@/utils\";\nimport { classPrefix } from \"@/config\";\n\nconst videoEventMap: {\n  [k in keyof PlayerEventMap & keyof HTMLVideoElementEventMap]?: (\n    v: HTMLVideoElement\n  ) => Parameters<PlayerEventMap[k]>;\n} = {\n  play: () => [],\n  pause: () => [],\n  ended: () => [],\n\n  loadeddata: () => [],\n  loadedmetadata: () => [],\n  waiting: () => [],\n  playing: () => [],\n  canplay: () => [],\n  canplaythrough: () => [],\n\n  timeupdate: (v) => [v.currentTime],\n  durationchange: (v) => [v.duration],\n  progress: (v) => [v.buffered],\n  seeking: (v) => [v.currentTime],\n  seeked: (v) => [v.currentTime],\n  volumechange: (v) => [v.volume, v.muted],\n  ratechange: (v) => [v.playbackRate],\n\n  enterpictureinpicture: () => [],\n  leavepictureinpicture: () => [],\n};\n\nexport default class VideoController {\n  /** 播放器主体 */\n  player: Player;\n  /** video对象 */\n  $el: HTMLVideoElement;\n\n  ratio: [number, number] | null = null;\n\n  /** 视频信息 */\n  info: VideoInfo = {};\n\n  mediaController: MediaController | null = null;\n\n  private detachEventController?: AbortController;\n\n  constructor(player: Player, options: PlayerOptions) {\n    this.player = player;\n\n    this.$el = this.player.$content.appendChild(\n      createElement(\"video\", { class: `${classPrefix}-video` })\n    );\n\n    this._attachEvent(this.$el);\n\n    this.player.on(\"ended\", () => {\n      this.player.hook.call(\"end\").then((res) => {\n        if (res) this.player.emit(\"end\");\n      });\n    });\n  }\n\n  /** 设置视频 */\n  public set(info: VideoInfo, play?: boolean, time?: number) {\n    this.player.hook.call(\"video.set\", info).then(async (res) => {\n      if (res) {\n        // 销毁并丢弃原视频控制实例\n        this.mediaController?.destroy?.();\n        this.mediaController = null;\n        // 设置新视频信息\n        this.info = info;\n        this.player.emit(\"videoChange\", { ...info });\n        // 加载视频\n        let { url, type, live } = info;\n        const loadInfo = { url, type, play, time, live };\n        this.player.hook.call(\"video.beforeLoad\", loadInfo).then(() => {\n          if (loadInfo.url) {\n            this.load(loadInfo as LoadInfo);\n          } else {\n            this.player.throw(new Error(\"缺少视频播放信息\"));\n          }\n        });\n      }\n    });\n  }\n\n  /** 加载视频 */\n  public load(info: LoadInfo) {\n    this.player.hook.call(\"video.load\", info).then((res) => {\n      if (res) {\n        this.mediaController = this.player.loader.create(info, this.$el);\n        this.player.emit(\"videoLoad\", info);\n      } else {\n        this.player.throw(new Error(\"视频加载失败\"));\n      }\n    });\n  }\n\n  /** 添加视频事件 */\n  private _attachEvent(video: HTMLVideoElement) {\n    this.detachEventController = new AbortController();\n    for (const eventName in videoEventMap) {\n      const values =\n        videoEventMap[eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap]!;\n      video.addEventListener(\n        eventName,\n        () => {\n          this.player.emit(\n            eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap,\n            ...values(video)\n          );\n        },\n        { signal: this.detachEventController.signal }\n      );\n    }\n  }\n\n  public bind(el: HTMLVideoElement) {\n    this.$el = el;\n    this.detachEventController?.abort();\n    this._attachEvent(el);\n  }\n\n  /** 获取播放信息 */\n  getVideoInfo() {\n    return {\n      ...this.info,\n    };\n  }\n  /** 获取媒体信息 */\n  getMediaInfo() {\n    return {\n      url: this.mediaController?.url,\n      type: this.mediaController?.type || \"\",\n      live: this.mediaController?.live || false,\n    };\n  }\n}\n","import Player from \"@/player\";\nimport { PlayerOptions, IPlugin, PluginConstructor } from \"@/types\";\n\nexport default class PluginManager {\n  player: Player;\n  get plugin() {\n    return this.player.plugin as unknown as Record<string, IPlugin>;\n  }\n  private initialized = false;\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册插件 */\n  register(pluginItem: PluginConstructor | IPlugin, options: PlayerOptions) {\n    const plugin: IPlugin =\n      typeof pluginItem == \"function\" ? new pluginItem(this.player) : pluginItem;\n    plugin.init?.(this.player);\n    if (pluginItem.pluginName) (this.player.plugin as any)[pluginItem.pluginName] = plugin;\n    console.log(pluginItem.pluginName);\n    plugin.apply?.(this.player, options);\n    if (this.initialized) {\n      plugin.ready?.(this.player);\n      plugin.mounted?.(this.player);\n    }\n  }\n  /** 批量注册插件 */\n  pluginsRegister(options: PlayerOptions) {\n    options.plugins?.forEach((pluginItem) => {\n      this.register(pluginItem, options);\n    });\n    this.pluginsReady();\n  }\n  /** 所有插件注册完毕后执行 */\n  pluginsReady() {\n    if (this.initialized) return;\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.ready?.(this.player);\n    }\n    this.initialized = true;\n  }\n  /** 播放器挂载后执行 */\n  playerMounted() {\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.mounted?.(this.player);\n    }\n  }\n  /** 销毁所有插件 */\n  destroy() {\n    for (const name in this.plugin) {\n      const plugin = this.plugin[name];\n      plugin.destroy?.();\n    }\n  }\n}\n","import { PlayerHookMap } from \"@/types\";\n\ntype MaybePromise<T> = T | Promise<T>;\n\nexport type HookFunction<T> = (ctx: T) => MaybePromise<void | boolean>;\n\nexport default class HookManager {\n  protected hooks: Record<string, HookFunction<any>[]> = {};\n\n  /** 注册钩子 */\n  register<T extends keyof PlayerHookMap>(\n    name: T,\n    func: HookFunction<PlayerHookMap[T]>,\n    before = false\n  ) {\n    let hook = this.hooks[name];\n    if (!hook) {\n      hook = [];\n      this.hooks[name] = hook;\n    }\n    before ? hook.unshift(func) : hook.push(func);\n  }\n\n  /** 移除钩子 */\n  unregister<T extends keyof PlayerHookMap>(name: T, func: HookFunction<PlayerHookMap[T]>) {\n    let hook = this.hooks[name];\n    if (!hook) {\n      hook = [];\n      this.hooks[name] = hook;\n    }\n    const index = hook.indexOf(func);\n    if (index > -1) hook.splice(index, 1);\n  }\n\n  call<T extends keyof PlayerHookMap>(\n    name: PlayerHookMap[T] extends void ? T : never,\n    ctx: void,\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ): Promise<boolean>;\n  call<T extends keyof PlayerHookMap>(\n    name: T,\n    ctx: PlayerHookMap[T],\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ): Promise<boolean>;\n  /** 调用钩子函数\n   * @param name 钩子名称\n   * @param ctx 钩子上下文\n   * @param defaultFunc 钩子在正常遍历完毕后最终执行的钩子函数\n   */\n  async call<T extends keyof PlayerHookMap>(\n    name: T,\n    ctx: PlayerHookMap[T],\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\n  ) {\n    const hook = this.hooks[name];\n    if (hook?.length) {\n      for (const f of hook) {\n        const res = await f(ctx);\n        if (res == true) {\n          console.log(`钩子提前结束调用: ${name}`);\n          console.log(f);\n          return true;\n        } else if (res == false) {\n          console.log(`钩子被拦截: ${name}`);\n          console.log(f);\n          return false;\n        }\n      }\n    }\n    console.log(`钩子调用完毕: ${name}`);\n    console.log(ctx);\n    return defaultFunc?.(ctx as any) ?? true;\n  }\n}\n","import Player from \"@/player\";\nimport { ControlsPlugin, IControls, UIOptionsItem } from \"../plugin\";\nimport { PlayerHookMap } from \"../types\";\n\nexport default class ControlsManager {\n  protected list = new Map<string, IControls>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册控制组件 */\n  register(name: string, controls: IControls | (new (player: Player) => IControls)) {\n    this.list.set(name, typeof controls == \"function\" ? this.build(controls) : controls);\n  }\n\n  /** 移除控制组件 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取控制组件 */\n  get(item: UIOptionsItem<IControls>): IControls | undefined {\n    let controls: IControls | undefined;\n    switch (typeof item) {\n      case \"object\":\n        controls = item;\n        break;\n      case \"function\":\n        controls = this.build(item);\n        break;\n      default:\n        controls = this.list.get(item);\n        break;\n    }\n    return controls?.ignored ? undefined : controls;\n  }\n\n  /** 创建控制组件 */\n  build(func: new (player: Player) => IControls) {\n    const controls = new func(this.player);\n    controls.init?.(this.player);\n    controls.ready?.(this.player);\n    controls.mounted?.(this.player);\n    return controls;\n  }\n}\n","import Player from \"@/player\";\nimport { IPanel, UIOptionsItem } from \"@/plugin\";\nimport { PlayerHookMap } from \"@/types\";\n\nexport default class PanelManager {\n  protected list = new Map<string, IPanel>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册面板 */\n  register(name: string, panel: IPanel | (new (player: Player) => IPanel)) {\n    this.list.set(name, typeof panel == \"function\" ? this.build(panel) : panel);\n  }\n\n  /** 移除面板 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取面板 */\n  get(panel: UIOptionsItem<IPanel>): IPanel | undefined {\n    switch (typeof panel) {\n      case \"object\":\n        return panel;\n      case \"function\":\n        return this.build(panel);\n      default:\n        return this.list.get(panel);\n    }\n  }\n\n  /** 创建面板 */\n  build(func: new (player: Player) => IPanel) {\n    const panel = new func(this.player);\n    panel.init?.(this.player);\n    panel.ready?.(this.player);\n    panel.mounted?.(this.player);\n    return panel;\n  }\n}\n","import Player from \"@/player\";\nimport { IMenu, UIOptionsItem } from \"@/plugin\";\nimport { PlayerHookMap } from \"@/types\";\n\nexport default class MenuManager {\n  protected list = new Map<string, IMenu>();\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n  /** 注册菜单项 */\n  register(name: string, item: IMenu | (new (player: Player) => IMenu)) {\n    this.list.set(name, typeof item == \"function\" ? this.build(item) : item);\n  }\n\n  /** 移除菜单项 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 获取菜单项 */\n  get(item: UIOptionsItem<IMenu>): IMenu | undefined {\n    switch (typeof item) {\n      case \"object\":\n        return item;\n      case \"function\":\n        return this.build(item);\n      default:\n        return this.list.get(item);\n    }\n  }\n\n  /** 创建菜单项 */\n  build(func: new (player: Player) => IMenu) {\n    const item = new func(this.player);\n    item.init?.(this.player);\n    item.ready?.(this.player);\n    item.mounted?.(this.player);\n    return item;\n  }\n}\n","import Player from \"@/player\";\nimport { LoadInfo, MediaController, MediaLoader, PlayerHookMap } from \"@/types\";\n\nexport default class LoaderManager {\n  protected list = new Map<string, MediaLoader>();\n  protected player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n\n  /** 注册加载器 */\n  register(name: string, loader: MediaLoader) {\n    this.list.set(name, loader);\n  }\n\n  /** 移除加载器 */\n  unregister<T extends keyof PlayerHookMap>(name: T) {\n    this.list.delete(name);\n  }\n\n  /** 创建媒体控制实例 */\n  create(info: LoadInfo, video: HTMLVideoElement) {\n    for (const [name, loader] of this.list) {\n      if (loader.check(info)) return loader.create(info, video);\n    }\n    return this.createDefault(info, video);\n  }\n\n  /** 常规方式创建实例 */\n  createDefault(info: LoadInfo, video: HTMLVideoElement): MediaController {\n    const { type, url, live, play, time } = info;\n    const controller: MediaController = {\n      type: type || \"\",\n      url: url,\n      live: live || false,\n      mediaElement: video,\n      destroy() {\n        this.mediaElement.src = \"\";\n      },\n    };\n    const t = time === true ? this.player.currentTime : time;\n    video.src = url;\n    video.addEventListener(\n      \"loadeddata\",\n      () => {\n        if (t) {\n          this.player.seek(t);\n        }\n        if (play) {\n          this.player.play();\n        }\n      },\n      { once: true }\n    );\n    return controller;\n  }\n}\n","import { PlayerEventMap } from \"@/types\";\n\nexport default class EventEmitter {\n  protected listeners: Record<string, ((...args: any[]) => void)[]> = {};\n  protected onceListeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  readonly customEventList: string[] = [];\n\n  /** 添加监听 */\n  on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n    this.listeners[name].push(listener);\n  }\n\n  /** 添加一次性监听 */\n  once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.onceListeners[name]) {\n      this.onceListeners[name] = [];\n    }\n    this.onceListeners[name].push(listener);\n  }\n\n  /** 移除监听 */\n  off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n    const index = this.listeners[name].indexOf(listener);\n    if (index > -1) this.listeners[name].splice(index, 1);\n  }\n\n  /** 触发事件 */\n  emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\n    if (this.listeners[name]?.length) {\n      for (let i = 0; i < this.listeners[name].length; i++) {\n        this.listeners[name][i](...args);\n      }\n    }\n    if (this.onceListeners[name]?.length) {\n      for (let i = 0; i < this.onceListeners[name].length; i++) {\n        this.onceListeners[name][i](...args);\n      }\n      this.onceListeners[name] = [];\n    }\n  }\n}\n","import {\n  LoadInfo,\n  MediaController,\n  PlayerPlugins,\n  PlayerPropertyDescriptor,\n  VideoInfo,\n} from \"./types\";\nimport { PlayerOptions } from \"@/types\";\nimport { PlayerEventMap } from \"./types/PlayerEventMap\";\nimport { clamp, createElement } from \"./utils\";\nimport { classPrefix } from \"./config\";\nimport VideoController from \"./module/videoController\";\nimport PluginManager from \"./module/pluginManager\";\nimport HookManager from \"./module/hookManager\";\nimport ControlsManager from \"./module/controlsManager\";\nimport PanelManager from \"./module/panelManager\";\nimport MenuManager from \"./module/menuManager\";\nimport LoaderManager from \"./module/loaderManager\";\nimport EventEmitter from \"./module/eventEmitter\";\nimport * as Util from \"@/utils\";\nimport * as Component from \"@/components\";\n\n/**\n * @event\n */\nexport class Player {\n  static readonly version = __MFUNSPLAYER_VERSION__;\n  static readonly gitHash = __GIT_HASH__;\n  /** 容器 */\n  readonly container: HTMLElement;\n  /** 播放器元素 */\n  readonly $el: HTMLDivElement;\n  /** 播放器主要区域 */\n  readonly $main: HTMLDivElement;\n  /** 播放器视频区域 */\n  readonly $area: HTMLDivElement;\n  /** 播放器视频容器 */\n  readonly $content: HTMLDivElement;\n  /** hook */\n  readonly hook = new HookManager();\n  /** 控制组件 */\n  readonly controls: ControlsManager;\n  /** 面板 */\n  readonly panel: PanelManager;\n  /** 菜单项 */\n  readonly menu: MenuManager;\n  /** 媒体加载器 */\n  readonly loader: LoaderManager;\n  /** 插件 */\n  readonly plugin: PlayerPlugins = {};\n  /** 视频控制 */\n  protected _videoController: VideoController;\n  /** 插件管理 */\n  protected _pluginManager: PluginManager;\n  /** 事件机制 */\n  protected _eventEmitter = new EventEmitter();\n  /** Player类 */\n  readonly Player = Player;\n\n  constructor(options: PlayerOptions) {\n    this.container = options.container;\n\n    this.$el = createElement(\"div\", { class: `${classPrefix} mpui` });\n    this.$main = this.$el.appendChild(createElement(\"div\", { class: `${classPrefix}-main` }));\n    this.$area = this.$main.appendChild(createElement(\"div\", { class: `${classPrefix}-area` }));\n    this.$content = this.$area.appendChild(\n      createElement(\"div\", { class: `${classPrefix}-content` })\n    );\n\n    this._pluginManager = new PluginManager(this);\n    this._videoController = new VideoController(this, options);\n    this.loader = new LoaderManager(this);\n    this.controls = new ControlsManager(this);\n    this.panel = new PanelManager(this);\n    this.menu = new MenuManager(this);\n\n    this.init(options);\n  }\n\n  /** 初始化播放器 */\n  private async init(options: PlayerOptions) {\n    // 状态事件\n    this.on(\"videoChange\", () => {\n      this.$el.classList.add(\"is-start\");\n    });\n    this.$el.classList.add(\"is-paused\");\n    this.on(\"play\", () => {\n      this.$el.classList.remove(\"is-start\");\n      this.$el.classList.remove(\"is-paused\");\n    });\n    this.on(\"pause\", () => {\n      this.$el.classList.add(\"is-paused\");\n    });\n    this.on(\"waiting\", () => {\n      this.$el.classList.add(\"is-loading\");\n    });\n    this.on(\"playing\", () => {\n      this.$el.classList.remove(\"is-loading\");\n    });\n\n    // 注册列表中的插件\n    this._pluginManager.pluginsRegister(options);\n\n    // 播放器挂载\n    this.container.appendChild(this.$el);\n    this._pluginManager.playerMounted();\n\n    this.emit(\"mounted\");\n\n    // 装载视频\n    this._videoController.set(options.video, options.autoPlay, options.time);\n  }\n\n  /** 播放器视频元素 */\n  get $video(): HTMLVideoElement {\n    return this._videoController.$el;\n  }\n\n  /** 获取视频信息 */\n  getVideoInfo() {\n    return this._videoController.getVideoInfo();\n  }\n\n  /** 获取媒体信息 */\n  getMediaInfo() {\n    return this._videoController.getMediaInfo();\n  }\n\n  /** 获取播放器的媒体元素 */\n  getMediaElement(): HTMLVideoElement {\n    return this._videoController.$el;\n  }\n\n  /** 绑定媒体元素 */\n  attachMediaElement(el: HTMLVideoElement) {\n    this._videoController.bind(el);\n  }\n\n  /** 获取媒体控制实例 */\n  getMediaController(): MediaController | null {\n    return this._videoController.mediaController;\n  }\n\n  /** 绑定媒体控制实例 */\n  attachMediaController(controller: MediaController) {\n    this._videoController.mediaController = controller;\n    this._videoController.bind(controller.mediaElement);\n  }\n\n  /** 设置视频内容 */\n  setVideo(info: VideoInfo, play?: boolean, time?: number) {\n    return this._videoController.set(info, play, time);\n  }\n\n  /** 加载视频源 */\n  loadVideo(info: LoadInfo) {\n    return this._videoController.load(info);\n  }\n\n  // --- 播放切换控制 --- //\n\n  /** 切换上一个 */\n  public prev() {\n    this.hook.call(\"prev\");\n  }\n\n  /** 切换下一个 */\n  public next() {\n    this.hook.call(\"next\");\n  }\n\n  // --- 视频播放控制 --- //\n\n  /** 当前播放器暂停状态 */\n  get paused() {\n    return this.$video.paused;\n  }\n\n  /** 当前播放时间 */\n  public get currentTime() {\n    return this.$video.currentTime;\n  }\n\n  /** 当前播放总时间 */\n  public get duration() {\n    return this.$video.duration;\n  }\n\n  /** 当前播放音量 */\n  public get volume() {\n    return this.$video.volume;\n  }\n\n  /** 当前静音状态 */\n  public get muted() {\n    return this.$video.muted;\n  }\n\n  /** 当前播放速度 */\n  public get playbackRate() {\n    return this.$video.playbackRate;\n  }\n\n  /** 当前视频循环 */\n  public get loop() {\n    return this.$video.loop;\n  }\n\n  /** 开始播放 */\n  public play() {\n    this.hook.call(\"play\").then((res) => {\n      if (res) this.$video.play();\n    });\n  }\n\n  /** 暂停播放 */\n  public pause() {\n    this.hook.call(\"pause\").then((res) => {\n      if (res) this.$video.pause();\n    });\n  }\n\n  /** 跳转\n   * @param time 跳转时间点（秒）\n   */\n  public seek(time: number) {\n    this.hook.call(\"seek\").then((res) => {\n      if (res) {\n        this.$video.currentTime = clamp(time, 0, this.$video.duration);\n      }\n    });\n  }\n\n  /** 设置音量\n   * @param volume 音量（0-1）\n   */\n  public setVolume(volume: number) {\n    this.$video.volume = clamp(volume, 0, 1);\n  }\n\n  /** 静音 */\n  public setMuted(flag: boolean) {\n    this.$video.muted = flag;\n  }\n\n  /** 设置倍速 */\n  public setPlaybackRate(value: number) {\n    this.$video.playbackRate = value;\n  }\n\n  /** 设置视频循环 */\n  public setLoop(flag: boolean) {\n    this.$video.loop = flag;\n    this.emit(\"loopChange\", flag);\n  }\n\n  // --- 事件 --- //\n\n  /** 监听事件 */\n  public on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.on(name, listener);\n  }\n\n  /** 取消监听事件 */\n  public off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.off(name, listener);\n  }\n\n  /** 一次性监听事件 */\n  public once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\n    this._eventEmitter.once(name, listener);\n  }\n\n  /** 发送事件 */\n  public emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\n    this._eventEmitter.emit(name, ...args);\n  }\n\n  /** 定义属性或方法 */\n  public define<T extends keyof Player>(\n    name: Player[T] extends Function | undefined ? T : never,\n    item: Function\n  ): void;\n  public define<T extends keyof Player>(name: T, item: PlayerPropertyDescriptor<Player[T]>): void;\n  public define(name: string, item: Function | PropertyDescriptor) {\n    Object.defineProperty(this, name, typeof item == \"function\" ? { value: item } : item);\n  }\n\n  /** 抛出错误 */\n  public throw(err: Error) {\n    console.error(err);\n    this.emit(\"error\", err);\n  }\n\n  /** 播放器销毁 */\n  public destroy() {\n    // 所有插件执行destroy函数\n    this._pluginManager.destroy();\n  }\n}\n\nexport default Player;\n","import Player from \"@/player\";\nimport \"@css/index.scss\";\n\nconsole.log(\n  `${\"\\n\"} %c mfunsPlayer v${__MFUNSPLAYER_VERSION__} ${__GIT_HASH__} %c https://github.com/Mfuns-cn ${\"\\n\"}${\"\\n\"}`,\n  \"color: #fff; background: #7b7ff7; padding:5px 0;\",\n  \"background: #f5f5f5; padding:5px 0;\"\n);\n\nexport default Player;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=window,s=i.trustedTypes,e=s?s.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,o=\"$lit$\",n=`lit$${(Math.random()+\"\").slice(9)}$`,l=\"?\"+n,h=`<${l}>`,r=document,u=()=>r.createComment(\"\"),d=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,c=Array.isArray,v=t=>c(t)||\"function\"==typeof(null==t?void 0:t[Symbol.iterator]),a=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,_=/-->/g,m=/>/g,p=RegExp(`>|${a}(?:([^\\\\s\"'>=/]+)(${a}*=${a}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),g=/'/g,$=/\"/g,y=/^(?:script|style|textarea|title)$/i,w=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=w(1),b=w(2),T=Symbol.for(\"lit-noChange\"),A=Symbol.for(\"lit-nothing\"),E=new WeakMap,C=r.createTreeWalker(r,129,null,!1);function P(t,i){if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==e?e.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,e=[];let l,r=2===i?\"<svg>\":\"\",u=f;for(let i=0;i<s;i++){const s=t[i];let d,c,v=-1,a=0;for(;a<s.length&&(u.lastIndex=a,c=u.exec(s),null!==c);)a=u.lastIndex,u===f?\"!--\"===c[1]?u=_:void 0!==c[1]?u=m:void 0!==c[2]?(y.test(c[2])&&(l=RegExp(\"</\"+c[2],\"g\")),u=p):void 0!==c[3]&&(u=p):u===p?\">\"===c[0]?(u=null!=l?l:f,v=-1):void 0===c[1]?v=-2:(v=u.lastIndex-c[2].length,d=c[1],u=void 0===c[3]?p:'\"'===c[3]?$:g):u===$||u===g?u=p:u===_||u===m?u=f:(u=p,l=void 0);const w=u===p&&t[i+1].startsWith(\"/>\")?\" \":\"\";r+=u===f?s+h:v>=0?(e.push(d),s.slice(0,v)+o+s.slice(v)+n+w):s+n+(-2===v?(e.push(void 0),i):w)}return[P(t,r+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\")),e]};class N{constructor({strings:t,_$litType$:i},e){let h;this.parts=[];let r=0,d=0;const c=t.length-1,v=this.parts,[a,f]=V(t,i);if(this.el=N.createElement(a,e),C.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(h=C.nextNode())&&v.length<c;){if(1===h.nodeType){if(h.hasAttributes()){const t=[];for(const i of h.getAttributeNames())if(i.endsWith(o)||i.startsWith(n)){const s=f[d++];if(t.push(i),void 0!==s){const t=h.getAttribute(s.toLowerCase()+o).split(n),i=/([.?@])?(.*)/.exec(s);v.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?H:\"?\"===i[1]?L:\"@\"===i[1]?z:k})}else v.push({type:6,index:r})}for(const i of t)h.removeAttribute(i)}if(y.test(h.tagName)){const t=h.textContent.split(n),i=t.length-1;if(i>0){h.textContent=s?s.emptyScript:\"\";for(let s=0;s<i;s++)h.append(t[s],u()),C.nextNode(),v.push({type:2,index:++r});h.append(t[i],u())}}}else if(8===h.nodeType)if(h.data===l)v.push({type:2,index:r});else{let t=-1;for(;-1!==(t=h.data.indexOf(n,t+1));)v.push({type:7,index:r}),t+=n.length-1}r++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){var o,n,l,h;if(i===T)return i;let r=void 0!==e?null===(o=s._$Co)||void 0===o?void 0:o[e]:s._$Cl;const u=d(i)?void 0:i._$litDirective$;return(null==r?void 0:r.constructor)!==u&&(null===(n=null==r?void 0:r._$AO)||void 0===n||n.call(r,!1),void 0===u?r=void 0:(r=new u(t),r._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Co)&&void 0!==l?l:h._$Co=[])[e]=r:s._$Cl=r),void 0!==r&&(i=S(t,r._$AS(t,i.values),r,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:r).importNode(s,!0);C.currentNode=o;let n=C.nextNode(),l=0,h=0,u=e[0];for(;void 0!==u;){if(l===u.index){let i;2===u.type?i=new R(n,n.nextSibling,this,t):1===u.type?i=new u.ctor(n,u.name,u.strings,this,t):6===u.type&&(i=new Z(n,this,t)),this._$AV.push(i),u=e[++h]}l!==(null==u?void 0:u.index)&&(n=C.nextNode(),l++)}return C.currentNode=r,o}v(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{constructor(t,i,s,e){var o;this.type=2,this._$AH=A,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cp=null===(o=null==e?void 0:e.isConnected)||void 0===o||o}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cp}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===(null==t?void 0:t.nodeType)&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),d(t)?t===A||null==t||\"\"===t?(this._$AH!==A&&this._$AR(),this._$AH=A):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):v(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==A&&d(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=N.createElement(P(e.h,e.h[0]),this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.v(s);else{const t=new M(o,this),i=t.u(this.options);t.v(s),this.$(i),this._$AH=t}}_$AC(t){let i=E.get(t.strings);return void 0===i&&E.set(t.strings,i=new N(t)),i}T(t){c(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new R(this.k(u()),this.k(u()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cp=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class k{constructor(t,i,s,e,o){this.type=1,this._$AH=A,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=A}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=S(this,t,i,0),n=!d(t)||t!==this._$AH&&t!==T,n&&(this._$AH=t);else{const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=S(this,e[s+l],i,l),h===T&&(h=this._$AH[l]),n||(n=!d(h)||h!==this._$AH[l]),h===A?t=A:t!==A&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h}n&&!e&&this.j(t)}j(t){t===A?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===A?void 0:t}}const I=s?s.emptyScript:\"\";class L extends k{constructor(){super(...arguments),this.type=4}j(t){t&&t!==A?this.element.setAttribute(this.name,I):this.element.removeAttribute(this.name)}}class z extends k{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=S(this,t,i,0))&&void 0!==s?s:A)===T)return;const e=this._$AH,o=t===A&&e!==A||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==A&&(e===A||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class Z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const j={O:o,P:n,A:l,C:1,M:V,L:M,R:v,D:S,I:R,V:k,H:L,N:z,U:H,F:Z},B=i.litHtmlPolyfillSupport;null==B||B(N,R),(null!==(t=i.litHtmlVersions)&&void 0!==t?t:i.litHtmlVersions=[]).push(\"2.8.0\");const D=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new R(i.insertBefore(u(),t),t,void 0,null!=s?s:{})}return l._$AI(t),l};export{j as _$LH,x as html,T as noChange,A as nothing,D as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","/** 虚拟列表 */\n\nexport class VirtualList<T> {\n  /** 需要绑定的DOM对象 */\n  $el: HTMLElement;\n  $content: HTMLElement;\n  /** 列表数据 */\n  data: T[] = [];\n  /** 拉取列表数据 () => Object */\n  getData: () => T[];\n  /** 列表项高度 */\n  itemHeight: number;\n  /** 列表项DOM生成函数 */\n  createItem: (item: T, i: number, array: T[]) => HTMLElement;\n  /** 溢出范围 */\n  overflow: number;\n  /** 滚动距离 */\n  scrollTop = 0;\n  /** 列表渲染起点 */\n  renderStart = -1;\n  /** 列表渲染终点 */\n  renderEnd = -1;\n  /** 可视范围起点 */\n  viewStart = 0;\n  /** 可视范围终点 */\n  viewEnd = 0;\n  /** 节流开关 */\n  throttle = false;\n  /** 已清空状态 */\n  cleared = false;\n  constructor({\n    el,\n    getData,\n    itemHeight,\n    createItem,\n    overflow = 0,\n  }: {\n    el: HTMLElement;\n    getData: () => T[];\n    itemHeight: number;\n    createItem: (item: T, i: number, array: T[]) => HTMLElement;\n    overflow?: number;\n  }) {\n    this.$el = el;\n    this.getData = getData;\n    this.itemHeight = itemHeight;\n    this.createItem = createItem;\n    this.overflow = overflow;\n\n    this.renderStart = -1;\n    this.renderEnd = -1;\n    this.viewStart = 0;\n    this.viewEnd = 0;\n    this.throttle = false;\n    this.cleared = false;\n\n    this.$el.classList.add(\"vlist-container\");\n    this.$content = document.createElement(\"div\");\n    this.$content.classList.add(\"vlist-content\");\n    this.$el.appendChild(this.$content);\n\n    this.$el.addEventListener(\"scroll\", () => {\n      this.cleared || this.handleScroll();\n    });\n\n    this.reload();\n  }\n  /** 重载列表 */\n  reload() {\n    this.clear();\n    this.data = this.getData();\n    console.log(this.data);\n    this.renderStart = -1;\n    this.renderEnd = -1;\n    this.viewStart = 0;\n    this.viewEnd = 0;\n    this.throttle = false;\n    this.handleScroll();\n    this.cleared = false;\n  }\n  /** 更新列表 */\n  update() {\n    this.data = this.getData();\n    this.handleScroll();\n  }\n  handleScroll() {\n    if (!this.throttle) {\n      const clientH = this.$el.clientHeight;\n      const scrollTop = this.$el.scrollTop;\n      clientH && (this.scrollTop = scrollTop);\n      this.viewStart = this.getViewStart(scrollTop);\n      this.viewEnd = this.getViewEnd(scrollTop, clientH);\n      if (this.viewStart <= this.renderStart || this.viewEnd >= this.renderEnd) {\n        this.render(clientH, scrollTop);\n        // console.log(`${this.renderStart} - ${this.renderEnd}`)\n      }\n      // console.log(`${scrollTop} + ${clientH} @ ${this.viewStart} - ${this.viewEnd} # ${this.renderStart} - ${this.renderEnd}`)\n    } else {\n      // console.log(\"none\")\n    }\n  }\n  render(clientH: number, scrollTop: number) {\n    // 保存原渲染范围\n    const oldRenderStart = this.renderStart;\n    const oldRenderEnd = this.renderEnd;\n    // 获取新渲染范围\n    this.renderStart = this.getViewStart(scrollTop) - this.overflow;\n    this.renderEnd = this.getViewEnd(scrollTop, clientH) + this.overflow;\n    // console.log(`old ${oldRenderStart}-${oldRenderEnd} new ${this.renderStart}-${this.renderEnd}`)\n    // 与列表前段比较\n    if (this.renderStart < oldRenderStart) {\n      // 列表前段范围扩张, 添加新列表项\n      const beforeItems = document.createDocumentFragment();\n      const addFrom = Math.max(this.renderStart, 0);\n      const addTo = Math.min(oldRenderStart - 1, this.renderEnd, this.data.length - 1);\n      // console.log(`add ${addFrom}-${addTo}`)\n      for (let i = addFrom; i <= addTo; i++) {\n        beforeItems.appendChild(this.createItem(this.data[i], i, this.data));\n        // console.log(\"add: \" + i)\n      }\n      this.$content.insertBefore(beforeItems, this.$content.firstElementChild);\n    } else {\n      // 若不扩张, 则删除多余的列表项\n      const removeFrom = Math.max(oldRenderStart, 0);\n      const removeTo = Math.min(this.renderStart - 1, oldRenderEnd);\n      // console.log(`remove ${removeFrom}-${removeTo}`)\n      for (let i = removeFrom; i <= removeTo; i++) {\n        const child = this.$content.firstElementChild;\n        child && this.$content.removeChild(child);\n      }\n    }\n\n    // 与列表后段比较\n    if (this.renderEnd > oldRenderEnd) {\n      // 列表后段范围扩张, 添加新列表项\n      const afterItems = document.createDocumentFragment();\n      const addFrom = Math.max(oldRenderEnd + 1, this.renderStart);\n      const addTo = Math.min(this.renderEnd, this.data.length - 1);\n      // console.log(`add ${addFrom}-${addTo}`)\n      for (let i = addFrom; i <= addTo; i++) {\n        afterItems.appendChild(this.createItem(this.data[i], i, this.data));\n        // console.log(\"add: \" + i)\n      }\n      this.$content.appendChild(afterItems);\n    } else {\n      // 若不扩张, 则删除多余的列表项\n      const removeFrom = Math.min(oldRenderEnd, this.data.length - 1);\n      const removeTo = Math.max(this.renderEnd + 1, oldRenderStart);\n      // console.log(`remove ${removeFrom}-${removeTo}`)\n      for (let i = removeFrom; i >= removeTo; i--) {\n        const child = this.$content.lastElementChild;\n        child && this.$content.removeChild(child);\n        // console.log(\"remove: \" + i)\n      }\n    }\n\n    // 设定占位边距\n    this.$content.style.paddingTop = `${\n      this.renderStart > 0 ? this.renderStart * this.itemHeight : 0\n    }px`;\n    this.$content.style.paddingBottom = `${\n      this.renderEnd < this.data.length - 1\n        ? (this.data.length - this.renderEnd - 1) * this.itemHeight\n        : 0\n    }px`;\n  }\n  getViewStart(scrollTop: number) {\n    return Math.floor(scrollTop / this.itemHeight);\n  }\n  getViewEnd(scrollTop: number, clientH: number) {\n    return Math.ceil((scrollTop + clientH) / this.itemHeight) - 1;\n  }\n  // 清空列表\n  clear() {\n    this.data = [];\n    this.$content.innerHTML = \"\";\n    this.$content.style.paddingTop = \"0px\";\n    this.$content.style.paddingBottom = \"0px\";\n    this.cleared = true;\n  }\n  locateStart(n: number) {\n    // 定位到某项开头\n    this.scrollTo(n * this.itemHeight);\n  }\n  locateEnd(n: number) {\n    // 定位到某项末尾\n    this.scrollTo(n * this.itemHeight - this.$el.clientHeight);\n  }\n  scrollTo(top: number) {\n    this.$el.scrollTo({\n      top,\n      behavior: \"auto\",\n    });\n  }\n}\n","import { PlayerOptions, IPlugin } from \"@/types\";\nimport Player from \"@/player\";\n\nexport abstract class BasePlugin implements IPlugin {\n  static pluginName: string;\n  protected readonly player: Player;\n  /** 播放器插件 @deprecated */\n  protected readonly plugin: Player[\"plugin\"];\n  /** 抛出错误 */\n  protected readonly throw: Player[\"throw\"];\n  constructor(player: Player) {\n    this.player = player;\n    this.plugin = player.plugin;\n    this.throw = player.throw;\n  }\n  /** 插件创建后 */\n  init?(player: Player): void;\n  /** 作为插件注册 */\n  apply?(player: Player, options: PlayerOptions): void;\n  /** 所有插件加载后 */\n  ready?(player: Player): void;\n  /** 播放器挂载后 */\n  mounted?(player: Player): void;\n  /** 执行销毁 */\n  destroy?(): void;\n}\n\nexport interface IControls extends IPlugin {\n  $el: HTMLElement;\n  ignored?: boolean;\n}\n\nexport interface IPanel extends IPlugin {\n  $el: HTMLElement;\n  title?: string;\n  mount(\n    el: HTMLElement,\n    opt?: { onToggle?: (flag: boolean) => void; onUnmount?: () => void }\n  ): void;\n  unmount(): void;\n  toggle(flag?: boolean): void;\n}\n\nexport interface IMenu extends IPlugin {\n  icon?: HTMLElement | ((player: Player) => HTMLElement);\n  content: string | HTMLElement | ((player: Player) => string | HTMLElement);\n  onClick?: (player: Player) => void;\n}\n\n/** 界面插件 */\nexport abstract class UIPlugin extends BasePlugin {\n  $el: HTMLElement;\n  $<T extends Element>(selectors: string) {\n    return this.$el.querySelector<T>(selectors);\n  }\n  constructor(player: Player, el: HTMLElement) {\n    super(player);\n    this.$el = el;\n  }\n}\n\n/** 菜单插件 */\nexport abstract class MenuPlugin extends BasePlugin implements IMenu {\n  abstract name: string;\n  abstract content: string | HTMLElement | ((player: Player) => string | HTMLElement);\n  apply(player: Player) {\n    player.menu.register(this.name, this);\n  }\n}\n\n/** 控制组件插件 */\nexport abstract class ControlsPlugin extends UIPlugin implements IControls {\n  abstract name: string;\n  apply(player: Player, options: PlayerOptions) {\n    player.controls.register(this.name, this);\n  }\n  show() {\n    this.$el.style.display = \"\";\n  }\n  hide() {\n    this.$el.style.display = \"none\";\n  }\n}\n\n/** 面板插件 */\nexport abstract class PanelPlugin extends UIPlugin implements IPanel {\n  abstract name: string;\n  abstract title?: string;\n  container?: HTMLElement;\n  onUnmount?: () => void;\n  onToggle?: (flag: boolean) => void;\n  shown = false;\n  constructor(player: Player, el: HTMLElement) {\n    super(player, el);\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    player.panel.register(this.name, this);\n  }\n  /** 挂载 */\n  mount(el: HTMLElement, opt?: { onToggle?: (flag: boolean) => void; onUnmount?: () => void }) {\n    el.appendChild(this.$el);\n    this.unmount();\n    this.onToggle = opt?.onToggle;\n    this.onUnmount = opt?.onUnmount;\n  }\n  /** 卸载 */\n  unmount() {\n    this.toggle(false);\n    this.onUnmount?.();\n    this.onToggle = undefined;\n    this.onUnmount = undefined;\n  }\n  /** 切换显示隐藏状态 */\n  toggle(flag?: boolean) {\n    this.shown = flag ?? !this.shown;\n    this.onToggle?.(this.shown);\n  }\n}\n\nexport interface PanelContainer {\n  mount: (panel: PanelPlugin) => void;\n}\nexport type UIOptionsItem<T> = (new (player: Player) => T) | T | string;\n","import { debounce, secondToTime } from \"@/utils\";\nimport { dateFormat } from \"@/utils/index\";\nimport { DanmakuItem } from \"@plugin/danmaku/types\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { VirtualList } from \"./VirtualList\";\nimport \"./style.scss\";\nimport Danmaku from \"@plugin/danmaku/danmaku\";\nimport { PanelPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    \"danmakuList:autoScrollChange\": (flag: boolean) => void;\n    \"danmakuList:select\": (dan: DanmakuItem[]) => void;\n  }\n  interface PlayerPlugins {\n    danmakuList?: DanmakuList;\n  }\n}\n\nconst template = (clearSelect: () => void) => html`\n  <div class=\"${classPrefix}-danmakulist\">\n    <div class=\"${classPrefix}-danmakulist-main\">\n      <div class=\"${classPrefix}-danmakulist-head\">\n        <div class=\"list-column col-time\">时间</div>\n        <div class=\"list-column col-content\">弹幕内容</div>\n        <div class=\"list-column col-date\">发送时间</div>\n      </div>\n      <div class=\"${classPrefix}-danmakulist-select\">\n        <div class=\"${classPrefix}-danmakulist-select-info\"></div>\n        <div class=\"${classPrefix}-danmakulist-select-operate\">\n          <div class=\"list-operate-btn\" @click=${clearSelect}>取消选择</div>\n        </div>\n      </div>\n      <div class=\"${classPrefix}-danmakulist-container\"></div>\n      <div class=\"${classPrefix}-danmakulist-status\">\n        <div class=\"status-loading-text\">弹幕列表装填中……</div>\n        <div class=\"status-failed-text\">弹幕加载失败 X_X</div>\n        <div class=\"status-empty-text\">还没有弹幕哦，快来发弹幕^_^</div>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-danmakulist-foot\">\n      <div class=\"${classPrefix}-danmakulist-foot-left\">\n        <span class=\"${classPrefix}-danmakulist-autoscroll\">列表滚动[关]</span>\n      </div>\n      <div class=\"${classPrefix}-danmakulist-foot-right\"></div>\n    </div>\n  </div>\n`;\n\nconst getDanmakuListItem = (\n  danmaku: DanmakuItem,\n  index: number,\n  {\n    operation,\n    onClick,\n    onDblclick,\n    selected,\n    focused,\n    title,\n  }: {\n    operation: (dm: DanmakuItem) => [string, (dm: DanmakuItem) => void, unknown][];\n    onClick: (e: MouseEvent, dm: DanmakuItem) => void;\n    onDblclick: (e: MouseEvent, dm: DanmakuItem) => void;\n    selected: (dm: DanmakuItem) => boolean;\n    focused: (dm: DanmakuItem) => boolean;\n    title: (dm: DanmakuItem) => string;\n  }\n) => {\n  const t = html`\n    <div\n      class=\"${`list-row ${selected(danmaku) ? \"is-selected\" : \"\"} ${\n        focused(danmaku) ? \"is-focused\" : \"\"\n      }`.trim()}\"\n      data-index=\"${index}\"\n      data-mode=\"${danmaku.mode}\"\n      @dblclick=${(e: MouseEvent) => {\n        onDblclick(e, danmaku);\n      }}\n      @click=${(e: MouseEvent) => {\n        onClick(e, danmaku);\n      }}\n      title=\"${title(danmaku)}\"\n    >\n      <div class=\"list-cell col-time\">${secondToTime(danmaku.time)}</div>\n      <div class=\"list-cell col-content\">${danmaku.content}</div>\n      <div class=\"list-cell col-date\">\n        ${danmaku.date ? dateFormat(new Date(danmaku.date * 1000), \"yy-MM-dd HH:mm\") : \"-\"}\n      </div>\n      ${operation.length\n        ? html`<div class=\"list-operate\" title=\"\">\n            ${operation(danmaku).map(\n              ([label, onClick]) => html`<div\n                class=\"list-operate-btn\"\n                @click=${(e: MouseEvent) => {\n                  e.stopPropagation();\n                  onClick(danmaku);\n                }}\n              >\n                ${label}\n              </div>`\n            )}\n          </div>`\n        : \"\"}\n    </div>\n  `;\n  const fragment = new DocumentFragment();\n  render(t, fragment);\n  return fragment.firstElementChild! as HTMLElement;\n};\n\nexport default class DanmakuList extends PanelPlugin {\n  static readonly pluginName = \"danmakuList\";\n  name = \"danmakuList\";\n  title = \"弹幕列表\";\n  player: Player;\n  danmaku: Danmaku;\n  data: DanmakuItem[] = [];\n  selected: DanmakuItem[] = [];\n  private focused: DanmakuItem | null = null;\n  sortedBy: keyof DanmakuItem = \"time\";\n  sortOrder = 1 | -1;\n\n  list!: VirtualList<DanmakuItem>;\n  /** 是否随播放自动滚动 */\n  autoScroll = true;\n  /** 自动滚动冻结 */\n  frozen = false;\n\n  $main: HTMLElement;\n  $container: HTMLElement;\n  $status: HTMLElement;\n  $colTime: HTMLElement;\n  $colDate: HTMLElement;\n  $colContent: HTMLElement;\n  $autoscroll: HTMLElement;\n\n  $select: HTMLElement;\n  $selectInfo: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(\n      template(() => this.select([])),\n      fragment\n    );\n    super(player, fragment.querySelector(`.${classPrefix}-danmakulist`)!);\n    this.player = player;\n    this.danmaku = player.plugin.danmaku!;\n    this.$main = this.$(`.${classPrefix}-danmakulist-main`)!;\n    this.$container = this.$(`.${classPrefix}-danmakulist-container`)!;\n    this.$status = this.$(`.${classPrefix}-danmakulist-status`)!;\n    this.$colTime = this.$(\".col-time\")!;\n    this.$colDate = this.$(\".col-date\")!;\n    this.$colContent = this.$(\".col-content\")!;\n    this.$autoscroll = this.$(`.${classPrefix}-danmakulist-autoscroll`)!;\n\n    this.$select = this.$(`.${classPrefix}-danmakulist-select`)!;\n    this.$selectInfo = this.$(`.${classPrefix}-danmakulist-select-info`)!;\n\n    this.$colTime.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"time\") {\n        this.sort(\"time\", -this.sortOrder);\n      } else {\n        this.sort(\"time\", 1);\n      }\n    };\n    this.$colDate.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"date\") {\n        this.sort(\"date\", -this.sortOrder);\n      } else {\n        this.sort(\"date\", 1);\n      }\n    };\n    this.$colContent.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"content\") {\n        this.sort(\"content\", -this.sortOrder);\n      } else {\n        this.sort(\"content\", 1);\n      }\n    };\n    this.$autoscroll.onclick = () => {\n      this.setAutoScroll(!this.autoScroll);\n    };\n    this.player.on(\"danmakuList:autoScrollChange\", (flag) => {\n      if (flag) {\n        this.$autoscroll.innerText = \"列表滚动[开]\";\n      } else {\n        this.$autoscroll.innerText = \"列表滚动[关]\";\n      }\n    });\n    if (this.autoScroll) {\n      this.player.emit(\"danmakuList:autoScrollChange\", true);\n    }\n    this.player.on(\"danmakuList:select\", (dm) => {\n      const num = dm.length;\n      this.$selectInfo.innerText = num ? `已选择${num}条弹幕` : \"\";\n      this.$select.classList.toggle(\"is-show\", num > 1);\n    });\n  }\n  mount(\n    el: HTMLElement,\n    opt?: { onToggle?: ((flag: boolean) => void) | undefined; onUnmount?: (() => void) | undefined }\n  ): void {\n    super.mount(el, opt);\n    const pos = this.list?.scrollTop;\n    console.log(\"mountpos: \" + pos);\n    requestAnimationFrame(() => {\n      pos != null && this.list?.scrollTo(pos);\n      -this.autoScroll && this.locateByTime(this.player.currentTime);\n    });\n  }\n  toggle(flag?: boolean | undefined): void {\n    super.toggle(flag);\n    if (this.shown) {\n      const pos = this.list?.scrollTop;\n      pos != null && this.list?.scrollTo(pos);\n      this.autoScroll && this.locateByTime(this.player.currentTime);\n    }\n  }\n  init() {\n    const api = this.plugin.danmaku?.invoke;\n    const operate = this.plugin.danmakuOperate;\n    this.list = new VirtualList({\n      el: this.$container,\n      getData: () => {\n        return this.data;\n      },\n      itemHeight: 24,\n      createItem: (danmaku, i) =>\n        getDanmakuListItem(danmaku, i, {\n          operation: (dm) => {\n            const myDanmaku = this.player.userId && dm.user == this.player.userId;\n            return [\n              [\n                \"举报\",\n                (dm: DanmakuItem) => {\n                  operate?.report(dm);\n                },\n                !myDanmaku && api?.report,\n              ],\n              [\n                \"屏蔽\",\n                (dm: DanmakuItem) => {\n                  operate?.blockUser(dm.user, true);\n                },\n                !myDanmaku && api?.blockUser,\n              ],\n              [\n                \"撤回\",\n                (dm: DanmakuItem) => {\n                  operate?.recall(dm);\n                },\n                myDanmaku && api?.recall,\n              ],\n            ].filter((v) => v[2]) as [string, (dm: DanmakuItem) => void, unknown][];\n          },\n          onClick: (e, dm) => {\n            this.clickSelect(dm, e.shiftKey, e.ctrlKey);\n          },\n          onDblclick: (e, dm) => {\n            this.player.seek(dm.time);\n          },\n          selected: (dm) => this.selected.includes(dm),\n          focused: (dm) => this.focused == dm,\n          title: (dm) =>\n            `${dm.content}\\n${\n              danmaku.date ? dateFormat(new Date(danmaku.date * 1000), \"yyyy-MM-dd HH:mm:ss\") : \"-\"\n            } @ ${secondToTime(danmaku.time, false)}`,\n        }),\n      overflow: 5,\n    });\n\n    const unFreeze = debounce(() => {\n      this.frozen = false;\n    }, 5000);\n    this.list.$el.addEventListener(\"wheel\", () => {\n      this.frozen = true;\n      unFreeze();\n    });\n    this.list.$el.addEventListener(\"mousedown\", () => {\n      this.frozen = true;\n      unFreeze();\n    });\n    this.$main.addEventListener(\"mouseleave\", () => {\n      this.frozen = false;\n    });\n    // 切换到新分P时，清空上一P弹幕\n    this.player.on(\"videoChange\", () => {\n      this.clear();\n    });\n    this.player.on(\"danmaku:add\", (dan) => {\n      this.fill(dan);\n      if (this.autoScroll) {\n        this.sort(\"time\");\n      }\n    });\n    this.player.on(\"timeupdate\", (time) => {\n      if (this.autoScroll && !this.frozen) {\n        this.locateByTime(time);\n      }\n    });\n    this.player.on(\"danmaku:select\", (dan) => {\n      this.locateByDanmaku(dan);\n      this.select([dan]);\n    });\n  }\n  /** 弹幕列表排序 */\n  sort(sortedBy: keyof DanmakuItem, sortOrder = 1) {\n    this.sortedBy = sortedBy;\n    this.sortOrder = sortOrder;\n    this.data.sort((a: any, b: any) => {\n      const at = a[this.sortedBy];\n      const bt = b[this.sortedBy];\n      // 排序\n      return at > bt ? sortOrder : at == bt ? 0 : -sortOrder;\n    });\n    this.list.reload();\n  }\n  /** 装填弹幕(重载列表) */\n  fill(dan: DanmakuItem[]) {\n    this.data = this.data.concat(dan);\n    // 弹幕列表装填\n    if (!this.data.length) {\n      this.setStatus(\"empty\");\n    } else {\n      this.reload();\n      this.setStatus();\n    }\n  }\n  /** 添加弹幕(不重载列表) */\n  add(dan: DanmakuItem[]) {\n    this.data = this.data.concat(dan);\n    // 弹幕列表装填\n    if (!this.data.length) {\n      this.setStatus(\"empty\");\n    } else {\n      this.list.update();\n      this.setStatus();\n    }\n  }\n  /** 重载弹幕列表 */\n  reload() {\n    this.sort(this.sortedBy, this.sortOrder);\n    if (this.autoScroll) {\n      this.locateByTime(this.player.currentTime);\n    }\n  }\n  clear() {\n    // 清空弹幕列表\n    this.list.clear();\n    this.data = [];\n    this.setStatus(\"loading\");\n  }\n  setStatus(status = \"\") {\n    this.$status.dataset.status = status;\n    console.log(\"弹幕加载状态\" + status);\n  }\n  /** 根据播放时间定位 */\n  locateByTime(time: number) {\n    let viewEnd = this.list.viewEnd;\n    if (this.data[viewEnd]?.time > time) {\n      // 如果列表可视区域最后一项的时间超过当前时间, 则重头开始遍历, 否则从列表可视区域最后一项遍历\n      viewEnd = 0;\n    }\n    while (this.data[viewEnd + 1]?.time <= time) {\n      // 遍历并检测下一项弹幕时间是否超过当前时间, 若超过, 则以当前弹幕为定位点\n      viewEnd++;\n    }\n    this.list.locateEnd(viewEnd);\n  }\n  /** 定位弹幕 */\n  locateByDanmaku(dan: DanmakuItem) {\n    const index = this.data.indexOf(dan);\n    if (index > -1) {\n      this.list.locateStart(index);\n      this.frozen = true;\n    }\n  }\n  setAutoScroll(flag: boolean) {\n    this.player.emit(\"danmakuList:autoScrollChange\", flag);\n    // 设置自动滚动\n    this.autoScroll = flag;\n    if (flag) {\n      this.frozen = false;\n      this.sort(\"time\");\n      this.locateByTime(this.player.currentTime);\n      this.list.handleScroll();\n    }\n  }\n  /** 设置选定状态 */\n  select(dan: DanmakuItem[], focused?: DanmakuItem) {\n    this.selected = dan;\n    const selectedIndex: number[] = [];\n    this.focused = focused || (dan.length == 1 ? dan[0] : null);\n    const focusedIndex = this.data.indexOf(this.focused!);\n    dan.forEach((dm) => {\n      const index = this.data.indexOf(dm);\n      selectedIndex.push(index);\n    });\n    for (const item of this.list.$content.children) {\n      item.classList.toggle(\n        \"is-selected\",\n        selectedIndex.includes(Number((item as HTMLElement).dataset.index))\n      );\n      item.classList.toggle(\n        \"is-focused\",\n        focusedIndex == Number((item as HTMLElement).dataset.index)\n      );\n    }\n    this.player.emit(\"danmakuList:select\", this.selected);\n  }\n  /** 设置某条弹幕的选定状态，若选定则聚焦弹幕，否则取消聚焦 */\n  private toggleSelect(dm: DanmakuItem, flag: boolean) {\n    const focusedItem = this.list.$content.querySelector(\n      `[data-index=\"${this.data.indexOf(this.focused!)}\"]`\n    );\n    const item = this.list.$content.querySelector(`[data-index=\"${this.data.indexOf(dm)}\"]`);\n    if (flag) {\n      if (!this.selected.includes(dm)) {\n        this.selected.push(dm);\n      }\n      this.focused = dm;\n      item?.classList.add(\"is-selected\");\n      item?.classList.add(\"is-focused\");\n    } else if (!flag) {\n      const index = this.selected.indexOf(dm);\n      if (index > -1) {\n        this.selected.splice(index, 1);\n      }\n      item?.classList.remove(\"is-selected\");\n      focusedItem?.classList.remove(\"is-focused\");\n    }\n    this.player.emit(\"danmakuList:select\", this.selected);\n  }\n  /** 单击选定弹幕 */\n  private clickSelect(dm: DanmakuItem, shift?: boolean, ctrl?: boolean) {\n    if (shift) {\n      // 按住shift，则以已聚焦弹幕到当前选择弹幕范围选定弹幕，若无已聚焦弹幕，则只选定该弹幕\n      // 该操作既不会取消选择已选弹幕，也不会重新设定已存在的聚焦弹幕\n      if (this.focused) {\n        const index = this.data.indexOf(dm);\n        const focusedIndex = this.data.indexOf(this.focused!);\n        if (index == -1 || focusedIndex == -1) {\n          // 若弹幕列表中没有该弹幕，或未设定已聚焦弹幕，则只选定该弹幕\n          this.select([dm]);\n        } else {\n          const from = index < focusedIndex ? index : focusedIndex;\n          const to = (index < focusedIndex ? focusedIndex : index) + 1;\n          this.select(this.data.slice(from, to), this.focused);\n        }\n      } else {\n        this.select([dm]);\n      }\n    } else if (ctrl) {\n      // 按住ctrl，则将该条弹幕添加到已选择弹幕中，若该弹幕已选择，则移除选择\n      // 选定弹幕时设定聚焦状态，移除选择时移除聚焦状态\n      this.toggleSelect(dm, !this.selected.includes(dm));\n    } else {\n      // 如果该弹幕是唯一一条已选择弹幕，则清除选择，否则选择该条弹幕\n      if (this.selected.length == 1 && this.selected[0] == dm) {\n        this.select([]);\n      } else {\n        this.select([dm]);\n      }\n    }\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { createArray } from \"@/utils\";\n\nconst template = ({ divider }: { divider: number }) => html` <div\n  class=\"mpui-slider mpui-slider-horizontal\"\n  style=\"position: relative; width: 100%; height: 100%\"\n>\n  <div\n    class=\"mpui-slider-track\"\n    style=\"\n      position: absolute;\n      width: 100%;\n      top: 50%;\n      transform: translateY(-50%);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    \"\n  >\n    <div class=\"mpui-slider-bar\" style=\"position: absolute; left: 0; height: 100%\"></div>\n    <div class=\"mpui-slider-thumb-track\" style=\"height: 0px\">\n      <div\n        class=\"mpui-slider-thumb\"\n        style=\"position: absolute; transform: translate(-50%, -50%)\"\n      ></div>\n      ${divider\n        ? html`\n            <div class=\"mpui-slider-divider\">\n              ${createArray(divider, html`<div class=\"mpui-slider-divider-dot\"></div>`)}\n            </div>\n          `\n        : \"\"}\n    </div>\n  </div>\n</div>`;\n\ninterface SliderOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 最小值 */\n  min: number;\n  /** 最大值 */\n  max: number;\n  /** 步长(若不填或为0，则没有步长限制) */\n  step?: number;\n  /** 分割线 */\n  divider?: number | boolean;\n  /** 默认值(不填的情况下默认值为0) */\n  value?: number;\n  /** 数值更改时触发 */\n  onChange?: (value: number) => void;\n  /** 拖动引发数值更改时触发 */\n  onDrag?: (value: number) => void;\n  /** 开始拖动时触发 */\n  onDragStart?: (value: number) => void;\n  /** 结束拖动时触发 */\n  onDragEnd?: (value: number) => void;\n}\n\n/** 横向滑动条 */\nexport class Slider implements SliderOptions {\n  readonly container: HTMLElement;\n  readonly min: number;\n  readonly max: number;\n  /** 步长 */\n  readonly step: number;\n  /** 分割线 */\n  readonly divider: number;\n  /** 数值 */\n  value: number;\n  onChange?: (value: number) => void;\n  onDragStart?: (value: number) => void;\n  onDragEnd?: (value: number) => void;\n  onDrag?: (value: number) => void;\n\n  // 部件\n  $el: HTMLElement;\n\n  $track: HTMLElement;\n\n  $bar: HTMLElement;\n\n  $thumbTrack: HTMLElement;\n\n  $thumb: HTMLElement;\n\n  constructor({\n    container,\n    min,\n    max,\n    step,\n    divider = 0,\n    value = 0,\n    onChange,\n    onDragStart,\n    onDragEnd,\n    onDrag,\n  }: SliderOptions) {\n    this.container = container;\n    this.min = min;\n    this.max = max;\n    this.step = step || 0;\n    this.divider = divider ? (typeof divider === \"boolean\" ? this.step : divider) : 0;\n    this.value = isNaN(value) ? value : Number(value);\n    this.onChange = onChange;\n    this.onDragStart = onDragStart;\n    this.onDragEnd = onDragEnd;\n    this.onDrag = onDrag;\n\n    render(template({ divider: this.divider }), container);\n\n    this.$el = this.container.querySelector(\".mpui-slider\")!;\n    this.$track = this.$el.querySelector(\".mpui-slider-track\")!; // 滑动条轨道\n    this.$bar = this.$track.querySelector(\".mpui-slider-bar\")!; // 滑动条痕迹\n    this.$thumbTrack = this.$track.querySelector(\".mpui-slider-thumb-track\")!; // 滑块轨道\n    this.$thumb = this.$track.querySelector(\".mpui-slider-thumb\")!; // 滑块\n\n    // 滑动条事件\n    this.$el.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      const e: MouseEvent = event;\n      // 鼠标X位置\n      const { clientX } = e;\n      // 滑块长度\n      const trackLength = this.$track.offsetWidth;\n      // 滑块可滑动距离\n      let nMax = this.$thumbTrack.offsetWidth;\n      nMax = nMax || trackLength;\n      // 滑块轨道与总轨道距离差\n      const thumbTrackX = (trackLength - nMax) / 2;\n      // 滑动条位置\n      const nLeft = this.$el.getBoundingClientRect().left;\n      // 计算滑块位置\n      let nLength = clientX - nLeft - thumbTrackX;\n      // 限制滑块移动位置\n      nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n      const value = this.step\n        ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step + this.min\n        : (nLength / nMax) * (this.max - this.min) + this.min;\n      // 开始滑动事件\n      this.onDragStart?.(value);\n      // 监测数据更新并执行函数\n      if (this.value != value) {\n        this.drag(value);\n      }\n\n      const mousemoveEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        // 鼠标X位置\n        const { clientX } = e;\n        // 鼠标移动时取消默认行为，避免选中其他元素或文字\n        e.preventDefault();\n        e.stopPropagation();\n        // 获取鼠标移动后滑块应该移动到的位置\n        let nLength = clientX - nLeft - thumbTrackX;\n        // 限制滑块移动位置\n        nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n\n        const value = this.step\n          ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step +\n            this.min\n          : (nLength / nMax) * (this.max - this.min) + this.min;\n        // 监测数据更新并执行函数\n        if (this.value != value) {\n          this.drag(value);\n        }\n        window.getSelection()?.removeAllRanges();\n      };\n\n      const removeEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        e.stopPropagation();\n        window.getSelection()?.removeAllRanges();\n        document.removeEventListener(\"mousemove\", mousemoveEvent);\n        document.removeEventListener(\"mouseup\", removeEvent);\n        this.onDragEnd?.(value);\n      };\n\n      document.addEventListener(\"mousemove\", mousemoveEvent);\n      document.addEventListener(\"mouseup\", removeEvent);\n    });\n\n    // 设置滑块初始位置\n    this.setValue(this.value);\n  }\n\n  /** 设置滑动条值 */\n  public setValue(value: number) {\n    this.value = value <= this.min ? this.min : value >= this.max ? this.max : value;\n    // 计算滑块位置\n    const per = (this.value - this.min) / (this.max - this.min);\n    // 修改滑块位置\n    this.$thumb.style.left = `${per * 100}%`;\n    // 修改滑动痕迹高度\n    this.$bar.style.width = `${per * 100}%`;\n    // 触发数据更改事件\n    this.onChange?.(this.value);\n  }\n\n  /** 拖动滑动条到特定的值 */\n  public drag(value: number) {\n    this.setValue(value);\n    // 触发拖动事件\n    this.onDrag?.(this.value);\n  }\n}\n","import { html, render } from \"lit-html\";\n\nconst template = () => html`\n  <div\n    class=\"mpui-slider mpui-slider-vertical\"\n    style=\"position: relative; width: 100%; height: 100%\"\n  >\n    <div\n      class=\"mpui-slider-track\"\n      style=\"\n        position: absolute;\n        height: 100%;\n        left: 50%;\n        transform: translateX(-50%);\n        display: flex;\n        justify-content: center;\n        align-items: center\n      \"\n    >\n      <div class=\"mpui-slider-bar\" style=\"position: absolute; bottom: 0; width: 100%\"></div>\n      <div class=\"mpui-slider-thumb-track\" style=\"width: 0px\">\n        <div\n          class=\"mpui-slider-thumb\"\n          style=\"position: absolute; transform: translate(-50%, -50%)\"\n        ></div>\n      </div>\n    </div>\n  </div>\n`;\n\ninterface SliderVerticalOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 最小值 */\n  min: number;\n  /** 最大值 */\n  max: number;\n  /** 步长(若不填或为0，则没有步长限制) */\n  step?: number;\n  /** 默认值(不填的情况下默认值为0) */\n  value?: number;\n  /** 数值更改时触发 */\n  onChange?: (value: number) => void;\n  /** 拖动引发数值更改时触发 */\n  onDrag?: (value: number) => void;\n  /** 开始拖动时触发 */\n  onDragStart?: (value: number) => void;\n  /** 结束拖动时触发 */\n  onDragEnd?: (value: number) => void;\n}\n\n/** 横向滑动条 */\nexport class SliderVertical implements SliderVerticalOptions {\n  readonly container: HTMLElement;\n  readonly min: number;\n  readonly max: number;\n  /** 步长 */\n  readonly step: number;\n  /** 数值 */\n  value: number;\n  onChange?: (value: number) => void;\n  onDragStart?: (value: number) => void;\n  onDragEnd?: (value: number) => void;\n  onDrag?: (value: number) => void;\n  // 部件\n  $el: HTMLElement;\n  $track: HTMLElement;\n  $bar: HTMLElement;\n  $thumbTrack: HTMLElement;\n  $thumb: HTMLElement;\n\n  constructor({\n    container,\n    min,\n    max,\n    step,\n    value = 0,\n    onChange,\n    onDragStart,\n    onDragEnd,\n    onDrag,\n  }: SliderVerticalOptions) {\n    this.container = container;\n    this.min = min;\n    this.max = max;\n    this.step = step || 0;\n    this.value = isNaN(value) ? value : Number(value);\n    this.onChange = onChange;\n    this.onDragStart = onDragStart;\n    this.onDragEnd = onDragEnd;\n    this.onDrag = onDrag;\n\n    render(template(), container);\n\n    this.$el = this.container.querySelector(\".mpui-slider\")!;\n    this.$track = this.$el.querySelector(\".mpui-slider-track\")!; // 滑动条轨道\n    this.$bar = this.$track.querySelector(\".mpui-slider-bar\")!; // 滑动条痕迹\n    this.$thumbTrack = this.$track.querySelector(\".mpui-slider-thumb-track\")!; // 滑块轨道\n    this.$thumb = this.$track.querySelector(\".mpui-slider-thumb\")!; // 滑块\n\n    // 滑动条事件\n    // 点击鼠标事件\n    this.$el.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      const e: MouseEvent = event;\n      // 鼠标Y位置\n      const { clientY } = e;\n      // 滑块长度\n      const trackLength = this.$track.offsetHeight;\n      // 滑块可滑动距离\n      let nMax = this.$thumbTrack.offsetHeight;\n      nMax = nMax || trackLength;\n      // 滑块轨道与总轨道距离差\n      const thumbTrackY = (trackLength - nMax) / 2;\n      // 滑动条位置\n      const nTop = this.$el.getBoundingClientRect().top;\n      // 计算滑块位置\n      let nLength = nMax - (clientY - nTop - thumbTrackY);\n      // 限制滑块移动位置\n      nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n      const value = this.step\n        ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step + this.min\n        : (nLength / nMax) * (this.max - this.min) + this.min;\n      // 开始滑动事件\n      this.onDragStart?.(value);\n      // 监测数据更新并执行函数\n      if (this.value != value) {\n        this.drag(value);\n      }\n\n      const mousemoveEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        // 鼠标X位置\n        const { clientY } = e;\n        // 鼠标移动时取消默认行为，避免选中其他元素或文字\n        e.preventDefault();\n        e.stopPropagation();\n        // 获取鼠标移动后滑块应该移动到的位置\n        let nLength = nMax - (clientY - nTop - thumbTrackY);\n        // 限制滑块移动位置\n        nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n\n        const value = this.step\n          ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step +\n            this.min\n          : (nLength / nMax) * (this.max - this.min) + this.min;\n        // 监测数据更新并执行函数\n        if (this.value != value) {\n          this.drag(value);\n        }\n        window.getSelection()?.removeAllRanges();\n      };\n      const removeEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        e.stopPropagation();\n        window.getSelection()?.removeAllRanges();\n        document.removeEventListener(\"mousemove\", mousemoveEvent);\n        document.removeEventListener(\"mouseup\", removeEvent);\n        this.onDragEnd?.(value);\n      };\n\n      document.addEventListener(\"mousemove\", mousemoveEvent);\n      document.addEventListener(\"mouseup\", removeEvent);\n    });\n    // 设置滑块初始位置\n    this.setValue(this.value);\n  }\n\n  /** 设置滑动条值 */\n  setValue(value: number) {\n    // this.value = value <= this.min ? this.min : value >= this.max ? this.max : value;\n    this.value = Math.max(Math.min(value, this.max), this.min);\n    // 计算滑块位置\n    const per = (this.value - this.min) / (this.max - this.min);\n    // 修改滑块位置\n    this.$thumb.style.top = `${(1 - per) * 100}%`;\n    // 修改滑动痕迹高度\n    this.$bar.style.height = `${Math.max(Math.min(per, 1), 0) * 100}%`;\n    // 执行相应函数\n    this.onChange?.(value);\n  }\n\n  /** 拖动滑动条到特定的值 */\n  private drag(value: number) {\n    this.setValue(value);\n    // 触发拖动事件\n    this.onDrag?.(this.value);\n  }\n}\n","import { html, render, TemplateResult } from \"lit-html\";\n\nconst templateWrap = ({\n  list,\n  template,\n}: {\n  list: PickerOptionsItem[];\n  template?: PickerItemTemplate;\n}) => html`\n  <ul class=\"mpui-picker\">\n    ${list.map(\n      (item, index) => html`\n        <li class=\"mpui-picker-item\" data-value=\"${item.value}\">\n          ${template?.(item, index) || item.label || item.value}\n        </li>\n      `\n    )}\n  </ul>\n`;\n\n/** 选择器函数 */\ntype PickerItemTemplate = (item: PickerOptionsItem, index?: number) => string | TemplateResult;\n\ninterface PickerOptionsItem {\n  value: string | number;\n  label?: string;\n  disabled?: boolean;\n  [key: string]: any;\n}\n\ninterface PickerOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 选择列表 */\n  list: PickerOptionsItem[];\n  /** 选择项标签模板 */\n  template?: PickerItemTemplate;\n  /** 默认值(不填的情况下默认值为undefined) */\n  value?: string | number;\n  /** 值更改时触发 */\n  onChange?: (value?: string | number) => void;\n  /** 选择某一项时触发 */\n  onPick?: (value?: string | number) => void;\n  /** 相等条件 */\n  condition?: (item: string, value?: string | number) => boolean;\n}\n\n/** 单选选择器 */\nexport class Picker implements PickerOptions {\n  readonly container: HTMLElement;\n\n  readonly template?: PickerItemTemplate;\n\n  list: PickerOptionsItem[];\n\n  /** 已选值 */\n  value?: string | number;\n\n  onChange?: (value?: string | number) => void;\n\n  onPick?: (value?: string | number) => void;\n\n  $el!: HTMLElement;\n\n  /** 相等条件 */\n  condition?: (item: string, value?: string | number) => boolean;\n\n  /** 选择项标签集合 */\n  private $items!: NodeListOf<HTMLElement>;\n\n  constructor({ container, value, onChange, onPick, list, template, condition }: PickerOptions) {\n    this.container = container;\n    this.list = list;\n    this.value = value;\n    this.onChange = onChange; // 更新数据时需要执行的函数\n    this.onPick = onPick; // 更新数据时需要执行的函数\n    this.template = template;\n    this.condition = condition;\n    this.reload();\n  }\n\n  /** 重载，一般用于列表项更改 */\n  public reload(value?: string | number) {\n    render(templateWrap({ list: this.list, template: this.template }), this.container);\n    this.$el = this.container.querySelector(\".mpui-picker\")!;\n    this.$items = this.$el.querySelectorAll(\".mpui-picker-item\"); // 标签集合\n    this.$items.forEach((item) => {\n      item.addEventListener(\"click\", () => {\n        this.pick(item.getAttribute(\"data-value\") || undefined);\n      });\n    });\n    this.setValue(value ?? this.value);\n  }\n\n  /** 设置值 */\n  public setValue(value?: string | number) {\n    this.$items.forEach((n, i) => {\n      if (\n        this.condition\n          ? this.condition(n.getAttribute(\"data-value\")!, value)\n          : n.getAttribute(\"data-value\") == value\n      ) {\n        n.classList.add(\"is-checked\");\n      } else {\n        n.classList.remove(\"is-checked\");\n      }\n    });\n    this.value = value;\n    this.onChange?.(value);\n  }\n\n  /** 点选一个选项 */\n  public pick(value?: string) {\n    this.setValue(value);\n    this.onPick?.(value);\n  }\n}\n","import { html, render, TemplateResult } from \"lit-html\";\n\nconst templateWrap = ({\n  list,\n  template,\n}: {\n  list: PickerOptionsItem[];\n  template?: PickerItemTemplate;\n}) => html`\n  <ul class=\"mpui-picker\">\n    ${list.map(\n      (item, index) => html`\n        <li class=\"mpui-picker-item\" data-value=\"${item.value}\">\n          ${template?.(item, index) || item.label || item.value}\n        </li>\n      `\n    )}\n  </ul>\n`;\n\n/** 选择器函数 */\ntype PickerItemTemplate = (item: PickerOptionsItem, index?: number) => string | TemplateResult;\n\ninterface PickerOptionsItem {\n  value: string;\n  label?: string;\n  disabled?: boolean;\n  [key: string]: any;\n}\n\ninterface MultiPickerOptions {\n  /** 绑定的dom对象 */\n  container: HTMLElement;\n  /** 选择列表 */\n  list: PickerOptionsItem[];\n  /** 选择项标签模板 */\n  template?: PickerItemTemplate;\n  /** 默认值(不填的情况下默认值为[]) */\n  value?: string[];\n  /** 值更改时触发 */\n  onChange?: (value: string[]) => void;\n  /** 选择/取消选择某一项时触发 */\n  onToggle?: (value: string, flag: boolean) => void;\n}\n\n/** 多项选择器 */\nexport class MultiPicker implements MultiPickerOptions {\n  readonly container: HTMLElement;\n\n  readonly template?: PickerItemTemplate;\n\n  list: PickerOptionsItem[];\n\n  valueSet: Set<string>;\n\n  /** 已选值 */\n  get value() {\n    return [...this.valueSet];\n  }\n\n  onChange?: (value: string[]) => void;\n\n  onToggle?: (value: string, flag: boolean) => void;\n\n  $el!: HTMLElement;\n\n  /** 选择项标签集合 */\n  private $items!: NodeListOf<HTMLElement>;\n\n  constructor({ container, value = [], list, onChange, onToggle }: MultiPickerOptions) {\n    this.container = container;\n    this.list = list;\n    this.valueSet = new Set(value);\n    this.onChange = onChange; // 更新数据时需要执行的函数\n    this.onToggle = onToggle; // 更新数据时需要执行的函数\n    this.reload();\n  }\n\n  /** 重载，一般用于列表项更改 */\n  public reload(value?: string[]) {\n    render(templateWrap({ list: this.list, template: this.template }), this.container);\n    this.$el = this.container.querySelector(\".mpui-picker\")!;\n    this.$items = this.$el.querySelectorAll(\".mpui-picker-item\"); // 标签集合\n    this.$items.forEach((item) => {\n      item.addEventListener(\"click\", () => {\n        this.toggle(item.getAttribute(\"data-value\")!);\n      });\n    });\n    this.setValue(value ?? this.value);\n  }\n\n  /** 设置值 */\n  public setValue(value: string[]) {\n    this.valueSet = new Set(value);\n    this.$items.forEach((n, i) => {\n      if (this.valueSet.has(n.getAttribute(\"data-value\")!)) {\n        n.classList.add(\"is-checked\");\n      } else {\n        n.classList.remove(\"is-checked\");\n      }\n    });\n    this.onChange?.(value);\n  }\n\n  /** 切换一个选项的选择状态 */\n  public toggle(value: string, flag?: boolean) {\n    const b = flag == null ? !this.valueSet.has(value) : flag;\n    if (b) {\n      this.valueSet.add(value);\n    } else {\n      this.valueSet.delete(value);\n    }\n    this.$items.forEach((n, i) => {\n      if (n.getAttribute(\"data-value\") == value) {\n        n.classList.toggle(\"is-checked\", b);\n      }\n    });\n    this.onChange?.(this.value);\n    this.onToggle?.(value, b);\n  }\n}\n","import { html, render } from \"lit-html\";\n\nconst templateWrap = ({ label }: { label?: string }) => html`\n  <div class=\"mpui-checkbox\">\n    <div class=\"mpui-checkbox-icon\"></div>\n    <div class=\"mpui-checkbox-label\">${label}</div>\n  </div>\n`;\n\ninterface CheckboxOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 标签 */\n  label?: string;\n  /** 不可点选 */\n  disabled?: boolean;\n  /** 默认值(不填的情况下默认值为false) */\n  value?: boolean;\n  /** 值更改时触发 */\n  onChange?: (value: boolean) => void;\n  /** 切换状态时触发 */\n  onToggle?: (value: boolean) => void;\n}\n\n/** 开关 */\nexport class Checkbox implements CheckboxOptions {\n  readonly container: HTMLElement;\n\n  onChange?: (value: boolean) => void;\n\n  onToggle?: (value: boolean) => void;\n\n  label?: string;\n\n  /** 当前值 */\n  value: boolean;\n\n  $el: HTMLElement;\n\n  constructor({ container, value = false, onChange, onToggle, label }: CheckboxOptions) {\n    this.container = container;\n    this.value = value;\n    this.onChange = onChange; // 更新数据时需要执行的函数\n    this.onToggle = onToggle;\n    this.label = label;\n    // 注入模板\n    render(templateWrap({ label: this.label }), this.container);\n\n    this.$el = this.container.querySelector(\".mpui-checkbox\")!;\n    this.$el.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    this.setValue(this.value);\n  }\n\n  /** 设置开关状态 */\n  public setValue(value: boolean) {\n    this.value = value;\n    this.$el.classList.toggle(\"is-checked\", value);\n    this.onChange?.(value);\n  }\n\n  /** 点按开关 */\n  public toggle(value = !this.value) {\n    this.setValue(value);\n    this.onToggle?.(value);\n  }\n}\n","import { Checkbox } from \"@/components\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    /** 视频黑边 */\n    blackBorderChange: (flag: boolean) => void;\n  }\n  interface PlayerOptions {\n    /** 视频黑边 */\n    blackBorder?: boolean;\n    /** 视频黑边边距 */\n    blackBorderPadding?: string;\n  }\n}\n\n/** 视频黑边 */\n\nexport default class BlackBorder extends BasePlugin {\n  static pluginName = \"blackBorder\";\n  padding: string = \"\";\n  checkbox?: Checkbox;\n  constructor(player: Player) {\n    super(player);\n    if (player.plugin.buttonSettings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: !this.status,\n        onToggle: (val) => {\n          this.toggle(!val);\n        },\n        label: \"隐藏黑边\",\n      });\n      player.plugin.settings?.$others.appendChild(container);\n    }\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this.padding = options.blackBorderPadding || \"8px\";\n    if (options.blackBorder) this.toggle(true);\n  }\n  toggle(v: boolean) {\n    if (v) {\n      this.player.$content.style.setProperty(\"--padding\", this.padding);\n    } else {\n      this.player.$content.style.setProperty(\"--padding\", \"\");\n    }\n    this.player.emit(\"blackBorderChange\", v);\n  }\n  get status() {\n    return !!this.player.$content.style.getPropertyValue(\"--padding\");\n  }\n}\n","import type { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@core\" {\n  interface Player {\n    /** 是否为宽屏模式 */\n    isWidescreen?: boolean;\n    /** 进入宽屏模式 */\n    enterWidescreen?: () => void;\n    /** 退出宽屏模式 */\n    exitWidescreen?: () => void;\n  }\n}\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    widescreen?: boolean;\n  }\n  interface PlayerInvokes {\n    widescreen?: (flag: boolean) => void;\n  }\n  interface PlayerEventMap {\n    widescreenEnter: () => void;\n    widescreenExit: () => void;\n  }\n  interface PlayerPlugins {\n    widescreen?: Widescreen;\n  }\n}\n\n/** 宽屏模式插件 */\n\nexport default class Widescreen extends BasePlugin {\n  static readonly pluginName = \"widescreen\";\n  public invokeToggle?: (flag: boolean) => void;\n\n  init() {\n    // --- 绑定属性 --- //\n\n    this.player.define(\"isWidescreen\", {\n      get: () => this.status,\n    });\n    this.player.define(\"enterWidescreen\", () => this.enter());\n    this.player.define(\"exitWidescreen\", () => this.exit());\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    this.invokeToggle = options.invoke?.widescreen;\n    options.widescreen && this.enter();\n  }\n\n  enter() {\n    if (this.status) return;\n    this.player.$el.classList.add(\"is-widescreen\");\n    this.invokeToggle?.(true);\n    this.player.emit(\"widescreenEnter\");\n  }\n  exit() {\n    if (!this.status) return;\n    this.player.$el.classList.remove(\"is-widescreen\");\n    this.invokeToggle?.(false);\n    this.player.emit(\"widescreenExit\");\n  }\n  get status() {\n    return this.player.$el.classList.contains(\"is-widescreen\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-play is-paused\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-play\"></i>\n      <i class=\"mpicon-pause\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">播放</div>\n  </div>\n`;\n\nexport default class ButtonPlay extends ControlsPlugin {\n  static pluginName = \"buttonPlay\";\n  name = \"play\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.player.on(\"pause\", () => {\n      this._change(false);\n    });\n    this.player.on(\"play\", () => {\n      this._change(true);\n    });\n    this.player.on(\"videoChange\", () => {\n      this._change(false);\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      this.player.paused ? this.player.play() : this.player.pause();\n    });\n  }\n  /** 设置按钮状态 */\n  private _change(flag: boolean) {\n    this.$el.classList.toggle(\"is-on\", flag);\n    this.$tooltip.innerText = flag ? \"暂停\" : \"播放\";\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-prev is-autohide is-disabled\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-prev\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">上一P</div>\n  </div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    /** 视频切换按钮 */\n    switchButton?: {\n      /** 自动隐藏按钮，默认值为false */\n      autoHide?: boolean;\n      /** 只有一个视频时，隐藏所有切换按钮，默认值为true */\n      singleHide?: boolean;\n    };\n  }\n}\n\nexport default class ButtonPrev extends ControlsPlugin {\n  static pluginName = \"buttonPrev\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n  name = \"prev\";\n\n  /** 只有单个视频时，隐藏所有切换按钮 */\n  singleHide: boolean = true;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    super.apply(player, options);\n    this.singleHide = options.switchButton?.singleHide ?? true;\n  }\n\n  init() {\n    this.$icon.addEventListener(\"click\", () => {\n      this.player.prev();\n    });\n    this.player.on(\"videoChange\", (info) => {\n      const { hasNext, hasPrev } = info;\n      this.setDisabled(!hasPrev);\n      this.$el.classList.toggle(\"is-hidden\", this.singleHide && !hasPrev && !hasNext);\n    });\n  }\n  setDisabled(flag: boolean) {\n    this.$el.classList.toggle(\"is-disabled\", flag);\n  }\n  /** 自动隐藏上一个/下一个按钮 */\n  setAutoHide(flag: boolean) {\n    this.$el.classList.toggle(\"is-autohide\", flag);\n  }\n  get disabled() {\n    return this.$el.classList.contains(\"is-disabled\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-next is-autohide is-disabled\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-next\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">下一P</div>\n  </div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    /** 视频切换按钮 */\n    switchButton?: {\n      /** 自动隐藏按钮，默认值为false */\n      autoHide?: boolean;\n      /** 只有一个视频时，隐藏所有切换按钮，默认值为true */\n      singleHide?: boolean;\n    };\n  }\n}\n\nexport default class ButtonNext extends ControlsPlugin {\n  static pluginName = \"buttonNext\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n  name = \"next\";\n\n  /** 只有单个视频时，隐藏所有切换按钮 */\n  singleHide: boolean = true;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    super.apply(player, options);\n    this.singleHide = options.switchButton?.singleHide ?? true;\n  }\n\n  init(player: Player) {\n    this.$icon.addEventListener(\"click\", () => {\n      this.player.next();\n    });\n    this.player.on(\"videoChange\", (info) => {\n      const { hasNext, hasPrev } = info;\n      this.setDisabled(!hasNext);\n      this.$el.classList.toggle(\"is-hidden\", this.singleHide && !hasPrev && !hasNext);\n    });\n  }\n\n  setDisabled(flag: boolean) {\n    this.$el.classList.toggle(\"is-disabled\", flag);\n  }\n  /** 自动隐藏上一个/下一个按钮 */\n  setAutoHide(flag: boolean) {\n    this.$el.classList.toggle(\"is-autohide\", flag);\n  }\n  get disabled() {\n    return this.$el.classList.contains(\"is-disabled\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { secondToTime, timeToSecond } from \"@/utils\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-videotime\">\n    <div class=\"${classPrefix}-videotime-label\">\n      <span class=\"${classPrefix}-videotime-current\">00:00</span>\n      <span class=\"${classPrefix}-videotime-divider\">/</span>\n      <span class=\"${classPrefix}-videotime-total\">00:00</span>\n    </div>\n    <input class=\"${classPrefix}-videotime-input mpui-input\" />\n  </div>\n`;\n\nexport default class VideoTime extends ControlsPlugin {\n  static pluginName = \"videoTime\";\n  name = \"time\";\n  $label: HTMLElement;\n  $current: HTMLElement;\n  $total: HTMLElement;\n  $input: HTMLInputElement;\n  /** 点按时的值 */\n  private valueBeforeEdited = \"\";\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-videotime`)!);\n    this.$label = this.$(`.${classPrefix}-videotime-label`)!;\n    this.$current = this.$(`.${classPrefix}-videotime-current`)!;\n    this.$total = this.$(`.${classPrefix}-videotime-total`)!;\n    this.$input = this.$(`.${classPrefix}-videotime-input`)!;\n  }\n\n  init() {\n    this.player.on(\"timeupdate\", (time) => {\n      this.$current.innerText = secondToTime(time);\n    });\n    this.player.on(\"seeking\", (time) => {\n      this.$current.innerText = secondToTime(time);\n    });\n    this.player.on(\"durationchange\", (time) => {\n      this.$total.innerText = secondToTime(time);\n    });\n    this.$label.addEventListener(\"click\", () => {\n      this.$el.classList.add(\"is-input\");\n      this.$input.value = secondToTime(this.player.currentTime);\n      this.valueBeforeEdited = this.$input.value;\n      this.$input.focus();\n    });\n    this.$input.addEventListener(\"blur\", () => {\n      const inputVal = this.$input.value;\n      if (inputVal != this.valueBeforeEdited) {\n        // 如果输入值有改动，则跳转\n        this.player.seek(timeToSecond(inputVal));\n        this.player.play();\n      }\n      this.exitInput();\n    });\n    this.$input.addEventListener(\"keydown\", (event) => {\n      const e = event || window.event;\n      if (e.keyCode == 13) {\n        this.player.seek(timeToSecond(this.$input.value));\n        this.player.play();\n        this.exitInput();\n      }\n      if (e.keyCode == 27) {\n        this.exitInput();\n      }\n    });\n  }\n\n  /** 退出输入模式 */\n  exitInput() {\n    this.$el.classList.remove(\"is-input\");\n    this.$input.value = \"\";\n    this.valueBeforeEdited = \"\";\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-loop\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-loop-off\"></i>\n      <i class=\"mpicon-loop\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">洗脑循环</div>\n  </div>\n`;\n\nexport default class ButtonLoop extends ControlsPlugin {\n  static pluginName = \"buttonLoop\";\n  name = \"loop\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.player.on(\"loopChange\", (flag) => {\n      this.$el.classList.toggle(\"is-on\", flag);\n      this.$tooltip.innerText = flag ? \"关闭洗脑循环\" : \"洗脑循环\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      if (this.player.loop) {\n        this.player.setLoop(false);\n      } else {\n        this.player.setLoop(true);\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-part\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <div class=\"${classPrefix}-controls-button-text\">P0</div>\n    </div>\n    <div class=\"mpui-tooltip\">分P列表</div>\n  </div>\n`;\n\nexport default class ButtonPart extends ControlsPlugin {\n  static pluginName = \"buttonPart\";\n  name = \"part\";\n  $icon: HTMLElement;\n  $text: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$text = this.$(`.${classPrefix}-controls-button-text`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.$icon.addEventListener(\"click\", () => {\n      this.plugin.partList?.toggle();\n    });\n    this.player.on(\"videoChange\", (info) => {\n      this.$text.innerText = `P${info.part}`;\n      this.$el.classList.toggle(\"is-show\", (info.list?.length || 1) > 1);\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { SliderVertical } from \"@/components\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-volume\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-volume\"></i>\n      <i class=\"mpicon-volume-off\"></i>\n    </div>\n\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel\">\n        <div class=\"${classPrefix}-button-volume-value\">0</div>\n        <div class=\"${classPrefix}-button-volume-slider\"></div>\n      </div>\n    </div>\n  </div>\n`;\n\nexport default class ButtonVolume extends ControlsPlugin {\n  static pluginName = \"buttonVolume\";\n  name = \"volume\";\n  $icon: HTMLElement;\n  $slider: HTMLElement;\n  $value: HTMLElement;\n  slider!: SliderVertical;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$slider = this.$(`.${classPrefix}-button-volume-slider`)!;\n    this.$value = this.$(`.${classPrefix}-button-volume-value`)!;\n  }\n\n  init() {\n    this.slider = new SliderVertical({\n      container: this.$slider,\n      min: 0,\n      max: 100,\n      step: 1,\n      value: this.player.volume * 100,\n      onChange: (value) => {\n        this.$value.innerText = value.toString();\n      },\n      onDrag: (value) => {\n        this.player.setVolume(value / 100);\n      },\n      onDragStart: (value) => {\n        if (this.player.muted && value != 0) {\n          this.player.setMuted(false);\n        }\n        this.$el.classList.add(\"is-control\");\n        this.player.isControlled = true;\n      },\n      onDragEnd: () => {\n        this.$el.classList.remove(\"is-control\");\n        this.player.isControlled = false;\n      },\n    });\n    this.player.on(\"volumechange\", (value: number, muted: boolean) => {\n      if (muted) {\n        this.$el.classList.add(\"is-muted\");\n        this.slider.setValue(0);\n      } else {\n        this.$el.classList.remove(\"is-muted\");\n        this.slider.setValue(Math.round(value * 100));\n      }\n      if (value == 0) {\n        this.$el.classList.add(\"is-muted\");\n      }\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      if (this.player.muted || this.player.volume == 0) {\n        if (this.player.volume == 0) {\n          this.player.setVolume(0.1);\n        }\n        this.player.setMuted(true);\n      } else {\n        this.player.setMuted(false);\n      }\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-settings\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-settings\"></i>\n    </div>\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel\"></div>\n    </div>\n  </div>\n`;\n\nexport default class ButtonSettings extends ControlsPlugin {\n  static pluginName = \"buttonSettings\";\n  name = \"settings\";\n  $icon: HTMLElement;\n  $panel: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$panel = this.$(`.${classPrefix}-controls-panel`)!;\n  }\n\n  ready() {\n    const settings = this.player.panel.get(\"settings\");\n    settings?.mount(this.$panel);\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { pictureInPictureEnabled } from \"@/utils\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-pip\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-pip\"></i>\n      <i class=\"mpicon-pip-exit\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">画中画</div>\n  </div>\n`;\n\nexport default class ButtonPip extends ControlsPlugin {\n  static pluginName = \"buttonPip\";\n  name = \"pip\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.player.on(\"enterpictureinpicture\", () => {\n      this.$el.classList.add(\"is-on\");\n      this.$tooltip.innerText = \"退出画中画\";\n    });\n    this.player.on(\"leavepictureinpicture\", () => {\n      this.$el.classList.remove(\"is-on\");\n      this.$tooltip.innerText = \"画中画\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      if (this.player.isPip) {\n        this.player.exitPip?.();\n      } else {\n        this.player.enterPip?.();\n      }\n    });\n  }\n  get ignored() {\n    return !this.player.enterPip || !pictureInPictureEnabled;\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport {} from \"../../screen/widescreen\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-widescreen\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-widescreen\"></i>\n      <i class=\"mpicon-widescreen-exit\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">宽屏模式</div>\n  </div>\n`;\n\nexport default class ButtonWidescreen extends ControlsPlugin {\n  static pluginName = \"buttonWidescreen\";\n  name = \"widescreen\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.player.on(\"widescreenEnter\", () => {\n      this.$el.classList.add(\"is-on\");\n      this.$tooltip.innerText = \"退出宽屏模式\";\n    });\n    this.player.on(\"widescreenExit\", () => {\n      this.$el.classList.remove(\"is-on\");\n      this.$tooltip.innerText = \"宽屏模式\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      if (this.player.isWidescreen) {\n        this.player.enterWidescreen?.();\n      } else {\n        this.player.exitWidescreen?.();\n      }\n    });\n  }\n  get ignored() {\n    return !this.player.enterWidescreen;\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-webscreen\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-webscreen\"></i>\n      <i class=\"mpicon-webscreen-exit\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">网页全屏</div>\n  </div>\n`;\n\nexport default class ButtonWebscreen extends ControlsPlugin {\n  static pluginName = \"buttonWebscreen\";\n  name = \"webscreen\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.player.on(\"webscreenEnter\", () => {\n      this.$el.classList.add(\"is-on\");\n      this.$tooltip.innerText = \"退出网页全屏\";\n    });\n    this.player.on(\"webscreenExit\", () => {\n      this.$el.classList.remove(\"is-on\");\n      this.$tooltip.innerText = \"网页全屏\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      if (!this.player.isWebscreen) {\n        this.player.enterWebscreen?.();\n      } else {\n        this.player.exitWebscreen?.();\n      }\n    });\n  }\n  get ignored() {\n    return !this.player.enterWebscreen;\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { fullScreenEnabled } from \"@/utils\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-fullscreen\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-fullscreen\"></i>\n      <i class=\"mpicon-fullscreen-exit\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">进入全屏</div>\n  </div>\n`;\n\nexport default class ButtonFullscreen extends ControlsPlugin {\n  static pluginName = \"buttonFullscreen\";\n  name = \"fullscreen\";\n\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.player.on(\"fullscreenEnter\", () => {\n      this.$el.classList.add(\"is-on\");\n      this.$tooltip.innerText = \"退出全屏\";\n    });\n    this.player.on(\"fullscreenExit\", () => {\n      this.$el.classList.remove(\"is-on\");\n      this.$tooltip.innerText = \"进入全屏\";\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      if (!this.player.isFullscreen) {\n        this.player.enterFullscreen?.();\n      } else {\n        this.player.exitFullscreen?.();\n      }\n    });\n  }\n  get ignored() {\n    return !this.player.enterFullscreen || !fullScreenEnabled;\n  }\n}\n","import Player from \"@/player\";\nimport { classPrefix, developers, repositoryLink } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { PanelPlugin } from \"@/plugin\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-about\">\n    <div class=\"${classPrefix}-about-logo\"></div>\n    <div class=\"${classPrefix}-about-version\">version ${Player.version}-${Player.gitHash}</div>\n    <div>github：<a href=\"${repositoryLink}\" target=\"_blank\">mfuns-cn/mfunsPlayer</a></div>\n    <div>开发者：</div>\n    <ul class=\"${classPrefix}-about-developers\">\n      ${developers.map(\n        ({ name, link }) => html`\n          <li>\n            <a href=\"${link}\" target=\"_blank\">${name}</a>\n          </li>\n        `\n      )}\n      <li></li>\n    </ul>\n  </div>\n`;\n\n/** 播放器面板 */\nexport default class about extends PanelPlugin {\n  static pluginName = \"about\";\n  name = \"about\";\n  title = \"关于\";\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template(), fragment);\n\n    super(player, fragment.querySelector(`.${classPrefix}-about`)!);\n  }\n}\n","import Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { PanelPlugin } from \"@/plugin\";\n\nconst template = (list: HotkeyInfoListItem[]) => html`\n  <div class=\"${classPrefix}-hotkeys\">\n    <div class=\"${classPrefix}-hotkeys-list\">\n      ${list.map(\n        ({ key, description }) => html`\n          <div class=\"${classPrefix}-hotkeys-list-item\">\n            <div class=\"${classPrefix}-hotkeys-list-key\">${key}</div>\n            <div class=\"${classPrefix}-hotkeys-list-description\">${description}</div>\n          </div>\n        `\n      )}\n    </div>\n  </div>\n`;\n\ninterface HotkeyInfoListItem {\n  key: string;\n  description: string;\n}\n\n/** 快捷键信息面板 */\nexport default class HotkeyInfo extends PanelPlugin {\n  static pluginName = \"hotkeyInfo\";\n  name = \"hotkeyInfo\";\n  title = \"快捷键说明\";\n  constructor(player: Player) {\n    const hotkeyInfoList = [\n      { key: \"Space\", description: \"播放/暂停\" },\n      { key: \"→\", description: \"快进5秒\" },\n      { key: \"←\", description: \"快退5秒\" },\n      { key: \"↑\", description: \"音量增加10%\" },\n      { key: \"↓\", description: \"音量降低10%\" },\n    ];\n    const fragment = new DocumentFragment();\n    render(template(hotkeyInfoList), fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-hotkeys`)!);\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { BasePlugin, IMenu, UIOptionsItem } from \"@/plugin\";\nimport { html, render } from \"lit-html\";\nimport { createElement } from \"@/utils\";\nimport { PlayerOptions } from \"@core\";\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    contextMenu?: ContextMenu;\n  }\n  interface PlayerEventMap {\n    contextMenuShow: (x: number, y: number) => void;\n    contextMenuHide: () => void;\n  }\n  interface PlayerOptions {\n    contextMenu?: {\n      list: UIOptionsItem<IMenu>[];\n    };\n  }\n}\n\nconst template = () => html`\n  <div class=\"${classPrefix}-contextmenu\">\n    <ul class=\"${classPrefix}-contextmenu-list mpui-black\"></ul>\n  </div>\n`;\n\n/** 右键菜单 */\n\nexport default class ContextMenu extends BasePlugin {\n  static pluginName = \"contextMenu\";\n  player: Player;\n  container: HTMLElement;\n  $el: HTMLElement;\n  $list: HTMLElement;\n  list: UIOptionsItem<IMenu>[] = [];\n  private isShow = false;\n  constructor(player: Player) {\n    super(player);\n    this.player = player;\n\n    this.container = createElement(\"div\", { class: `${classPrefix}-contextmenu-wrap` });\n    render(template(), this.container);\n    this.$el = this.container.querySelector(`.${classPrefix}-contextmenu`)!;\n    this.$list = this.$el.querySelector(`.${classPrefix}-contextmenu-list`)!;\n\n    this.player.$main.appendChild(this.container);\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this.list = options.contextMenu?.list || [];\n  }\n  setMenu(list: IMenu[]) {\n    this.$list.innerHTML = \"\";\n    const fragment = new DocumentFragment();\n    list.forEach((item) => {\n      const el = createElement(\"li\", { class: `${classPrefix}-contextmenu-item` });\n      if (item.onClick)\n        el.onclick = () => {\n          item.onClick?.(this.player);\n        };\n      let content: string | HTMLElement;\n      if (typeof item.content == \"function\") {\n        content = item.content(this.player);\n      } else {\n        content = item.content;\n      }\n      if (typeof content == \"object\") {\n        el.appendChild(content);\n      } else {\n        el.innerText = content;\n      }\n      fragment.appendChild(el);\n    });\n    this.$list.appendChild(fragment);\n  }\n  init() {\n    this.player.$area.addEventListener(\"contextmenu\", (e: MouseEvent) => {\n      e.preventDefault();\n      const clientRect = this.player.$area.getBoundingClientRect();\n      const x = e.clientX - clientRect.left;\n      const y = e.clientY - clientRect.top;\n      this.show(x, y);\n    });\n    this.container.addEventListener(\"contextmenu\", (e: MouseEvent) => {\n      e.preventDefault();\n      const clientRect = this.container.getBoundingClientRect();\n      const x = e.clientX - clientRect.left;\n      const y = e.clientY - clientRect.top;\n      this.show(x, y);\n    });\n    document.addEventListener(\"click\", () => {\n      if (this.isShow) {\n        this.hide();\n      }\n    });\n  }\n  show(x: number, y: number) {\n    this.container.classList.add(\"is-show\");\n    const clientRect = this.player.$area.getBoundingClientRect();\n    if (x + this.$el.offsetWidth >= clientRect.width) {\n      this.$el.style.right = clientRect.width - x + \"px\";\n      this.$el.style.left = \"initial\";\n    } else {\n      this.$el.style.left = x + \"px\";\n      this.$el.style.right = \"initial\";\n    }\n    if (y + this.$el.offsetHeight >= clientRect.height) {\n      this.$el.style.bottom = clientRect.height - y + \"px\";\n      this.$el.style.top = \"initial\";\n    } else {\n      this.$el.style.top = y + \"px\";\n      this.$el.style.bottom = \"initial\";\n    }\n    this.isShow = true;\n    this.player.emit(\"contextMenuShow\", x, y);\n  }\n  hide() {\n    this.container.classList.remove(\"is-show\");\n    this.isShow = false;\n    this.player.emit(\"contextMenuHide\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\n\nimport { BasePlugin, IControls, UIOptionsItem } from \"@/plugin\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-controller-mask\"></div>\n  <div class=\"${classPrefix}-controller mpui-black\">\n    <div class=\"${classPrefix}-controller-top\"></div>\n    <div class=\"${classPrefix}-controller-content\">\n      <div class=\"${classPrefix}-controller-left\"></div>\n      <div class=\"${classPrefix}-controller-center\"></div>\n      <div class=\"${classPrefix}-controller-right\"></div>\n    </div>\n  </div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    controller?: Controller;\n  }\n  interface PlayerOptions {\n    controller?: { controls?: ControllerControls };\n  }\n}\n\nexport interface ControllerControls {\n  left?: UIOptionsItem<IControls>[];\n  center?: UIOptionsItem<IControls>[];\n  right?: UIOptionsItem<IControls>[];\n  top?: UIOptionsItem<IControls>[];\n}\n\n/** 控制栏 */\nexport default class Controller extends BasePlugin {\n  static pluginName = \"controller\";\n  player: Player;\n  container: HTMLElement;\n  $el: HTMLElement;\n  $top: HTMLElement;\n  $content: HTMLElement;\n  $left: HTMLElement;\n  $center: HTMLElement;\n  $right: HTMLElement;\n\n  isHover = false;\n\n  protected inactiveHook: () => boolean | void;\n  protected mouseEnterHandler: () => void;\n  protected mouseLeaveHandler: () => void;\n  protected controls: {\n    left?: UIOptionsItem<IControls>[];\n    center?: UIOptionsItem<IControls>[];\n    right?: UIOptionsItem<IControls>[];\n    top?: UIOptionsItem<IControls>[];\n  } = {};\n\n  constructor(player: Player) {\n    super(player);\n    this.player = player;\n    this.container = document.createElement(\"div\");\n    this.container.className = `${classPrefix}-controller-wrap`;\n    const fragment = new DocumentFragment();\n    render(template(), fragment);\n    this.$el = fragment.querySelector(`.${classPrefix}-controller`)!;\n    this.$top = this.$el.querySelector(`.${classPrefix}-controller-top`)!;\n    this.$content = this.$el.querySelector(`.${classPrefix}-controller-content`)!;\n    this.$left = this.$el.querySelector(`.${classPrefix}-controller-left`)!;\n    this.$center = this.$el.querySelector(`.${classPrefix}-controller-center`)!;\n    this.$right = this.$el.querySelector(`.${classPrefix}-controller-right`)!;\n    this.player.$main.append(this.container);\n\n    this.inactiveHook = () => !this.isHover && void 0;\n    this.mouseEnterHandler = () => {\n      this.isHover = true;\n    };\n    this.mouseLeaveHandler = () => {\n      this.isHover = false;\n    };\n\n    this.container.appendChild(fragment);\n  }\n  init() {\n    this.player.hook.register(\"inactive\", this.inactiveHook);\n    this.container.addEventListener(\"mouseenter\", this.mouseEnterHandler);\n    this.container.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\n  }\n  apply(player: Player, options: PlayerOptions) {\n    this.controls = options.controller?.controls || {};\n  }\n  ready() {\n    this.setControls(this.controls);\n  }\n  /** 更新控制组件 */\n  setControls(controls: ControllerControls) {\n    const { left, center, right, top } = controls;\n    this.build(this.$left, left);\n    this.build(this.$center, center);\n    this.build(this.$right, right);\n    this.build(this.$top, top);\n  }\n  protected build(container: HTMLElement, list?: UIOptionsItem<IControls>[]) {\n    container.innerHTML = \"\";\n    const fragment = new DocumentFragment();\n    list?.forEach((item) => {\n      const el = this.player.controls.get(item)?.$el;\n      if (el) fragment.appendChild(el);\n    });\n    container.appendChild(fragment);\n  }\n  destroy() {\n    this.player.hook.unregister(\"inactive\", this.inactiveHook);\n    this.container.removeEventListener(\"mouseenter\", this.mouseEnterHandler);\n    this.container.removeEventListener(\"mouseleave\", this.mouseLeaveHandler);\n  }\n}\n","export enum keyCode {\n  Backspace = 8,\n  Tab = 9,\n  Enter = 13,\n  Shift = 16,\n  Ctrl = 17,\n  Alt = 18,\n  PauseBreak = 19,\n  CapsLock = 20,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n\n  Insert = 45,\n  Delete = 46,\n\n  Zero = 48,\n  ClosedParen = Zero,\n  One = 49,\n  ExclamationMark = One,\n  Two = 50,\n  AtSign = Two,\n  Three = 51,\n  PoundSign = Three,\n  Hash = PoundSign,\n  Four = 52,\n  DollarSign = Four,\n  Five = 53,\n  PercentSign = Five,\n  Six = 54,\n  Caret = Six,\n  Hat = Caret,\n  Seven = 55,\n  Ampersand = Seven,\n  Eight = 56,\n  Star = Eight,\n  Asterik = Star,\n  Nine = 57,\n  OpenParen = Nine,\n\n  A = 65,\n  B = 66,\n  C = 67,\n  D = 68,\n  E = 69,\n  F = 70,\n  G = 71,\n  H = 72,\n  I = 73,\n  J = 74,\n  K = 75,\n  L = 76,\n  M = 77,\n  N = 78,\n  O = 79,\n  P = 80,\n  Q = 81,\n  R = 82,\n  S = 83,\n  T = 84,\n  U = 85,\n  V = 86,\n  W = 87,\n  X = 88,\n  Y = 89,\n  Z = 90,\n\n  LeftWindowKey = 91,\n  RightWindowKey = 92,\n  SelectKey = 93,\n\n  Numpad0 = 96,\n  Numpad1 = 97,\n  Numpad2 = 98,\n  Numpad3 = 99,\n  Numpad4 = 100,\n  Numpad5 = 101,\n  Numpad6 = 102,\n  Numpad7 = 103,\n  Numpad8 = 104,\n  Numpad9 = 105,\n\n  Multiply = 106,\n  Add = 107,\n  Subtract = 109,\n  DecimalPoint = 110,\n  Divide = 111,\n\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n\n  NumLock = 144,\n  ScrollLock = 145,\n\n  SemiColon = 186,\n  Equals = 187,\n  Comma = 188,\n  Dash = 189,\n  Period = 190,\n  UnderScore = Dash,\n  PlusSign = Equals,\n  ForwardSlash = 191,\n  Tilde = 192,\n  GraveAccent = Tilde,\n\n  OpenBracket = 219,\n  ClosedBracket = 221,\n  Quote = 222,\n}\n","import { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { keyCode } from \"@/utils/KeyCode.enum\";\n\nexport default class Hotkey {\n  static readonly pluginName = \"hotkey\";\n  player: Player;\n  controlMask: HTMLElement;\n\n  constructor(player: Player) {\n    this.player = player;\n    this.controlMask = this.player.$area;\n  }\n\n  apply() {\n    this.initKey();\n    this.initMask();\n  }\n\n  initKey() {\n    document.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n      const tag = document.activeElement?.tagName.toUpperCase();\n      const editable = document.activeElement?.getAttribute(\"contenteditable\");\n      if (this.player.isFocused) {\n        if (tag == \"INPUT\" || tag == \"TEXTAREA\" || editable == \"\" || editable == \"true\") return;\n        switch (e.keyCode) {\n          case keyCode.Space:\n            e.preventDefault();\n            this.player.paused ? this.player.play() : this.player.pause();\n            break;\n          case keyCode.LeftArrow:\n            e.preventDefault();\n            this.player.seek(this.player.currentTime - 5);\n            break;\n          case keyCode.RightArrow:\n            e.preventDefault();\n            this.player.seek(this.player.currentTime + 5);\n            break;\n          case keyCode.UpArrow:\n            e.preventDefault();\n            this.player.setVolume(this.player.volume + 0.1);\n            break;\n          case keyCode.DownArrow:\n            e.preventDefault();\n            this.player.setVolume(this.player.volume - 0.1);\n            break;\n        }\n      }\n    });\n  }\n\n  initMask() {\n    this.controlMask.addEventListener(\"click\", () => {\n      this.player.paused ? this.player.play() : this.player.pause();\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { createElement } from \"@/utils\";\nimport { BasePlugin, IPanel, PanelPlugin, UIOptionsItem } from \"@/plugin\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-modal-mask\"></div>\n  <div class=\"${classPrefix}-modal\">\n    <div class=\"${classPrefix}-modal-head\">\n      <div class=\"${classPrefix}-modal-title\"></div>\n      <div class=\"${classPrefix}-modal-close\">\n        <i class=\"mpicon-close\"></i>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-modal-content\"></div>\n  </div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    modal?: Modal;\n  }\n  interface PlayerOptions {\n    modal?: {\n      panels?: PanelPlugin[];\n    };\n  }\n}\n\nexport default class Modal extends BasePlugin {\n  static readonly pluginName = \"modal\";\n  container: HTMLElement;\n  $el: HTMLElement;\n  $mask: HTMLElement;\n  $content: HTMLElement;\n  $title: HTMLElement;\n  $close: HTMLElement;\n  current: IPanel | null = null;\n  #initPanels: UIOptionsItem<IPanel>[] = [];\n  get isShow(): boolean {\n    return this.container.classList.contains(\"is-show\");\n  }\n\n  constructor(player: Player) {\n    super(player);\n    this.container = createElement(\"div\", { class: `${classPrefix}-modal-wrap` });\n    render(template(), this.container);\n    this.$el = this.container.querySelector(`.${classPrefix}-modal`)!;\n    this.$mask = this.container.querySelector(`.${classPrefix}-modal-mask`)!;\n    this.$content = this.$el.querySelector(`.${classPrefix}-modal-content`)!;\n    this.$title = this.$el.querySelector(`.${classPrefix}-modal-title`)!;\n    this.$close = this.$el.querySelector(`.${classPrefix}-modal-close`)!;\n\n    this.player.$main.appendChild(this.container);\n  }\n\n  init() {\n    this.$mask.addEventListener(\"click\", () => {\n      this.hide();\n    });\n    this.$close.addEventListener(\"click\", () => {\n      this.hide();\n    });\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this.#initPanels = options.modal?.panels || [];\n  }\n  ready(): void {\n    this.#initPanels.forEach((item) => {\n      const panel = this.player.panel.get(item);\n      panel && this.mount(panel);\n    });\n    this.#initPanels = [];\n  }\n  /** 关闭模态框 */\n  hide() {\n    this.current?.toggle(false);\n  }\n  /** 挂载一个面板 */\n  mount(panel: IPanel) {\n    panel.mount(this.$content, {\n      onToggle: (flag) => {\n        if (flag) {\n          for (const a of this.$content.children) {\n            a.classList.toggle(\"is-show\", a == panel.$el);\n          }\n          this.container.classList.add(\"is-show\");\n          this.$title.innerText = panel.title || \"\";\n          this.current = panel;\n        } else {\n          if (this.current == panel) {\n            this.container.classList.remove(\"is-show\");\n            panel.$el.classList.remove(\"is-show\");\n            this.$title.innerText = \"\";\n            this.current = null;\n          }\n        }\n      },\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { PlayerOptions } from \"@/types\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport Controller from \"../ui/controller\";\nimport { secondToTime } from \"@/utils\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-progress\">\n    <div class=\"${classPrefix}-progress-bar\">\n      <div class=\"${classPrefix}-progress-buffered\"></div>\n      <div class=\"${classPrefix}-progress-played\"></div>\n      <div class=\"${classPrefix}-progress-thumb-track\">\n        <div class=\"${classPrefix}-progress-thumb\"></div>\n      </div>\n      <div class=\"${classPrefix}-progress-preview\">\n        <div class=\"${classPrefix}-progress-thumbnail\"></div>\n        <div class=\"${classPrefix}-progress-time\"></div>\n      </div>\n      <div class=\"${classPrefix}-progress-tip\"></div>\n    </div>\n  </div>\n`;\n\n/** 进度条 */\nexport default class Progress extends ControlsPlugin {\n  static readonly pluginName = \"progress\";\n  name = \"progress\";\n  $bar: HTMLElement;\n  $buffered: HTMLElement;\n  $played: HTMLElement;\n  $thumbTrack: HTMLElement;\n  $thumb: HTMLElement;\n  $preview: HTMLElement;\n  $thumbnail: HTMLElement;\n  $time: HTMLElement;\n  $tip: HTMLElement;\n  /** 轨道长度 */\n  private trackLength = 0;\n  /** 鼠标与轨道距离 */\n  private distance = 0;\n  /** 滑块可滑动距离 */\n  private nMax = 0;\n  /** 滑块轨道位置 */\n  private nLeft = 0;\n  /** 滑动距离 */\n  get nLength(): number {\n    const nLength = this.distance - this.thumbTrackX;\n    // 限制滑块移动位置\n    return nLength >= this.nMax ? this.nMax : nLength <= 0 ? 0 : nLength;\n  }\n  /** 滑块轨道与总轨道距离差 */\n  get thumbTrackX(): number {\n    return (this.trackLength - this.nMax) / 2;\n  }\n  /** 滑动值 */\n  get nValue(): number {\n    return (this.nLength / this.nMax) * this.player.duration;\n  }\n  private isDragging = false;\n  private isHover = false;\n  private isActive = false;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template(), fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-progress`)!);\n\n    this.$bar = this.$(`.${classPrefix}-progress-bar`)!;\n    this.$buffered = this.$(`.${classPrefix}-progress-buffered`)!;\n    this.$played = this.$(`.${classPrefix}-progress-played`)!;\n    this.$thumbTrack = this.$(`.${classPrefix}-progress-thumb-track`)!;\n    this.$thumb = this.$(`.${classPrefix}-progress-thumb`)!;\n    this.$preview = this.$(`.${classPrefix}-progress-preview`)!;\n    this.$thumbnail = this.$(`.${classPrefix}-progress-thumbnail`)!;\n    this.$time = this.$(`.${classPrefix}-progress-time`)!;\n    this.$tip = this.$(`.${classPrefix}-progress-tip`)!;\n\n    // 点按进度条事件\n    this.$el.addEventListener(\"mousedown\", (e: MouseEvent) => {\n      const { clientX } = e;\n      // 更新滑动条位置信息\n      this.trackLength = this.$el.offsetWidth;\n      this.nMax = this.$thumbTrack.offsetWidth || this.trackLength;\n      this.nLeft = this.$el.getBoundingClientRect().left;\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      this.setPlayed(this.nValue);\n      this.$el.classList.add(`${classPrefix}-progress-dragging`);\n      this.isDragging = true;\n      document.addEventListener(\"mousemove\", dragMoveEvent);\n      document.addEventListener(\"mouseup\", dragEndEvent);\n    });\n\n    // 滑动进度条事件\n    const dragMoveEvent = (e: MouseEvent) => {\n      // 鼠标X位置\n      const { clientX } = e;\n      // 鼠标移动时取消默认行为，避免选中其他元素或文字\n      e.preventDefault();\n      e.stopPropagation();\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      this.setPlayed(this.nValue);\n      // 更新指针显示\n      this.updateTip();\n      window.getSelection()?.removeAllRanges();\n    };\n\n    // 松开进度条事件\n    const dragEndEvent = (e: MouseEvent) => {\n      e.stopPropagation();\n      window.getSelection()?.removeAllRanges();\n      document.removeEventListener(\"mousemove\", dragMoveEvent);\n      document.removeEventListener(\"mouseup\", dragEndEvent);\n      this.$el.classList.remove(`${classPrefix}-progress-dragging`);\n      this.isDragging = false;\n      if (!this.isHover) this.setActive(false);\n      // 跳转\n      this.player.seek(this.nValue);\n      this.player.play();\n    };\n\n    // 鼠标离开进度条区域\n    this.$el.addEventListener(\"mouseenter\", () => {\n      this.isHover = true;\n      if (!this.isDragging) this.updateTip();\n    });\n    // 鼠标在进度条区域内移动\n    this.$el.addEventListener(\"mousemove\", (e: MouseEvent) => {\n      // 如果进度条处于拖动状态，则无需重复显示进度条指针\n      if (this.isDragging) return;\n      // 鼠标X位置\n      const { clientX } = e;\n      // 更新滑动条位置信息\n      this.trackLength = this.$el.offsetWidth;\n      this.nMax = this.$thumbTrack.offsetWidth || this.trackLength;\n      this.nLeft = this.$el.getBoundingClientRect().left;\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      // 更新指针显示\n      this.updateTip();\n    });\n    // 鼠标离开进度条区域\n    this.$el.addEventListener(\"mouseleave\", () => {\n      this.isHover = false;\n      if (!this.isDragging) this.setActive(false);\n    });\n\n    // 视频播放时间更新\n    this.player.on(\"timeupdate\", (time) => {\n      if (!this.isDragging) this.setPlayed(time);\n    });\n\n    // 视频缓存更新\n    this.player.on(\"progress\", (buffered) => {\n      this.setBuffered(buffered.length ? buffered.end(buffered.length - 1) : 0);\n    });\n  }\n\n  /** 设置已播放进度条位置 */\n  public setPlayed(time: number) {\n    // 计算进度比值\n    const per = time / this.player.duration || 0;\n    // 修改滑块位置\n    this.$thumb.style.left = `${per * 100}%`;\n    // 修改滑动痕迹宽度\n    this.$played.style.width = `${per * 100}%`;\n  }\n\n  /** 设置已播放进度条位置 */\n  public setBuffered(time: number) {\n    // 计算进度比值\n    const per = time / this.player.duration || 0;\n    // 修改滑动痕迹宽度\n    this.$buffered.style.width = `${per * 100}%`;\n  }\n\n  /** 设置进度条活跃状态 */\n  private setActive(flag: boolean) {\n    this.isActive = flag;\n    this.$el.classList.toggle(`${classPrefix}-progress-active`, flag);\n    if (flag) {\n      this.player.isControlled = true;\n    } else {\n      this.player.isControlled = false;\n    }\n  }\n\n  /** 更新指针位置 */\n  public updateTip() {\n    if (!this.isActive) this.setActive(true);\n    let per = this.distance / this.trackLength;\n    per = per >= 1 ? 1 : per <= 0 ? 0 : per;\n    this.$tip.style.left = `${per * 100}%`;\n    this.$preview.style.left = `${per * 100}%`;\n    this.$time.innerText = secondToTime(this.nValue);\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { BasePlugin, PanelPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Checkbox, Picker } from \"@/components\";\nimport { html, render } from \"lit-html\";\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    settings?: Settings;\n  }\n}\n\nconst template = html`\n  <div class=\"${classPrefix}-settings\">\n    <div class=\"${classPrefix}-settings-slot\">\n      <div class=\"${classPrefix}-panel-row\">\n        <div class=\"${classPrefix}-row-label\">播放倍速</div>\n        <div class=\"${classPrefix}-settings-rate-picker\"></div>\n      </div>\n      <div class=\"${classPrefix}-panel-row\">\n        <div class=\"${classPrefix}-row-label\">视频比例</div>\n        <div class=\"${classPrefix}-settings-ratio-picker\"></div>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-panel-row\">\n      <div class=\"${classPrefix}-row-label\">播放方式</div>\n      <div class=\"${classPrefix}-settings-play\"></div>\n    </div>\n    <div class=\"${classPrefix}-panel-row\">\n      <div class=\"${classPrefix}-row-label\">其他设置</div>\n      <div class=\"${classPrefix}-settings-others\"></div>\n    </div>\n  </div>\n`;\n\nexport default class Settings extends PanelPlugin {\n  static pluginName = \"settings\";\n  name = \"settings\";\n  title = \"设置\";\n\n  $slot: HTMLElement;\n  $play: HTMLElement;\n  $others: HTMLElement;\n\n  $ratePicker: HTMLElement;\n  $ratioPicker: HTMLElement;\n\n  pickerRate!: Picker;\n  pickerRatio!: Picker;\n  toggleAutoplay!: Checkbox;\n  toggleAutopart!: Checkbox;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-settings`)!);\n    this.$slot = this.$(`.${classPrefix}-settings-slot`)!;\n    this.$play = this.$(`.${classPrefix}-settings-play`)!;\n    this.$others = this.$(`.${classPrefix}-settings-others`)!;\n\n    this.$ratePicker = this.$(`.${classPrefix}-settings-rate-picker`)!;\n    this.$ratioPicker = this.$(`.${classPrefix}-settings-ratio-picker`)!;\n  }\n  init() {\n    this.pickerRate = new Picker({\n      container: this.$ratePicker,\n      list: [\n        { value: 0.5, label: \"0.5\" },\n        { value: 0.75, label: \"0.75\" },\n        { value: 1, label: \"1.0\" },\n        { value: 1.25, label: \"1.25\" },\n        { value: 1.5, label: \"1.5\" },\n        { value: 2, label: \"2.0\" },\n      ],\n      value: this.player.playbackRate || 1,\n      onPick: (value) => {\n        this.player.setPlaybackRate(Number(value));\n      },\n    });\n    this.player.on(\"ratechange\", (rate: number) => {\n      this.pickerRate.setValue(rate);\n    });\n\n    this.pickerRatio = new Picker({\n      container: this.$ratioPicker,\n      list: [\n        { value: \"\", label: \"自动\" },\n        { value: \"16/9\", label: \"16:9\" },\n        { value: \"4/3\", label: \"4:3\" },\n      ],\n      value: this.player.aspectRatio || \"\",\n      onPick: (value) => {\n        this.player.setAspectRatio?.((value || \"\") as string);\n      },\n    });\n    this.player.on(\"aspectRatioChange\", (ratio) => {\n      this.pickerRatio.setValue(ratio);\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { BasePlugin, IPanel, UIOptionsItem } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-side-mask\"></div>\n  <div class=\"${classPrefix}-side\">\n    <div class=\"${classPrefix}-side-head\">\n      <div class=\"${classPrefix}-side-title\"></div>\n      <div class=\"${classPrefix}-side-close\">\n        <i class=\"mpicon-close\"></i>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-side-content\"></div>\n  </div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    side?: Side;\n  }\n  interface PlayerOptions {\n    side?: {\n      panels?: UIOptionsItem<IPanel>[];\n    };\n  }\n}\n\nexport default class Side extends BasePlugin {\n  static readonly pluginName = \"side\";\n  container: HTMLElement;\n  $el: HTMLElement;\n  $mask: HTMLElement;\n  $content: HTMLElement;\n  $title: HTMLElement;\n  $close: HTMLElement;\n  current: IPanel | null = null;\n  #initPanels: UIOptionsItem<IPanel>[] = [];\n  get isShow(): boolean {\n    return this.container.classList.contains(\"is-show\");\n  }\n\n  constructor(player: Player) {\n    super(player);\n    this.container = createElement(\"div\", { class: `${classPrefix}-side-wrap` });\n    render(template(), this.container);\n    this.$el = this.container.querySelector(`.${classPrefix}-side`)!;\n    this.$mask = this.container.querySelector(`.${classPrefix}-side-mask`)!;\n    this.$content = this.$el.querySelector(`.${classPrefix}-side-content`)!;\n    this.$title = this.$el.querySelector(`.${classPrefix}-side-title`)!;\n    this.$close = this.$el.querySelector(`.${classPrefix}-side-close`)!;\n\n    this.player.$main.appendChild(this.container);\n  }\n  init() {\n    // --- 事件 --- //\n    this.$mask.addEventListener(\"click\", () => {\n      this.hide();\n    });\n    this.$close.addEventListener(\"click\", () => {\n      this.hide();\n    });\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this.#initPanels = options.side?.panels || [];\n  }\n  ready(): void {\n    this.#initPanels.forEach((item) => {\n      const panel = this.player.panel.get(item);\n      panel && this.mount(panel);\n    });\n    this.#initPanels = [];\n  }\n\n  hide() {\n    this.current?.toggle(false);\n  }\n\n  mount(panel: IPanel) {\n    panel.mount(this.$content, {\n      onToggle: (flag) => {\n        if (flag) {\n          this.current?.toggle(false);\n          for (const a of this.$content.children) {\n            a.classList.toggle(\"is-show\", a == panel.$el);\n          }\n          this.container.classList.add(\"is-show\");\n          this.$title.innerText = panel.title || \"\";\n          this.current = panel;\n        } else {\n          if (this.current == panel) {\n            this.container.classList.remove(\"is-show\");\n            panel.$el.classList.remove(\"is-show\");\n            this.$title.innerText = \"\";\n            this.current = null;\n          }\n        }\n      },\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@core\" {\n  interface Player {\n    /** 是否为画中画模式 */\n    isPip?: boolean;\n    /** 进入画中画模式 */\n    enterPip?: () => void;\n    /** 退出画中画模式 */\n    exitPip?: () => void;\n  }\n}\n\nexport default class Pip extends BasePlugin {\n  static pluginName = \"pip\";\n\n  constructor(player: Player) {\n    super(player);\n\n    // --- 绑定属性 --- //\n    this.player.define(\"isPip\", {\n      get: () => this.status,\n    });\n    this.player.define(\"enterPip\", () => this.enter());\n    this.player.define(\"exitPip\", () => this.exit());\n\n    // --- 绑定事件 --- //\n    this.player.on(\"enterpictureinpicture\", () => {\n      this.player.$el.classList.add(\"is-pip\");\n      this.player.emit(\"enterpictureinpicture\");\n    });\n    this.player.on(\"leavepictureinpicture\", () => {\n      this.player.$el.classList.remove(\"is-pip\");\n      this.player.emit(\"leavepictureinpicture\");\n    });\n    // 进入画中画时，退出全屏模式\n    this.player.on(\"enterpictureinpicture\", () => {\n      this.player.exitFullscreen?.();\n    });\n    // 进入全屏时，退出画中画模式\n    this.player.on(\"fullscreenEnter\", () => {\n      this.exit();\n    });\n  }\n\n  enter() {\n    if (this.status) return;\n    this.player.$video.requestPictureInPicture();\n  }\n\n  exit() {\n    if (!this.status) return;\n    document.exitPictureInPicture();\n  }\n\n  get status(): boolean {\n    return !!(document.pictureInPictureElement == this.player.$video);\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { getFullscreenElement } from \"@/utils\";\n\ndeclare module \"@core\" {\n  interface Player {\n    /** 是否为全屏模式 */\n    isFullscreen?: boolean;\n    /** 进入全屏模式 */\n    enterFullscreen?: () => void;\n    /** 退出全屏模式 */\n    exitFullscreen?: () => void;\n  }\n}\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    /** 进入全屏模式 */\n    fullscreenEnter: () => void;\n    /** 退出全屏模式 */\n    fullscreenExit: () => void;\n  }\n}\n\nexport default class Fullscreen extends BasePlugin {\n  static pluginName = \"fullscreen\";\n\n  $el: HTMLElement;\n\n  constructor(player: Player) {\n    super(player);\n    this.$el = this.player.$main;\n\n    // --- 绑定属性 --- //\n    this.player.define(\"isFullscreen\", {\n      get: () => this.status,\n    });\n    this.player.define(\"enterFullscreen\", () => this.enter());\n    this.player.define(\"exitFullscreen\", () => this.exit());\n\n    // --- 绑定事件 --- //\n    const fullScreenChangeHandler = () => {\n      if (this.status) {\n        this.player.$el.classList.add(\"is-fullscreen\");\n        this.player.emit(\"fullscreenEnter\");\n      } else {\n        this.player.$el.classList.remove(\"is-fullscreen\");\n        this.player.emit(\"fullscreenExit\");\n      }\n    };\n    this.$el.addEventListener(\"fullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"webkitfullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"mozfullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"msfullscreenchange\", fullScreenChangeHandler);\n  }\n\n  enter() {\n    if (this.status) return;\n    const el: any = this.$el;\n    if (el.requestFullscreen) {\n      el.requestFullscreen();\n    } else if (el.mozRequestFullScreen) {\n      el.mozRequestFullScreen();\n    } else if (el.webkitRequestFullscreen) {\n      el.webkitRequestFullscreen();\n    } else if (el.webkitEnterFullscreen) {\n      // Safari for iOS\n      el.webkitEnterFullscreen();\n    } else if (el.webkitEnterFullScreen) {\n      el.webkitEnterFullScreen();\n    } else if (el.msRequestFullscreen) {\n      el.msRequestFullscreen();\n    }\n  }\n\n  exit() {\n    if (!this.status) return;\n    const doc: any = document;\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if (doc.webkitExitFullscreen) {\n      doc.webkitExitFullscreen();\n    } else if (doc.webkitExitFullScreen) {\n      doc.webkitExitFullScreen();\n    } else if ((this.$el as any).msExitFullscreen!) {\n      (this.$el as any).msExitFullscreen();\n    }\n  }\n\n  get status(): boolean {\n    return !!(getFullscreenElement() == this.$el);\n  }\n}\n","import { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Player } from \"@core\";\n\ndeclare module \"@core\" {\n  interface Player {\n    userId?: number;\n    authorId?: number;\n    login?: () => Promise<void>;\n  }\n  interface PlayerEventMap {\n    login: (userId: number) => void;\n  }\n  interface PlayerOptions {\n    userId?: number;\n  }\n  interface PlayerInvokes {\n    login?: () => Promise<number>;\n  }\n  interface VideoInfo {\n    author?: {\n      id: number;\n    };\n  }\n}\n\nexport default class User extends BasePlugin {\n  static pluginName = \"user\";\n  #userId = 0;\n  #authorId = 0;\n\n  public invokeLogin?: () => Promise<number>;\n  init() {\n    this.player.define(\"userId\", { get: () => this.#userId });\n    this.player.define(\"authorId\", { get: () => this.#authorId });\n    this.player.define(\"login\", () => {\n      return this.login();\n    });\n    this.player.on(\"videoChange\", ({ author }) => {\n      if (author?.id != null) {\n        this.#authorId = author.id || 0;\n      }\n    });\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this.#userId = options.userId || 0;\n    this.invokeLogin = options.invoke?.login;\n  }\n  /** 调用页面登录 */\n  async login() {\n    await this.invokeLogin?.().then((res) => {\n      res != null && this.setUser(res);\n    });\n  }\n  /** 设置用户 */\n  async setUser(userId: number) {\n    this.#userId = userId;\n    this.player.emit(\"login\", userId);\n  }\n}\n","import type { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { debounce } from \"@/utils\";\n\ndeclare module \"@core\" {\n  interface Player {\n    /** 是否为活跃状态 */\n    isActive?: boolean;\n    /** 是否为操作中状态 */\n    isControlled?: boolean;\n    /** 设置活跃状态 */\n    setActive?: () => void;\n    /** 移除活跃状态 */\n    removeActive?: () => void;\n  }\n  interface PlayerOptions {\n    /** 活跃持续时间 */\n    activeDuration?: number;\n  }\n  interface PlayerEventMap {\n    active: () => void;\n    inactive: () => void;\n  }\n  interface PlayerHookMap {\n    inactive: void;\n  }\n  interface PlayerPlugins {\n    stateActive?: StateActive;\n  }\n}\n\n/** 活跃状态插件 */\n\nexport default class StateActive extends BasePlugin {\n  static readonly pluginName = \"stateActive\";\n  #status = false;\n  #mousemove = false;\n  /** 活跃持续时间 */\n  public activeDuration: number = 3000;\n  constructor(player: Player) {\n    super(player);\n\n    // --- 绑定属性 --- //\n    this.player.define(\"isActive\", {\n      get: () => this.#status,\n    });\n\n    // --- 绑定事件 --- //\n    const debounceRemoveActive = debounce(() => {\n      this.#mousemove = false;\n      this.remove();\n    }, this.activeDuration);\n    this.player.$main.addEventListener(\"mousemove\", () => {\n      this.#mousemove = true;\n      this.set();\n      debounceRemoveActive();\n    });\n    this.player.$main.addEventListener(\"mouseleave\", () => {\n      this.#mousemove = false;\n      this.remove();\n    });\n  }\n\n  apply(player: Player, options: PlayerOptions) {\n    this.activeDuration = options.activeDuration ?? 3000;\n  }\n\n  /** 设置播放器活跃状态 */\n  set() {\n    if (this.#status) return;\n    this.player.$el.classList.add(\"is-active\");\n    this.#status = true;\n    this.player.emit(\"active\");\n  }\n  /** 移除播放器活跃状态 */\n  remove() {\n    if (!this.#status || this.#mousemove || this.player.isControlled) return;\n    this.player.hook.call(\"inactive\").then((res) => {\n      if (!res) return;\n      this.player.$el.classList.remove(\"is-active\");\n      this.#status = false;\n      this.player.emit(\"inactive\");\n    });\n  }\n}\n","import type { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@core\" {\n  interface Player {\n    /** 是否为聚焦状态 */\n    isFocused?: boolean;\n    /** 播放器聚焦 */\n    focus?: () => void;\n    /** 播放器取消聚焦 */\n    blur?: () => void;\n  }\n  interface PlayerEventMap {\n    focus: () => void;\n    blur: () => void;\n  }\n}\n\n/** 聚焦状态插件 */\n\nexport default class StateFocus extends BasePlugin {\n  static readonly pluginName = \"stateFocus\";\n  constructor(player: Player) {\n    super(player);\n\n    // --- 绑定属性 --- //\n    this.player.define(\"isFocused\", {\n      get: () => this.status,\n    });\n\n    // --- 绑定事件 --- //\n    document.addEventListener(\n      \"click\",\n      () => {\n        this.toggle(false);\n      },\n      true\n    );\n    this.player.$el.addEventListener(\n      \"click\",\n      () => {\n        this.toggle(true);\n      },\n      true\n    );\n  }\n\n  /** 设置播放器聚焦状态 */\n  toggle(flag: boolean) {\n    if (this.status == flag) return;\n    this.player.$el.classList.toggle(\"is-focus\", flag);\n    this.player.emit(flag ? \"focus\" : \"blur\");\n  }\n\n  get status() {\n    return this.player.$el.classList.contains(\"is-focus\");\n  }\n}\n","var resizeObservers = [];\nexport { resizeObservers };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","export var freeze = function (obj) { return Object.freeze(obj); };\n","import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n","import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","import type { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { ResizeObserver as ResizeObserverPonyfill } from \"@juggle/resize-observer\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    resize: (size: [number, number]) => void;\n  }\n}\n\n/** 尺寸更改状态插件 */\n\nexport default class StateResize extends BasePlugin {\n  static readonly pluginName = \"stateResize\";\n  private readonly observer?: ResizeObserver;\n  constructor(player: Player) {\n    super(player);\n\n    // --- 初始化observer --- //\n    const Observer = window.ResizeObserver || ResizeObserverPonyfill;\n    if (Observer) {\n      this.observer = new Observer(([item]) => {\n        const { width, height } = item.contentRect;\n        this.player.emit(\"resize\", [width, height]);\n      });\n    }\n  }\n  mounted() {\n    this.observer?.observe(this.player.$el);\n  }\n}\n","import type { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@core\" {\n  interface Player {\n    /** 是否与视口交叉 */\n    isIntersecting?: boolean;\n  }\n  interface PlayerEventMap {\n    intersection: (flag: boolean) => void;\n  }\n}\n\n/** 聚焦状态插件 */\n\nexport default class StateIntersecting extends BasePlugin {\n  static readonly pluginName = \"stateIntersecting\";\n  private _status = false;\n  private readonly observer?: IntersectionObserver;\n  constructor(player: Player) {\n    super(player);\n\n    // --- 绑定属性 --- //\n    this.player.define(\"isIntersecting\", {\n      get: () => this._status,\n    });\n\n    // --- 初始化observer --- //\n    if (window.IntersectionObserver) {\n      this.observer = new window.IntersectionObserver(([item]) => {\n        const { isIntersecting } = item;\n        this._status = isIntersecting;\n        this.player.emit(\"intersection\", isIntersecting);\n      });\n    }\n    this.player.once(\"mounted\", () => {\n      this.observer?.observe(this.player.$el);\n    });\n  }\n}\n","import ContextMenu from \"@plugin/ui/contextMenu\";\nimport Controller from \"@plugin/ui/controller\";\nimport {\n  ButtonPlay,\n  ButtonPrev,\n  ButtonNext,\n  LabelTime,\n  ButtonLoop,\n  ButtonPart,\n  ButtonVolume,\n  ButtonSettings,\n  ButtonPip,\n  ButtonFullscreen,\n} from \"@plugin/controls\";\nimport Hotkey from \"@plugin/hotkey\";\nimport Modal from \"@plugin/ui/modal\";\nimport Progress from \"@plugin/controls/progress\";\nimport Settings from \"@plugin/settings\";\nimport { PlayerOptions } from \"@/types\";\nimport Side from \"@plugin/ui/side\";\nimport Pip from \"@plugin/screen/pip\";\nimport Fullscreen from \"@plugin/screen/fullscreen\";\nimport User from \"@plugin/videoOptions/user\";\nimport StateActive from \"../state/stateActive\";\nimport StateFocus from \"../state/stateFocus\";\nimport StateResize from \"../state/stateResize\";\nimport StateIntersecting from \"../state/stateIntersecting\";\n\n/** 核心插件 */\nexport const corePlugins = [\n  StateActive,\n  StateFocus,\n  StateResize,\n  StateIntersecting,\n  Pip,\n  Fullscreen,\n];\n\n/** 基础插件 */\nexport const basicPlugins = [Modal, Side, Controller, Settings, Hotkey, ContextMenu, User];\n\n/** 基础控件 */\nexport const basicControls = [\n  Progress,\n  ButtonPlay,\n  ButtonPrev,\n  ButtonNext,\n  LabelTime,\n  ButtonLoop,\n  ButtonPart,\n  ButtonVolume,\n  ButtonSettings,\n  ButtonPip,\n  ButtonFullscreen,\n];\n\nexport const presetBasic = [...corePlugins, ...basicPlugins, ...basicControls];\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Checkbox } from \"@/components\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    /** 分P连播 */\n    autoPartChange: (flag: boolean) => void;\n  }\n  interface PlayerOptions {\n    /** 分P连播 */\n    autoPart?: boolean;\n  }\n}\n\n/** 自动切换下一P */\n\nexport default class AutoPart extends BasePlugin {\n  static pluginName = \"autoPart\";\n  private _status = false;\n  protected checkbox?: Checkbox;\n  init() {\n    this.player.hook.register(\"end\", () => {\n      if (this.status) {\n        const { part, list } = this.player.getVideoInfo();\n        if (part != list?.length) {\n          this.player.next();\n          return false;\n        }\n      }\n    });\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    if (options.autoPart) this.toggle(true);\n  }\n  ready() {\n    if (this.plugin.settings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.status,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"分P连播\",\n      });\n      this.plugin.settings.$play.appendChild(container);\n    }\n  }\n  toggle(v: boolean) {\n    if (v) {\n      this._status = true;\n    } else {\n      this._status = false;\n    }\n    this.player.emit(\"autoPartChange\", v);\n  }\n  get status() {\n    return this._status;\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Checkbox } from \"@/components\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    /** 自动播放 */\n    autoPlayChange: (flag: boolean) => void;\n  }\n}\n\n/** 启用自动播放设置 */\n\nexport default class AutoPlay extends BasePlugin {\n  static pluginName = \"autoPlay\";\n  private _status = false;\n  protected checkbox?: Checkbox;\n  apply(player: Player, options: PlayerOptions) {\n    if (options.autoPlay) this.toggle(true);\n  }\n  ready() {\n    if (this.plugin.settings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.status,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"自动播放\",\n      });\n      this.plugin.settings.$play.appendChild(container);\n    }\n  }\n  toggle(v: boolean) {\n    if (v) {\n      this._status = true;\n    } else {\n      this._status = false;\n    }\n    this.player.emit(\"autoPlayChange\", v);\n  }\n  get status() {\n    return this._status;\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { Checkbox } from \"@/components\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    /** 跳转到上次播放位置 */\n    autoSeekChange: (flag: boolean) => void;\n  }\n  interface PlayerOptions {\n    /** 跳转到上次播放位置 */\n    autoSeek?: boolean;\n    /** 上次播放的时间点(秒)，若存在time选项则此项失效 */\n    lastPosition?: number;\n  }\n}\n\n/** 跳转到上次播放位置 */\n\nexport default class AutoSeek extends BasePlugin {\n  static pluginName = \"autoSeek\";\n  private _status = false;\n  protected checkbox?: Checkbox;\n\n  apply(player: Player, options: PlayerOptions) {\n    if (options.autoSeek) {\n      this.toggle(true);\n      this.player.once(\"loadedmetadata\", () => {\n        console.log(`ok: ${options.time} ${options.lastPosition}`);\n        !options.time && options.lastPosition && this.player.seek(Math.floor(options.lastPosition));\n        options.autoPlay && this.player.play();\n      });\n    }\n  }\n\n  ready() {\n    if (this.plugin.settings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.status,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"断点续播\",\n      });\n      this.plugin.settings.$play.appendChild(container);\n    }\n  }\n\n  toggle(v: boolean) {\n    if (v) {\n      this._status = true;\n    } else {\n      this._status = false;\n    }\n    this.player.emit(\"autoSeekChange\", v);\n  }\n  get status() {\n    return this._status;\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst themeOptionsVars = {\n  primaryColor: \"--mp-primary-color\",\n  secondaryColor: \"--mp-secondary-color\",\n  borderRadius: \"--mp-border-radius\",\n  bgLight: \"--mp-bg-light\",\n  bgDark: \"--mp-bg-dark\",\n  bgBlack: \"--mp-bg-black\",\n};\n\nexport type ThemeOptions = Partial<Record<keyof typeof themeOptionsVars, string>>;\ndeclare module \"@core\" {\n  interface Player {\n    theme?: Theme;\n  }\n}\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    theme?: ThemeOptions;\n    /** 颜色模式 */\n    colorScheme?: ThemeColorScheme;\n  }\n}\n\nexport type ThemeColorScheme = \"light\" | \"dark\" | \"auto\";\n\nexport default class Theme extends BasePlugin {\n  static pluginName = \"theme\";\n  private properties: ThemeOptions = {};\n  /** 绑定了主题变量的DOM元素 */\n  private themeElement: HTMLElement[];\n  /** 匹配暗黑模式 */\n  private _matchDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  private _handleDarkScheme: (e: MediaQueryListEvent) => void;\n  constructor(player: Player) {\n    super(player);\n    this.themeElement = [this.player.container];\n    this._handleDarkScheme = (e) => {\n      this.player.$el.classList.toggle(\"mpui-dark\", e.matches);\n    };\n  }\n  apply(player: Player, options: PlayerOptions) {\n    this.setTheme(options.theme || {});\n  }\n  /** 设置主题 */\n  setTheme(theme: ThemeOptions) {\n    Object.assign(this.properties, theme);\n    this.themeElement.forEach((el) => {\n      let name: keyof ThemeOptions;\n      for (name in theme) {\n        el.style.setProperty(themeOptionsVars[name], theme[name]!);\n      }\n    });\n  }\n  /** 设置某个主题属性 */\n  set(name: keyof ThemeOptions, value: string) {\n    this.properties[name] = value;\n    this.themeElement.forEach((el) => {\n      el.style.setProperty(themeOptionsVars[name], value);\n    });\n  }\n  get(name: keyof ThemeOptions) {\n    return this.properties[name];\n  }\n  /** 为元素绑定主题变量 */\n  public bind(el: HTMLElement) {\n    this.themeElement.push(el);\n    let name: keyof typeof themeOptionsVars;\n    for (name in this.properties) {\n      const value = this.properties[name];\n      value && el.style.setProperty(themeOptionsVars[name], value);\n    }\n  }\n  setColorScheme(scheme: ThemeColorScheme) {\n    this.player.$el.classList.toggle(\"mpui-dark\", scheme == \"dark\");\n    if (scheme == \"auto\") {\n      this._matchDarkScheme.addEventListener(\"change\", this._handleDarkScheme);\n    } else {\n      this._matchDarkScheme.removeEventListener(\"change\", this._handleDarkScheme);\n    }\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions, VideoInfo } from \"@/types\";\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    part?: Part;\n  }\n\n  export interface VideoInfo {\n    /** 视频分P列表 */\n    list?: Omit<VideoInfo, \"list\" | \"part\">[];\n    /** 要播放的分P */\n    part?: number;\n  }\n\n  export interface PlayerEventMap {\n    partListChange: (list: VideoInfo[]) => void;\n    partChange: (part: number) => void;\n  }\n}\n\n/** 视频分P功能，将多段视频作为一个分P视频加载 */\n\nexport default class Part extends BasePlugin {\n  static pluginName = \"part\";\n  constructor(player: Player) {\n    super(player);\n  }\n  baseVideoInfo: VideoInfo | null = null;\n  init() {\n    this.player.hook.register(\n      \"video.set\",\n      (info) => {\n        // 如果基本信息中的part与当前传入的part不一致，则更改当前分P列表\n        if (!this.baseVideoInfo?.list || this.baseVideoInfo?.list != info.list) {\n          this.baseVideoInfo = { ...info };\n          this.player.emit(\"partListChange\", []);\n        }\n        // 如果视频信息中存在list，则直接设置part\n        if (info.list) {\n          info.part ||= 1;\n          Object.assign(info, info.list[info.part - 1]);\n          info.hasNext ||= info.part! < info.list.length;\n          info.hasPrev ||= info.part! > 1;\n          this.player.emit(\"partChange\", info.part);\n        } else {\n          this.player.emit(\"partChange\", 1);\n        }\n      },\n      true\n    );\n    this.player.hook.register(\"next\", () => {\n      // 如果视频信息中有list，且part<list.length，则设置下一P\n      if (this.list && this.part! < this.num) {\n        this.set(this.part + 1);\n        return false;\n      }\n    });\n    this.player.hook.register(\"prev\", () => {\n      // 如果视频信息中有list，且part>1，则设置上一P\n      if (this.list && this.part! > 1) {\n        this.set(this.part - 1);\n        return false;\n      }\n    });\n  }\n  /** 设置分P */\n  set(p: number, play?: boolean) {\n    const info = this.player.getVideoInfo();\n    if (p > 0 && p <= (info.list?.length || 0)) {\n      this.player.setVideo(\n        {\n          ...this.baseVideoInfo,\n          part: p,\n        },\n        play ?? !this.player.paused\n      );\n    }\n  }\n  get num() {\n    return this.player.getVideoInfo().list?.length || 0;\n  }\n  get list() {\n    return this.player.getVideoInfo().list || [];\n  }\n  get part() {\n    return this.player.getVideoInfo().part || 1;\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { LoadInfo, PlayerOptions } from \"@/types\";\n\nexport default class Seamless extends BasePlugin {\n  static pluginName = \"seamless\";\n  constructor(player: Player) {\n    super(player);\n  }\n  /** 无缝加载视频 */\n  load(info: LoadInfo) {\n    this.player.emit(\"videoLoad\", info);\n    const { url, type, play, time } = info;\n    const oldVideo = this.player.$video;\n    const video = oldVideo.cloneNode() as HTMLVideoElement;\n    const controller = this.player.loader.create(info, video);\n    video.addEventListener(\n      \"loadedmetadata\",\n      () => {\n        this.player.$content.insertBefore(video, oldVideo);\n        const t = time === true ? this.player.currentTime : time || 0;\n        video.currentTime = t;\n        !this.player.paused && video.play();\n        video.addEventListener(\n          \"canplay\",\n          () => {\n            this.player.emit(\"videoLoad\", info);\n            this.player.isPip && video.requestPictureInPicture();\n            this.player.attachMediaController(controller);\n            oldVideo.remove();\n            play == true && this.player.paused && this.player.play();\n            play == false && !this.player.paused && this.player.pause();\n          },\n          { once: true }\n        );\n      },\n      { once: true }\n    );\n  }\n  ready() {\n    this.player.hook.register(\"video.load\", (ctx) => {\n      /** 加载视频时，只有设置为从当前播放时间加载才能自动无缝加载 */\n      if (ctx.time !== true) return;\n      this.load(ctx);\n      this.player.emit(\"videoLoad\", ctx);\n      return false;\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { VideoInfo } from \"@/types\";\nimport { PanelPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-partlist\">\n    <ul class=\"${classPrefix}-partlist-list mpui-list\"></ul>\n  </div>\n`;\n\nconst templateList = (list: Omit<VideoInfo, \"list\" | \"part\">[], setPart: (p: number) => void) =>\n  list.map(\n    ({ title }, index) => html`\n      <li\n        class=\"${classPrefix}-partlist-item\"\n        @click=${() => {\n          setPart(index + 1);\n        }}\n        data-part=\"${index + 1}\"\n      >\n        <div class=\"${classPrefix}-partlist-item-id\">P${index + 1}</div>\n        <div class=\"${classPrefix}-partlist-item-title\">${title}</div>\n      </li>\n    `\n  );\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    partList?: PartList;\n  }\n}\n/** 分P列表面板 */\nexport default class PartList extends PanelPlugin {\n  static pluginName = \"partList\";\n  name = \"partList\";\n  title = \"分P列表\";\n  $list: HTMLElement;\n  private _part = 0;\n  private _list: VideoInfo[\"list\"] = [];\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-partlist`)!);\n    this.$list = this.$(`.${classPrefix}-partlist-list`)!;\n  }\n  init() {\n    this.player.on(\"videoChange\", (v) => {\n      this._update(v.list);\n      this._select(v.part || 1);\n    });\n  }\n  private _update(list: VideoInfo[\"list\"]) {\n    if (list == this._list) return;\n    this._list = list;\n    render(\n      templateList(list || [], (p) => {\n        this.plugin.part?.set(p);\n      }),\n      this.$list\n    );\n  }\n  private _select(p: number) {\n    this.$list.querySelector(`li[data-part=\"${this._part}\"]`)?.classList.remove(\"is-selected\");\n    this._part = p;\n    this.$list.querySelector(`li[data-part=\"${p}\"]`)?.classList.add(\"is-selected\");\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-danmakulist\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <div class=\"${classPrefix}-controls-button-text\">弹幕列表</div>\n    </div>\n    <div class=\"mpui-tooltip\">弹幕列表</div>\n  </div>\n`;\n\nexport default class ButtonDanmakulist extends ControlsPlugin {\n  static pluginName = \"buttonDanmakuList\";\n  name = \"danmakuList\";\n\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n  $text: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$text = this.$(`.${classPrefix}-controls-button-text`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.$icon.addEventListener(\"click\", () => {\n      this.plugin.danmakuList?.toggle();\n    });\n  }\n}\n","import { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@core\" {\n  interface Player {\n    quality?: Quality;\n  }\n}\n\ndeclare module \"@core\" {\n  export interface PlayerEventMap {\n    /** 视频质量切换 */\n    qualityChanging: (quality: QualityItem) => void;\n    /** 视频质量切换完毕 */\n    qualityChanged: (quality: QualityItem) => void;\n    /** 视频质量切换失败 */\n    qualityChangeFailed: (quality: QualityItem) => void;\n    /** 视频质量列表更新 */\n    qualityListUpdate: (quality: QualityItem[]) => void;\n  }\n}\n\nexport interface VideoSource {\n  url: string;\n  type: string;\n  label?: string;\n  quality?: string;\n}\nexport interface QualityItem {\n  /** 宽度 */\n  width?: number;\n  /** 高度 */\n  height?: number;\n  /** 帧率 */\n  frameRate?: number;\n  /** 码率 */\n  bitRate?: number;\n  /** 视频源url */\n  url?: string;\n  /** 视频类型 */\n  type?: string;\n  /** 视频质量描述 */\n  quality?: string;\n  /** 视频质量切换逻辑 */\n  change?: (url?: string) => Promise<void>;\n}\n\nexport default class Quality extends BasePlugin {\n  static pluginName = \"quality\";\n  /** 当前视频质量 */\n  current: QualityItem | null = null;\n  /** 目标切换视频质量 */\n  target: QualityItem | null = null;\n  /** 视频质量列表 */\n  list: QualityItem[] = [];\n  init() {\n    this.player.hook.register(\"video.set\", () => {\n      this.current = null;\n      this.target = null;\n      this.list = [];\n    });\n  }\n  apply(): void {\n    this.player.define(\"quality\", { value: this });\n  }\n  /** 切换视频质量 */\n  set(item: string | QualityItem) {\n    let quality: QualityItem;\n    if (typeof item == \"string\") {\n      const result = this.list.find((item) => quality === item.quality);\n      if (!result) {\n        this._emitChangeFailed({});\n        return;\n      }\n      quality = result;\n    } else {\n      quality = item;\n    }\n    if (quality.change) {\n      quality.change(quality.url).then(\n        () => {\n          this.updateCurrent(quality);\n        },\n        () => {\n          this._emitChangeFailed(quality);\n        }\n      );\n    } else if (quality.url) {\n      this.player.loadVideo({ url: quality.url, type: quality.type, play: true, time: true });\n      this.player.once(\"canplay\", () => {\n        this.updateCurrent(quality);\n      });\n    }\n  }\n  private _emitChangeFailed(quality: QualityItem) {\n    this.target = null;\n    this.player.emit(\"qualityChangeFailed\", quality);\n  }\n  /** 更新当前视频质量 */\n  async updateCurrent(quality: QualityItem) {\n    this.current = quality;\n    this.target = null;\n    this.player.emit(\"qualityChanged\", quality);\n  }\n  /** 更新视频质量列表 */\n  async updateList(list: QualityItem[]) {\n    this.list = list;\n    this.player.emit(\"qualityListUpdate\", list);\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { QualityItem } from \"@plugin/quality\";\nimport { createElement } from \"@/utils\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-quality\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <div class=\"${classPrefix}-controls-button-text\">自动</div>\n    </div>\n\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel\">\n        <ul class=\"${classPrefix}-button-quality-list\"></ul>\n      </div>\n    </div>\n  </div>\n`;\n\ndeclare module \"@plugin/quality\" {\n  interface QualityItem {\n    label?: string | HTMLElement;\n    buttonLabel?: string | HTMLElement;\n  }\n}\n\nexport default class ButtonQuality extends ControlsPlugin {\n  static pluginName = \"buttonQuality\";\n  name = \"quality\";\n  $icon: HTMLElement;\n  $text: HTMLElement;\n  $panel: HTMLElement;\n\n  $list: HTMLElement;\n\n  private _itemMap = new Map<QualityItem, HTMLElement>();\n\n  /** 获取label */\n  getLabel?: (quality: QualityItem) => string | HTMLElement;\n  /** 获取按钮label */\n  getButtonLabel?: (quality: QualityItem) => string | HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$text = this.$(`.${classPrefix}-controls-button-text`)!;\n    this.$panel = this.$(`.${classPrefix}-controls-panel`)!;\n\n    this.$list = this.$(`.${classPrefix}-button-quality-list`)!;\n  }\n\n  init() {\n    this.player.on(\"qualityListUpdate\", (list) => {\n      this._updateList(list);\n    });\n    this.player.on(\"qualityChanging\", (quality) => {\n      this._updateItem(quality);\n    });\n    this.player.on(\"qualityChanged\", (quality) => {\n      this._updateItem(quality);\n    });\n    this.player.on(\"qualityChangeFailed\", () => {\n      this._updateItem(this.player.quality!.current || {});\n    });\n  }\n\n  private _updateList(list: QualityItem[]) {\n    this._itemMap = new Map();\n    if (!list.length) {\n      this.$panel.style.display = \"none\";\n      this.$icon.style.cursor = \"default\";\n    } else {\n      this.$panel.style.display = \"\";\n      this.$icon.style.cursor = \"\";\n    }\n    this.$list.innerHTML = \"\";\n    const fragment = new DocumentFragment();\n    list?.forEach((quality) => {\n      const label = quality.label || this.getLabel?.(quality) || quality.quality;\n      if (label) {\n        const item = createElement(\n          \"li\",\n          {\n            class: `${classPrefix}-button-quality-item`,\n            \"data-value\": quality.quality || \"\",\n          },\n          typeof label == \"string\" ? new Text(label) : label\n        );\n        item.onclick = () => {\n          this.player.quality?.set(quality);\n        };\n        this._itemMap.set(quality, item);\n        fragment.appendChild(item);\n      }\n    });\n    this.$list.appendChild(fragment);\n  }\n\n  private _updateItem(quality: QualityItem) {\n    // 更新label内容\n    const label =\n      quality.buttonLabel ||\n      this.getButtonLabel?.(quality) ||\n      (typeof quality.label == \"object\" ? quality.label.cloneNode(true) : quality.label) ||\n      this.getLabel?.(quality) ||\n      quality.quality;\n\n    if (!label) {\n      this.hide();\n    } else {\n      this.show();\n      if (typeof label == \"string\") {\n        this.$text.innerText = label;\n      } else {\n        this.$text.innerHTML = \"\";\n        this.$text.appendChild(label);\n      }\n    }\n    // 更新列表checked\n    this.$list.querySelectorAll(\"li\").forEach((item) => {\n      item.classList.toggle(\"is-checked\", item == this._itemMap.get(quality));\n    });\n  }\n  get ignored() {\n    return !this.player.quality;\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { createElement } from \"@/utils\";\nimport MfunsPlayer from \"@/player\";\nimport { html, render } from \"lit-html\";\n\nconst template = html`\n  <div class=\"${classPrefix}-videostatus-paused\"></div>\n  <div class=\"${classPrefix}-videostatus-loading\">\n    <div class=\"${classPrefix}-videostatus-loading-icon\">\n      <span>L</span>\n      <span>O</span>\n      <span>A</span>\n      <span>D</span>\n      <span>I</span>\n      <span>N</span>\n      <span>G</span>\n    </div>\n    <div class=\"${classPrefix}-videostatus-loading-content\">正在缓冲</div>\n    <div class=\"${classPrefix}-videostatus-loading-speed\"></div>\n  </div>\n  <div class=\"${classPrefix}-videostatus-volume\"></div>\n`;\n\n/** 视频状态显示 */\n\nexport default class VideoStatus extends BasePlugin {\n  static pluginName = \"videoStatus\";\n  $el: HTMLElement;\n  $paused: HTMLElement;\n  $loading: HTMLElement;\n  $volume: HTMLElement;\n  constructor(player: MfunsPlayer) {\n    super(player);\n    this.$el = createElement(\"div\", { class: `${classPrefix}-videostatus` });\n    render(template, this.$el);\n    this.$paused = this.$el.querySelector(`.${classPrefix}-videostatus-paused`)!;\n    this.$loading = this.$el.querySelector(`.${classPrefix}-videostatus-loading`)!;\n    this.$volume = this.$el.querySelector(`.${classPrefix}-videostatus-volume`)!;\n\n    this.player.$area.appendChild(this.$el);\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { createElement } from \"@/utils\";\nimport MfunsPlayer from \"@/player\";\nimport { html, render } from \"lit-html\";\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    loadingMask?: {\n      delay?: number;\n      getTips?: () => Promise<string | Node>;\n    };\n  }\n}\n\nconst template = html`\n  <div class=\"${classPrefix}-loadingmask-icon\">\n    <div class=\"${classPrefix}-loadingmask-image\"></div>\n  </div>\n  <div class=\"${classPrefix}-loadingmask-info\"></div>\n  <div class=\"${classPrefix}-loadingmask-tips\">Loading...</div>\n`;\n\n/** 加载画面 */\n\nexport default class LoadingMask extends BasePlugin {\n  static pluginName = \"loadingMask\";\n  $el: HTMLElement;\n  $info: HTMLElement;\n  $tips: HTMLElement;\n  getTips?: () => Promise<string | Node>;\n  delay: number = 0;\n\n  constructor(player: MfunsPlayer) {\n    super(player);\n    this.$el = createElement(\"div\", { class: `${classPrefix}-loadingmask` });\n    render(template, this.$el);\n    this.$info = this.$el.querySelector(`.${classPrefix}-loadingmask-info`)!;\n    this.$tips = this.$el.querySelector(`.${classPrefix}-loadingmask-tips`)!;\n\n    this.player.$main.appendChild(this.$el);\n    /* if (!this.api?.loadingTips) {\n      this.$tips.style.display = \"none\";\n    } */\n  }\n  apply(player: MfunsPlayer, options: PlayerOptions): void {\n    this.getTips = options.loadingMask?.getTips;\n    this.delay = options.loadingMask?.delay || 0;\n  }\n  init() {\n    this._toggle(true);\n    this._add(\"init\", \"播放器初始化…\");\n    this.player.on(\"danmaku:loading\", () => {\n      this._add(\"danmaku\", \"请求弹幕数据中…\");\n    });\n    this.player.on(\"danmaku:loaded\", (dan, err) => {\n      this._change(\"danmaku\", (line) => {\n        if (!err) {\n          line.innerText = \"请求弹幕数据中… [完成]\";\n        } else {\n          line.innerText = `请求弹幕数据中… [失败] ${err}`;\n        }\n      });\n    });\n    this.player.on(\"videoChange\", async () => {\n      this._toggle(true);\n      this._tips(await this.getTips?.());\n    });\n    this.player.on(\"videoLoad\", () => {\n      this._add(\"video\", \"请求视频数据中…\");\n\n      this.player.once(\"canplay\", () => {\n        this._change(\"video\", (line) => {\n          line.innerText = \"请求视频数据中… [完成]\";\n          let timer = 0;\n          const handler = () => {\n            this._toggle(false);\n            this._tips(\"Loading...\");\n            this._clear();\n            window.clearTimeout(timer);\n          };\n          if (this.delay) {\n            timer = window.setTimeout(handler, this.delay);\n          } else {\n            handler();\n          }\n        });\n      });\n      this.player.$video.addEventListener(\n        \"error\",\n        (err) => {\n          this._change(\"video\", (line) => {\n            line.innerText = `请求视频数据中… [失败] ${err}`;\n          });\n        },\n        { once: true }\n      );\n    });\n    this.player.on(\"error\", (err) => {\n      this._add(\"error\", `${err}`);\n    });\n  }\n  ready() {\n    this._change(\"init\", (line) => {\n      line.innerText = \"播放器初始化… [完成]\";\n    });\n  }\n  private _clear() {\n    this.$info.innerHTML = \"\";\n  }\n  private _add(id: string, content: string | Node) {\n    const item = createElement(\"div\", { class: `${classPrefix}-loadingmask-info-item` });\n    item.dataset.id = id;\n    item.append(content);\n    this.$info.appendChild(item);\n  }\n  private _change(id: string, func: (line: HTMLElement) => void) {\n    const item: HTMLElement | null = this.$info.querySelector(`[data-id=\"${id}\"]`);\n    item && func(item);\n  }\n  private _toggle(flag: boolean) {\n    this.$el.classList.toggle(\"is-show\", flag);\n  }\n  private _tips(content?: string | Node) {\n    this.$tips.innerHTML = \"\";\n    content && this.$tips.append(content);\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { createElement } from \"@/utils\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nexport default class VideoTitle extends ControlsPlugin {\n  static pluginName = \"videoTitle\";\n  name = \"title\";\n\n  constructor(player: Player) {\n    super(player, createElement(\"div\", { class: `${classPrefix}-videotitle` }));\n  }\n\n  init() {\n    this.player.on(\"videoChange\", (info) => {\n      console.log(info.title);\n      this.$el.innerText = info.title || \"\";\n    });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\n\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\nconst template = () => html`\n  <div class=\"${classPrefix}-header-mask\"></div>\n  <div class=\"${classPrefix}-header-main mpui-crystal\">\n    <div class=\"${classPrefix}-header-left\"></div>\n    <div class=\"${classPrefix}-header-center\"></div>\n    <div class=\"${classPrefix}-header-right\"></div>\n  </div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    header?: Header;\n  }\n}\n\n/** 控制栏 */\nexport default class Header extends BasePlugin {\n  static pluginName = \"header\";\n  player: Player;\n  $el: HTMLElement;\n  $main: HTMLElement;\n  $left: HTMLElement;\n  $center: HTMLElement;\n  $right: HTMLElement;\n\n  isHover = false;\n\n  protected inactiveHook: () => boolean;\n  protected mouseEnterHandler: () => void;\n  protected mouseLeaveHandler: () => void;\n\n  constructor(player: Player) {\n    super(player);\n    this.player = player;\n    this.$el = createElement(\"div\", { class: `${classPrefix}-header` });\n    render(template(), this.$el);\n    this.$main = this.$el.querySelector(`.${classPrefix}-header-main`)!;\n    this.$left = this.$el.querySelector(`.${classPrefix}-header-left`)!;\n    this.$center = this.$el.querySelector(`.${classPrefix}-header-center`)!;\n    this.$right = this.$el.querySelector(`.${classPrefix}-header-right`)!;\n    this.player.$main.append(this.$el);\n\n    this.inactiveHook = () => !this.isHover;\n    this.mouseEnterHandler = () => {\n      this.isHover = true;\n    };\n    this.mouseLeaveHandler = () => {\n      this.isHover = false;\n    };\n  }\n  init() {\n    this.player.hook.register(\"inactive\", this.inactiveHook);\n    this.$el.addEventListener(\"mouseenter\", this.mouseEnterHandler);\n    this.$el.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\n  }\n  destroy() {\n    this.player.hook.unregister(\"inactive\", this.inactiveHook);\n    this.$el.removeEventListener(\"mouseenter\", this.mouseEnterHandler);\n    this.$el.removeEventListener(\"mouseleave\", this.mouseLeaveHandler);\n  }\n}\n","import { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\nimport { classPrefix } from \"@/config\";\nimport { Checkbox } from \"@/components\";\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    mini?: boolean;\n  }\n  interface PlayerEventMap {\n    miniChange: (flag: boolean) => void;\n  }\n}\n\n/** 小窗播放器 */\n\nexport default class Mini extends BasePlugin {\n  static readonly pluginName = \"mini\";\n  /** 播放器小窗显示状态 */\n  #shown = false;\n  /** 播放器小窗拖动状态 */\n  #dragging = false;\n  /** 播放器小窗启用状态 */\n  #enabled = false;\n\n  $el: HTMLElement;\n  checkbox?: Checkbox;\n  constructor(player: Player) {\n    super(player);\n    this.$el = createElement(\"div\", { class: `${classPrefix}-mini` });\n    this.player.$el.appendChild(this.$el);\n    this.player.on(\"intersection\", (isIntersecting) => {\n      const disabled = !this.#enabled || this.player.isPip;\n      if (isIntersecting) {\n        !disabled && this._hide();\n      } else {\n        !disabled && this._show();\n      }\n      console.log(isIntersecting);\n    });\n    if (player.plugin.buttonSettings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.enabled,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"小窗模式\",\n      });\n      player.plugin.settings?.$others.appendChild(container);\n      player.on(\"miniChange\", (flag) => this.checkbox?.setValue(flag));\n    }\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    if (options.mini) this.#enabled = true;\n  }\n\n  init() {\n    this.$el.addEventListener(\"click\", () => {\n      !this.#dragging && (this.player.paused ? this.player.play : this.player.pause());\n    });\n    // 拖动操作\n    this.$el.addEventListener(\"mousedown\", (e) => {\n      const { clientX, clientY } = e;\n      const { offsetLeft, offsetTop } = this.$el;\n      console.log([offsetLeft, offsetTop]);\n      const mLeft = clientX - offsetLeft;\n      const mTop = clientY - offsetTop;\n      const mousemoveHandler = (e: MouseEvent) => {\n        this.#dragging = true;\n        const { clientX, clientY } = e;\n        this.$el.style.left = `${clientX - mLeft}px`;\n        this.$el.style.top = `${clientY - mTop}px`;\n      };\n      const mouseupHandler = () => {\n        this.$el.removeEventListener(\"mousemove\", mousemoveHandler);\n        document.removeEventListener(\"mouseup\", mouseupHandler);\n        requestAnimationFrame(() => {\n          this.#dragging = false;\n        });\n      };\n      this.$el.addEventListener(\"mousemove\", mousemoveHandler);\n      document.addEventListener(\"mouseup\", mouseupHandler);\n    });\n\n    this.player.on(\"enterpictureinpicture\", () => this._hide());\n    this.player.on(\"leavepictureinpicture\", () => !this.player.isIntersecting && this._show());\n  }\n\n  ready() {\n    this.enabled && this.toggle(true);\n  }\n\n  private _show() {\n    if (this.#shown) return;\n    this.player.$area.style.height = `${this.player.$area.clientHeight}px`;\n    this.$el.append(...this.player.$area.children);\n    this.$el.classList.add(\"is-show\");\n    this.#shown = true;\n  }\n  private _hide() {\n    if (!this.#shown) return;\n    this.player.$area.style.height = \"\";\n    this.player.$area.append(...this.$el.children);\n    this.$el.classList.remove(\"is-show\");\n    this.#shown = false;\n  }\n  /** 播放器小窗启用状态 */\n  get enabled() {\n    return this.#enabled;\n  }\n  /** 播放器小窗显示状态 */\n  get shown() {\n    return this.#shown;\n  }\n  toggle(flag: boolean) {\n    if (flag) {\n      if (this.enabled) return;\n      this.player.isIntersecting == false && this._show();\n      this.player.emit(\"miniChange\", true);\n    } else {\n      if (!this.enabled) return;\n      this._hide();\n      this.player.emit(\"miniChange\", false);\n    }\n\n    this.#enabled = flag;\n  }\n}\n","import { Checkbox } from \"@/components\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\nimport { classPrefix } from \"@/config\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    /** 关灯模式 */\n    lightOffChange: (flag: boolean) => void;\n  }\n}\n\n/** 关灯模式 */\n\nexport default class LightOff extends BasePlugin {\n  static pluginName = \"lightOff\";\n  status = false;\n  checkbox?: Checkbox;\n  $mask: HTMLElement;\n  constructor(player: Player) {\n    super(player);\n    this.$mask = createElement(\"div\", { class: `${classPrefix}-lightoff-mask` });\n    if (player.plugin.buttonSettings) {\n      const container = document.createElement(\"div\");\n      this.checkbox = new Checkbox({\n        container,\n        value: this.status,\n        onToggle: (val) => {\n          this.toggle(val);\n        },\n        label: \"关灯模式\",\n      });\n      player.plugin.settings?.$others.appendChild(container);\n      player.on(\"lightOffChange\", (flag) => this.checkbox?.setValue(flag));\n    }\n  }\n  ready() {\n    this.player.$el.append(this.$mask);\n  }\n  toggle(v: boolean) {\n    if (v) {\n      this.player.$el.classList.add(\"is-lightoff\");\n    } else {\n      this.player.$el.classList.remove(\"is-lightoff\");\n    }\n    this.player.emit(\"lightOffChange\", v);\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@core\" {\n  interface Player {\n    /** 是否为网页全屏模式 */\n    isWebscreen?: boolean;\n    /** 进入网页全屏模式 */\n    enterWebscreen?: () => void;\n    /** 退出网页全屏模式 */\n    exitWebscreen?: () => void;\n  }\n  interface PlayerEventMap {\n    /** 进入网页全屏模式 */\n    webscreenEnter: () => void;\n    /** 退出网页全屏模式 */\n    webscreenExit: () => void;\n  }\n}\n\nexport default class Webscreen extends BasePlugin {\n  static pluginName = \"webscreen\";\n  init() {\n    // --- 绑定属性 --- //\n\n    this.player.define(\"isWebscreen\", {\n      get: () => this.status,\n    });\n    this.player.define(\"enterWebscreen\", () => this.enter());\n    this.player.define(\"exitWebscreen\", () => this.exit());\n\n    // --- 绑定事件 --- //\n\n    // 进入全屏模式时，退出网页全屏模式\n    this.player.on(\"fullscreenEnter\", () => {\n      this.exit();\n    });\n    // 进入网页全屏模式时，退出全屏模式\n    this.player.on(\"webscreenEnter\", () => {\n      this.player.exitFullscreen?.();\n    });\n  }\n\n  // --- 内置方法 --- //\n  /** 进入网页全屏 */\n  enter() {\n    if (this.status) return;\n    this.player.$el.classList.add(\"is-webscreen\");\n    this.player.emit(\"webscreenEnter\");\n  }\n  /** 退出网页全屏 */\n  exit() {\n    if (!this.status) return;\n    this.player.$el.classList.remove(\"is-webscreen\");\n    this.player.emit(\"webscreenExit\");\n  }\n  /** 当前状态 */\n  get status(): boolean {\n    return this.player.$el.classList.contains(\"is-webscreen\");\n  }\n}\n","import { DanmakuInvokes, DanmakuItem } from \"./types\";\nimport { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\ndeclare module \"@core\" {\n  interface Player {\n    danmaku?: Danmaku;\n  }\n}\n\ndeclare module \"@core\" {\n  interface PlayerValueMap {\n    /** 弹幕不透明度 */\n    \"danmaku.opacity\": number;\n    /** 弹幕移动速度 */\n    \"danmaku.speed\": number;\n    /** 弹幕显示区域 */\n    \"danmaku.area\": number;\n    /** 弹幕大小 */\n    \"danmaku.scale\": number;\n    /** 弹幕字体 */\n    \"danmaku.font\": string;\n    /** 弹幕加粗 */\n    \"danmaku.bold\": boolean;\n  }\n  interface PlayerPlugins {\n    danmaku?: Danmaku;\n  }\n}\n\n/** 弹幕模块\n *\n * 负责控制弹幕添加、移除、播放等基本操作\n */\nexport default class Danmaku extends BasePlugin {\n  static readonly pluginName = \"danmaku\";\n\n  $el: HTMLDivElement;\n\n  handler: Record<string, (dan: DanmakuItem[]) => void> = {};\n\n  private _status = true;\n\n  get status() {\n    return this._status;\n  }\n\n  invoke: DanmakuInvokes = {};\n\n  constructor(player: Player) {\n    super(player);\n\n    this.$el = createElement(\"div\", { class: `${classPrefix}-danmaku-wrap` });\n\n    this.player.$content.after(this.$el);\n  }\n  init() {\n    this.player.define(\"danmaku\", { value: this });\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    this.invoke = options.danmakuInvoke || {};\n  }\n\n  /**\n   * 添加弹幕到弹幕池\n   * @param dan 要添加的弹幕\n   * @param play 是否播放超时弹幕\n   * */\n  add(dan: DanmakuItem[], play?: boolean) {\n    this.player.emit(\"danmaku:add\", dan, play || false);\n  }\n\n  /**\n   * 绘制一条弹幕\n   * @param dm 要绘制的弹幕\n   * */\n  draw(dm: DanmakuItem) {\n    this.player.emit(\"danmaku:draw\", dm);\n  }\n\n  /**\n   * 从弹幕池中移除弹幕\n   * @param ids 要移除的弹幕id\n   * */\n  remove(dan: DanmakuItem[]) {\n    this.player.emit(\"danmaku:remove\", dan);\n  }\n\n  /** 清空弹幕池 */\n  clear() {\n    this.player.emit(\"danmaku:clear\");\n  }\n\n  /** 切换弹幕显示 */\n  toggle(flag?: boolean) {\n    if (flag) {\n      this._status = true;\n      this.player.emit(\"danmaku:on\");\n    } else if (flag != null) {\n      this._status = false;\n      this.player.emit(\"danmaku:off\");\n    } else {\n      this.toggle(!this._status);\n    }\n  }\n\n  // 弹幕屏蔽\n\n  /**\n   * 弹幕类型屏蔽\n   * @param type 类型\n   * @param flag 设置是否屏蔽\n   */\n  filterType(type: string, flag: boolean) {\n    this.player.emit(\"danmaku:filter\", type, flag);\n  }\n}\n","import { VideoInfo } from \"@/types\";\n\n/** 弹幕模式 */\nexport enum DanmakuMode {\n  roll = 1,\n  bottom = 4,\n  top = 5,\n  reverse = 6,\n  special = 7,\n  advanced = 9,\n}\n\n/** 弹幕对象接口 */\nexport interface DanmakuItem {\n  /** 弹幕id */\n  id: number | string;\n  /** 发送时间 */\n  time: number;\n  /** 弹幕内容 */\n  content: string;\n  /** 弹幕模式 */\n  mode: DanmakuMode;\n  /** 颜色 */\n  color: number | string;\n  /** 弹幕文字大小 */\n  size: number;\n  /** 日期 */\n  date: number;\n  /** 发送用户 */\n  user: string | number;\n  /** 弹幕是否在此播放器上发送 */\n  fromHere?: boolean;\n}\n\n/** 弹幕发送对象接口 */\nexport type DanmakuSendItem = Omit<DanmakuItem, \"id\" | \"date\" | \"user\">;\n\n/** 弹幕源 */\nexport interface DanmakuSource {\n  /** 弹幕来源url */\n  url: string;\n  /** 弹幕格式 */\n  type: string;\n  /** 获取弹幕数据 */\n  data?: (data: unknown) => unknown;\n  // platform?: string // 平台名称，用于标记平台信息\n  // name?: string // 弹幕来源名称\n}\n\nexport interface DanmakuInvokes {\n  /** 获取弹幕 */\n  get?: (info: VideoInfo) => Promise<unknown>;\n  /** 发送弹幕 */\n  send?: (danmaku: DanmakuSendItem, info: VideoInfo) => Promise<void>;\n  /** 举报弹幕 */\n  report?: (danmaku: DanmakuItem, info: VideoInfo) => Promise<void>;\n  /** 视频作者删除弹幕 */\n  delete?: (danmaku: DanmakuItem[], info: VideoInfo) => Promise<void>;\n  /** 撤回自己发送的弹幕 */\n  recall?: (danmaku: DanmakuItem, info: VideoInfo) => Promise<void>;\n  /** 添加内容屏蔽 */\n  blockContent?: (content: string, flag: boolean) => Promise<void>;\n  /** 添加用户屏蔽 */\n  blockUser?: (user: string | number, flag: boolean) => Promise<void>;\n}\n\nexport interface XMLDanmakuParser {\n  type: \"xml\";\n  parse: (raw: XMLDocument) => DanmakuItem[];\n}\nexport interface JSONDanmakuParser {\n  type: \"json\";\n  parse: (raw: any) => DanmakuItem[];\n}\nexport interface TextDanmakuParser {\n  type: \"text\";\n  parse: (raw: string) => DanmakuItem[];\n}\nexport type DanmakuParser = XMLDanmakuParser | JSONDanmakuParser | TextDanmakuParser;\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    /** 弹幕设置 */\n    danmaku?: {\n      /** 弹幕格式类型 */\n      type?: string;\n      /** 类型屏蔽 */\n      filter?: string[];\n      /** 弹幕不透明度 */\n      opacity?: number;\n      /** 弹幕速度 */\n      speed?: number;\n      /** 弹幕显示区域 */\n      area?: number;\n      /** 弹幕大小 */\n      scale?: number;\n      /** 弹幕字体 */\n      font?: string;\n      /** 字体加粗 */\n      bold?: boolean;\n      /** 用户屏蔽 */\n      blockUser: (string | number)[];\n      /** 内容屏蔽 */\n      blockContent: (string | RegExp)[];\n    };\n    danmakuInvoke: DanmakuInvokes;\n  }\n\n  interface VideoInfo {\n    danmaku?: DanmakuSource[];\n  }\n}\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    // --- 弹幕事件 --- //\n\n    // 弹幕加载\n    /** 弹幕开始加载 */\n    \"danmaku:loading\": () => void;\n    /** 弹幕加载完毕 */\n    \"danmaku:loaded\": (dan: DanmakuItem[], from: { url?: string; id?: string | number }) => void;\n    /** 弹幕加载失败 */\n    \"danmaku:loadFailed\": (err: any, from: { url?: string; id?: string | number }) => void;\n\n    // --- 弹幕事件 --- //\n    /** 开启弹幕 */\n    \"danmaku:on\": () => void;\n    /** 关闭弹幕 */\n    \"danmaku:off\": () => void;\n    /** 弹幕池新增弹幕 */\n    \"danmaku:add\": (dan: DanmakuItem[], play: boolean) => void;\n    /** 弹幕池新增弹幕 */\n    \"danmaku:draw\": (dm: DanmakuItem) => void;\n    /** 弹幕池移除弹幕 */\n    \"danmaku:remove\": (dan: DanmakuItem[]) => void;\n    /** 弹幕池清空 */\n    \"danmaku:clear\": () => void;\n    /** 弹幕类型屏蔽 */\n    \"danmaku:filter\": (type: string, flag: boolean) => void;\n\n    // --- 弹幕操作 --- //\n    /** 发送弹幕 */\n    \"danmaku:send\": () => void;\n    /** 选中指定弹幕 */\n    \"danmaku:select\": (dm: DanmakuItem) => void;\n    /** 屏蔽用户弹幕 */\n    \"danmaku:blockUser\": (user: number | string, flag: boolean) => void;\n    /** 屏蔽弹幕内容 */\n    \"danmaku:blockContent\": (content: string, flag: boolean) => void;\n\n    // --- 弹幕播放属性 --- //\n    /** 弹幕不透明度更改 */\n    \"danmaku:opacityChange\": (value: number) => void;\n    /** 弹幕速度更改 */\n    \"danmaku:speedChange\": (value: number) => void;\n    /** 弹幕区域更改 */\n    \"danmaku:areaChange\": (value: number) => void;\n    /** 弹幕大小更改 */\n    \"danmaku:scaleChange\": (value: number) => void;\n    /** 弹幕字体更改 */\n    \"danmaku:fontChange\": (value: string) => void;\n    /** 弹幕粗体更改 */\n    \"danmaku:boldChange\": (value: boolean) => void;\n  }\n}\n","import { DanmakuMode } from \"../types\";\n/** 播放器弹幕引擎 */\n\nimport { DanmakuItem } from \"../types\";\nimport { createArray, number2Color } from \"@/utils\";\n\nexport type TrackType = \"roll\" | \"reverse\" | \"top\" | \"bottom\";\n\nexport interface DanmakuEngineOptions {\n  fontScale?: number;\n  fontFamily?: string;\n  fontWeight?: string;\n  speed?: number;\n  opacity?: number;\n  limitArea?: number;\n  classPrefix?: string;\n  /** 颜色限制 */\n  colorFilter?: boolean;\n  /** 用户屏蔽 */\n  userFilter?: (string | number)[];\n  /** 内容屏蔽 */\n  contentFilter?: (string | RegExp)[];\n  /** 轨道屏蔽 */\n  trackFilter?: Record<TrackType, boolean>;\n  /** 获取当前时间函数 */\n  getTime: () => number;\n}\n\nexport default class MeonDanmakuEngine {\n  /** 暂停状态 */\n  public paused = false;\n\n  /** 隐藏状态 */\n  public hidden = false;\n\n  /** 弹幕容器 */\n  public readonly container: HTMLDivElement;\n\n  /** 弹幕不透明度 */\n  public opacity: number;\n  /** 弹幕移动速度 */\n  public speed: number;\n  /** 限制区域 */\n  public limitArea: number;\n  /** 弹幕字号缩放 */\n  public fontScale: number;\n  /** 字体 */\n  public fontFamily: string;\n  /** 字重 */\n  public fontWeight: string;\n\n  /** 基准轨道高度 */\n  public baseTrackHeight: number;\n  /** 轨道边距 */\n  public trackPadding: number;\n  /** 颜色屏蔽 */\n  public colorFilter: boolean;\n  /** 轨道屏蔽 */\n  public trackFilter: Record<TrackType, boolean>;\n  public userFilter: (string | number)[];\n  public contentFilter: (string | RegExp)[];\n  /** 允许重叠 */\n  public overlap: boolean;\n  /** 类名前缀 */\n  public classPrefix: string;\n  /** 获取当前时间函数 */\n  public getTime: () => number;\n  /** 当前时间 */\n  private time = 0;\n\n  /** 弹幕池 */\n  private list: DanmakuItem[] = [];\n  /** 待添加弹幕索引 */\n  private currentIndex = 0;\n  /** 文字测量上下文 */\n  private measureContext: CanvasRenderingContext2D | null = null;\n\n  /** 弹幕发射位置与播放器边界的距离 */\n  public startDistance = 2;\n  /** 时间偏移 */\n  public timeOffset = 0;\n  /** 滚动弹幕基准速度 */\n  public baseSpeed = 100;\n  /** 静止弹幕基准持续时间 */\n  public baseDuration = 5;\n  /** 弹幕速度增加率k值\n   * 弹幕速度 = baseSpeed * (1 + deltaSpeed * 弹幕宽度)\n   */\n  public deltaSpeed = 0.002;\n\n  /** 弹幕轨道高度 */\n  private trackHeights: Record<TrackType, number[]> = {\n    roll: [],\n    reverse: [],\n    top: [],\n    bottom: [],\n  };\n\n  /** 弹幕轨道 */\n  private danmakuTracks: Record<TrackType, HTMLElement[][]> = {\n    roll: [],\n    reverse: [],\n    top: [],\n    bottom: [],\n  };\n\n  constructor(container: HTMLDivElement, options: DanmakuEngineOptions) {\n    this.container = container;\n    this.fontScale = options.fontScale ?? 1;\n    this.baseTrackHeight = 28;\n    this.trackPadding = 6;\n    this.speed = options.speed ?? 1;\n    this.opacity = options.opacity ?? 1;\n    this.limitArea = 1;\n    this.overlap = false;\n    this.fontFamily = options.fontFamily ?? \"SimHei\";\n    this.fontWeight = options.fontWeight ?? \"bold\";\n    this.classPrefix = options.classPrefix ?? \"meon\";\n    this.colorFilter = options.colorFilter || false;\n    this.trackFilter = Object.assign(\n      {\n        roll: false,\n        reverse: false,\n        top: false,\n        bottom: false,\n      },\n      options.trackFilter\n    );\n    this.userFilter = options.userFilter || [];\n    this.contentFilter = options.contentFilter || [];\n    this.getTime = options.getTime;\n\n    this.container.classList.add(`${this.classPrefix}-danmaku`);\n    this.checkDanmaku();\n  }\n\n  play() {\n    this.paused = false;\n    this.container.classList.remove(\"is-paused\");\n  }\n\n  pause() {\n    this.paused = true;\n    this.container.classList.add(\"is-paused\");\n  }\n\n  /** 发生跳转 */\n  seek() {\n    // 清屏\n    this.clear();\n    // 重新获取当前时间及待添加弹幕索引\n    this.time = this.getTime();\n    const index = this.list.findIndex((d) => this.time <= d.time);\n    this.currentIndex = index === -1 ? this.list.length : index;\n  }\n\n  /** 设置弹幕池 */\n  setPool(dan: DanmakuItem[]) {\n    // 直接设置弹幕池并排序\n    this.list = [...dan];\n    this.list.sort((a, b) => a.time - b.time);\n    const index = this.list.findIndex((d) => this.time <= d.time);\n    this.currentIndex = index === -1 ? this.list.length : index;\n  }\n\n  /** 重置弹幕池 */\n  reset() {\n    this.clear();\n    this.list = [];\n    this.currentIndex = 0;\n  }\n\n  /** 弹幕池添加弹幕 */\n  add(dan: DanmakuItem[], play?: boolean) {\n    dan.forEach((dm) => {\n      /** 按时间顺序插入弹幕 */\n      const index = this.list.findIndex((d) => dm.time <= d.time);\n      this.list.splice(index === -1 ? this.list.length : index, 0, dm);\n      // 若插入弹幕的时间小于当前时间，则待添加弹幕索引+1\n      if (dm.time < this.time) {\n        this.currentIndex += 1;\n        play && this.draw(dan);\n      }\n    });\n  }\n\n  /** 弹幕池移除弹幕 */\n  remove(dan: DanmakuItem[]) {\n    const displayed = [\n      ...this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-item`),\n    ];\n    dan.forEach((dm) => {\n      const index = this.list.indexOf(dm);\n      if (index === -1) return;\n      this.list.splice(index, 1);\n      // 移除位置若小于当前待添加弹幕位置，则待添加弹幕索引-1\n      if (index < this.currentIndex) this.currentIndex -= 1;\n      // 从DOM中移除弹幕\n      const el = displayed.find((d) => d.dataset.id === dm.id.toString());\n      if (el) {\n        // 此处不移除DOM是为了使弹幕顺利完成动画，以便轨道自动清除弹幕DOM\n        el.innerHTML = \"\";\n      }\n    });\n  }\n\n  /** 弹幕清屏 */\n  clear(type?: TrackType) {\n    if (type) {\n      this.danmakuTracks[type] = [];\n      return;\n    }\n    this.danmakuTracks = {\n      roll: [],\n      reverse: [],\n      top: [],\n      bottom: [],\n    };\n    this.trackHeights = {\n      roll: [],\n      reverse: [],\n      top: [],\n      bottom: [],\n    };\n    this.container.innerHTML = \"\";\n  }\n\n  /** 检查弹幕是否需要进入弹幕池 */\n  checkDanmaku() {\n    if (this.list.length && !this.paused && !this.hidden) {\n      let item = this.list[this.currentIndex];\n      const dan = [];\n      // 刷新当前时间\n      this.time = this.getTime();\n      // 若待添加弹幕时间小于当前时间，则持续添加弹幕直到下一条弹幕的时间不小于当前时间为止\n      while (item && item.time < this.time) {\n        if (\n          this.checkTrackFilter(item) &&\n          this.checkColorFilter(item) &&\n          this.checkUserFilter(item) &&\n          this.checkContentFilter(item)\n        ) {\n          dan.push(item);\n        }\n        this.currentIndex += 1;\n        item = this.list[this.currentIndex];\n      }\n      // console.log(this.currentIndex)\n      this.draw(dan);\n    }\n    window.requestAnimationFrame(() => {\n      this.checkDanmaku();\n    });\n  }\n\n  /** 设置弹幕类型过滤 */\n  setTrackFilter(type: TrackType, value: boolean) {\n    this.trackFilter[type] = value;\n    if (value) {\n      this.container\n        .querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-${type}`)\n        .forEach((el) => {\n          el.innerHTML = \"\";\n        });\n    }\n  }\n\n  /** 检查弹幕类型过滤 */\n  checkTrackFilter(dm: DanmakuItem) {\n    return !this.trackFilter[DanmakuMode[dm.mode] as TrackType];\n  }\n\n  /** 设置弹幕颜色过滤 */\n  setColorFilter(value: boolean) {\n    this.colorFilter = value;\n    if (value) {\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      );\n      items.forEach((el) => {\n        if (el.style.color !== \"rgb(255, 255, 255)\") {\n          el.innerHTML = \"\";\n        }\n      });\n    }\n  }\n\n  /** 检查弹幕颜色过滤 */\n  checkColorFilter(dm: DanmakuItem) {\n    return !this.colorFilter || dm.color === 16777215;\n  }\n\n  /** 设置内容过滤 */\n  setContentFilter(content: string | RegExp, value: boolean) {\n    const contentIndex = this.contentFilter.indexOf(content);\n    if (value) {\n      if (contentIndex > -1) {\n        return;\n      }\n      this.contentFilter.push(content);\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      );\n      if (typeof content == \"string\") {\n        items.forEach((el) => {\n          if (el.innerText.includes(content)) {\n            el.innerHTML = \"\";\n          }\n        });\n      } else {\n        items.forEach((el) => {\n          if (content.test(el.innerText)) {\n            el.innerHTML = \"\";\n          }\n        });\n      }\n    } else {\n      contentIndex > -1 && this.contentFilter.splice(contentIndex, 1);\n    }\n  }\n  /** 检查弹幕内容过滤 */\n  checkContentFilter(dm: DanmakuItem) {\n    for (const keyword of this.contentFilter) {\n      if (typeof keyword == \"string\") {\n        if (dm.content.search(keyword)) return false;\n      } else if (keyword.test(dm.content)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** 设置用户过滤 */\n  setUserFilter(user: string | number, value: boolean) {\n    const contentIndex = this.userFilter.indexOf(user);\n    if (value) {\n      if (contentIndex > -1) {\n        return;\n      }\n      this.userFilter.push(user);\n      const items = this.container.querySelectorAll<HTMLElement>(\n        `.${this.classPrefix}-danmaku-item`\n      );\n      items.forEach((el) => {\n        if (el.dataset.user == user) {\n          el.innerHTML = \"\";\n        }\n      });\n    } else {\n      contentIndex > -1 && this.userFilter.splice(contentIndex, 1);\n    }\n  }\n  /** 检查用户过滤 */\n  checkUserFilter(dm: DanmakuItem) {\n    return this.userFilter.indexOf(dm.user) == -1;\n  }\n\n  /** 绘制弹幕 */\n  draw(dan: DanmakuItem[]) {\n    /** 弹幕轨道高度 */\n    const itemHeight = this.baseTrackHeight * this.fontScale;\n    /** 弹幕容器宽度 */\n    const containerWidth = this.container.offsetWidth;\n    /** 弹幕区域高度 */\n    const containerHeight = this.container.offsetHeight * this.limitArea;\n    /** 轨道数量 */\n    const itemY = Math.floor(containerHeight / itemHeight);\n    // console.log(itemY);\n    if (this.trackHeights.roll.length !== itemY) {\n      this.trackHeights.roll = createArray(itemY, itemHeight);\n    }\n    if (this.trackHeights.reverse.length !== itemY) {\n      this.trackHeights.reverse = createArray(itemY, itemHeight);\n    }\n    if (this.trackHeights.top.length !== itemY) {\n      this.trackHeights.top = createArray(itemY, itemHeight);\n    }\n    if (this.trackHeights.bottom.length !== itemY) {\n      this.trackHeights.bottom = createArray(itemY, itemHeight);\n    }\n    /** 弹幕与弹幕容器右侧的距离(滚动弹幕) */\n    const danItemRight = (el: HTMLElement) => {\n      const containerRight = this.container.getBoundingClientRect().right;\n      const elRight = el.getBoundingClientRect().right;\n      return containerRight - elRight;\n    };\n    /** 弹幕与弹幕容器左侧的距离(逆向弹幕) */\n    const danItemLeft = (el: HTMLElement) => {\n      const containerLeft = this.container.getBoundingClientRect().left;\n      const elLeft = el.getBoundingClientRect().left;\n      return elLeft - containerLeft;\n    };\n    /** 获取弹幕速度 */\n    const getSpeed = (width: number) => this.baseSpeed * (1 + this.deltaSpeed * width) * this.speed;\n    /** 获取单个轨道内所有弹幕 */\n    const getDOMTrack = (type: string, i: number) => {\n      return [\n        ...this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-${type}`),\n      ].filter((el: HTMLElement) => el.dataset.track === `${i}`);\n    };\n    /** 获取弹幕可进入的轨道 */\n    const getTrack = (ele: HTMLElement, type: TrackType, width: number) => {\n      // 对可用范围内的轨道进行一次遍历\n      forTrack: for (let i = 0; this.overlap || i < itemY; i++) {\n        const DOMTrack = getDOMTrack(type, i);\n        /** 该轨道内的所有弹幕 */\n        let track = this.danmakuTracks[type][i];\n        this.danmakuTracks[type][i] = DOMTrack;\n        if (track && track.length) {\n          // 如果该轨道存在弹幕\n          if (type === \"roll\") {\n            /** 弹幕从发射到触碰另一边边界到所需要的时间 */\n            const enterTime = containerWidth / getSpeed(width);\n            if (track.length !== DOMTrack.length) {\n              //\n              track = DOMTrack;\n            }\n            for (const dm of track) {\n              const danRight = danItemRight(dm) - 10;\n              this.trackHeights[type][i] = parseInt(dm.style.fontSize) + this.trackPadding;\n              // 如果滚动弹幕存在同一轨道碰撞的可能，则该轨道不可装填弹幕\n              if (\n                danRight <=\n                  containerWidth - enterTime * getSpeed(dm.getBoundingClientRect().width) ||\n                danRight <= 0\n              ) {\n                // 轨道高度设置为该条弹幕的高度\n                continue forTrack;\n              }\n            }\n          } else if (type === \"reverse\") {\n            /** 弹幕从发射到触碰另一边边界到所需要的时间 */\n            const enterTime = containerWidth / getSpeed(width);\n            if (track.length !== DOMTrack.length) {\n              //\n              track = DOMTrack;\n            }\n            for (const dm of track) {\n              const danLeft = danItemLeft(dm) - 10;\n              this.trackHeights[type][i] = parseInt(dm.style.fontSize) + this.trackPadding;\n              // 如果逆向弹幕存在同一轨道碰撞的可能，则该轨道不可装填弹幕\n              if (\n                danLeft <=\n                  containerWidth - enterTime * getSpeed(dm.getBoundingClientRect().width) ||\n                danLeft <= 0\n              ) {\n                continue forTrack;\n              }\n            }\n          } else {\n            // 非滚动弹幕该轨道不可装填\n            continue forTrack;\n          }\n          // 轨道弹幕组遍历完毕，组内所有弹幕均完全进入容器，可以向该轨道装填弹幕\n          this.danmakuTracks[type][i].push(ele);\n          // 动画结束后，需从轨道弹幕组中移除该弹幕\n          ele.addEventListener(\"animationend\", () => {\n            const index = this.danmakuTracks[type][i]?.indexOf(ele);\n            index && this.danmakuTracks[type][i]?.splice(index, 1);\n          });\n          return i;\n        } else {\n          // 如果该轨道没有弹幕，可以向该轨道装填弹幕\n          if (Array.isArray(this.danmakuTracks[type][i])) {\n            this.danmakuTracks[type][i].push(ele);\n          } else {\n            this.danmakuTracks[type][i] = [ele];\n          }\n\n          ele.addEventListener(\"animationend\", () => {\n            const index = this.danmakuTracks[type][i]?.indexOf(ele);\n            index && this.danmakuTracks[type][i]?.splice(index, 1);\n          });\n          return i;\n        }\n      }\n      // 遍历完毕，所有轨道都不可用，返回-1\n      return -1;\n    };\n\n    const docFragment = document.createDocumentFragment();\n\n    for (let i = 0; i < dan.length; i++) {\n      const dm = dan[i];\n      /** 忽略非普通弹幕 */\n      if (dm.mode >= 7) {\n        continue;\n      }\n      /** 弹幕DOM */\n      const item = document.createElement(\"div\");\n      item.classList.add(`${this.classPrefix}-danmaku-item`);\n      item.classList.add(`${this.classPrefix}-danmaku-${DanmakuMode[dm.mode]}`);\n      item.innerHTML = `${dm.content.replace(/(\\\\n)/g, \"\\n\")}`;\n      if (typeof dm.color == \"number\") {\n        item.style.color = number2Color(dm.color);\n      } else {\n        item.style.color = dm.color;\n      }\n      item.style.opacity = this.opacity.toString();\n      item.style.fontSize = +dm.size * this.fontScale + \"px\";\n      if (dm.fromHere) {\n        item.style.border = \"2px solid white\";\n      }\n      /** 弹幕运动结束后，从DOM中移除该弹幕 */\n      item.addEventListener(\"animationend\", () => {\n        if ([...this.container.children].indexOf(item) > -1) this.container.removeChild(item);\n      });\n\n      /** 弹幕内容宽度 */\n      const itemWidth = this.measureTextWidth(\n        dm.content,\n        `${this.fontWeight} ${+dm.size * this.fontScale}px ${this.fontFamily}`\n      );\n\n      /** 轨道类型 */\n      let trackType = DanmakuMode[dm.mode] as TrackType;\n      /** 轨道位置 */\n      let track: number;\n      /** 轨道序号 */\n      let trackIndex;\n      // adjust\n      switch (trackType) {\n        case \"roll\":\n        case \"reverse\":\n          // 无限弹幕模式下轨道序号可能大于itemY，可通过取余得到实际轨道位置\n          trackIndex = getTrack(item, trackType, itemWidth);\n          track = trackIndex % itemY;\n          // console.log(track);\n          if (track >= 0) {\n            const maxTop = this.trackHeights[trackType]\n              .slice(0, itemY)\n              .reduce((prev, cur) => prev + cur, 0);\n            const top =\n              this.trackHeights[trackType].slice(0, track).reduce((prev, cur) => prev + cur, 0) %\n              maxTop;\n            // console.log(top, track);\n            if (top + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop();\n              return;\n            }\n            const speed = getSpeed(itemWidth);\n            const distance = itemWidth + containerWidth + this.startDistance * 2;\n            item.dataset.track = trackIndex.toString();\n            item.style.width = itemWidth + 1 + \"px\";\n            item.style.top = top + \"px\";\n            item.style.fontFamily = this.fontFamily;\n            item.style.fontWeight = this.fontWeight;\n            item.style.setProperty(\"--duration\", `${distance / speed}s`); // 持续时间\n            item.style.setProperty(\"--offset\", `${containerWidth + this.startDistance}px`); // 起始位置\n            item.style.setProperty(\"--translateX\", `${-distance}px`); // 位移距离\n          }\n          break;\n        case \"top\":\n          track = getTrack(item, trackType, 0) % itemY;\n          if (track >= 0) {\n            const topArr: HTMLElement[] = [];\n            const topDan = this.danmakuTracks.top;\n            for (const t of topDan) {\n              topArr.push(...t);\n            }\n            const top = topArr\n              .map((el) => {\n                return parseInt(el.style.fontSize) + this.trackPadding;\n              })\n              .slice(0, track)\n              .reduce((prev, cur) => prev + cur, 0);\n\n            if (top + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop();\n              return;\n            }\n            item.dataset.track = track.toString();\n            item.style.width = itemWidth + 1 + \"px\";\n            item.style.marginLeft = `-${(itemWidth + 1) * 0.5}px`;\n            item.style.top = top + \"px\";\n            item.style.fontFamily = this.fontFamily;\n            item.style.fontWeight = this.fontWeight;\n            item.style.setProperty(\"--duration\", `${this.baseDuration / this.speed}s`); // 持续时间\n          }\n          break;\n        case \"bottom\":\n          trackType = \"bottom\";\n          track = getTrack(item, trackType, 0) % itemY;\n          if (track >= 0) {\n            const bottomArr: HTMLElement[] = [];\n            const bottomDan = this.danmakuTracks.bottom;\n            for (const t of bottomDan) {\n              bottomArr.push(...t);\n            }\n            const bottom = bottomArr\n              .map((el) => {\n                return parseInt(el.style.fontSize) + this.trackPadding;\n              })\n              .slice(0, track)\n              .reduce((prev, cur) => prev + cur, 0);\n\n            if (bottom + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\n              this.danmakuTracks[trackType][i]?.pop();\n              return;\n            }\n            item.dataset.track = track.toString();\n            item.style.width = itemWidth + 1 + \"px\";\n            item.style.marginLeft = `-${(itemWidth + 1) * 0.5}px`;\n            item.style.bottom = bottom + \"px\";\n            item.style.fontFamily = this.fontFamily;\n            item.style.fontWeight = this.fontWeight;\n            item.style.setProperty(\"--duration\", `${this.baseDuration / this.speed}s`); // 持续时间\n          }\n          break;\n        default:\n          track = -1;\n          console.error(`无法处理的弹幕模式: ${dm.mode}`);\n      }\n      if (track >= 0) {\n        item.dataset.id = dm.id.toString();\n        item.dataset.user = dm.user.toString();\n        // 添加弹幕到容器\n        this.container.appendChild(item);\n      }\n    }\n    return docFragment;\n  }\n  /** 测量字体宽度 */\n  measureTextWidth(text: string, font: string) {\n    if (!this.measureContext) {\n      this.measureContext = document.createElement(\"canvas\").getContext(\"2d\")!;\n    }\n    this.measureContext.font = font;\n    return this.measureContext.measureText(text).width;\n  }\n  /** 根据某一坐标捕获弹幕DOM */\n  captureDanmakuDOM(x: number, y: number, range: number, single = false) {\n    const result: HTMLElement[] = [];\n    // 遍历所有在屏上的弹幕\n    const items = this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-item`);\n    for (const el of items) {\n      if (el.innerHTML) {\n        // 获取检测边界\n        const elRect = el.getBoundingClientRect();\n        const containerRect = this.container.getBoundingClientRect();\n        const edgeLeft = elRect.left - containerRect.left;\n        const edgeRight = elRect.right - containerRect.left;\n        const edgeTop = elRect.top - containerRect.top;\n        const edgeBottom = elRect.bottom - containerRect.top;\n        if (\n          x >= edgeLeft - range &&\n          x <= edgeRight + range &&\n          y >= edgeTop - range &&\n          y <= edgeBottom + range\n        ) {\n          result.push(el);\n          // 如果只要求获取一个元素，则停止遍历以优化性能\n          if (single) return result;\n        }\n      }\n    }\n    return result;\n  }\n  /** 根据某一坐标捕获弹幕 */\n  captureDanmaku(x: number, y: number, range: number, single = false) {\n    const resultDOM = this.captureDanmakuDOM(x, y, range, single);\n    const result: DanmakuItem[] = [];\n    for (const el of resultDOM) {\n      const dm = this.getDanmakuById(el.dataset.id!);\n      if (dm) {\n        result.push(dm);\n      }\n    }\n    return result;\n  }\n  /** 根据id获取弹幕 */\n  getDanmakuById(id: string | number) {\n    return this.list.find((dm) => dm.id.toString() === id.toString());\n  }\n\n  /** 显示弹幕 */\n  show() {\n    this.hidden = false;\n  }\n\n  /** 隐藏弹幕 */\n  hide() {\n    this.hidden = true;\n    this.clear();\n  }\n}\n","import Player from \"@/player\";\nimport MeonDanmakuEngine from \"./MeonDanmakuEngine\";\nimport { PlayerOptions } from \"@/types\";\nimport { BasePlugin } from \"@/plugin\";\nimport { classPrefix } from \"@/config\";\nimport { createElement } from \"@/utils\";\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    danmakuEngine?: DanmakuEngine;\n  }\n}\n\n/** css弹幕引擎\n *\n * 负责弹幕播放与绘制\n *\n * 前置插件: `danmaku`\n */\n\nexport default class DanmakuEngine extends BasePlugin {\n  static readonly pluginName = \"danmakuEngine\";\n  core: MeonDanmakuEngine;\n  $el: HTMLDivElement;\n  constructor(player: Player) {\n    super(player);\n    this.$el = this.plugin.danmaku!.$el.appendChild(\n      createElement(\"div\", { class: `${classPrefix}-rowdanmaku` })\n    );\n    this.core = new MeonDanmakuEngine(this.$el, {\n      getTime: () => this.player.currentTime,\n      classPrefix: classPrefix,\n    });\n  }\n  init() {\n    this.player.on(\"play\", () => {\n      this.core.play();\n    });\n    this.player.on(\"pause\", () => {\n      this.core.pause();\n    });\n    this.player.on(\"seeking\", () => {\n      this.core.pause();\n      this.core.seek();\n    });\n    this.player.on(\"seeked\", () => {\n      !this.player.paused && this.core.play();\n    });\n    this.player.on(\"danmaku:filter\", (type, flag) => {\n      switch (type) {\n        case \"top\":\n        case \"bottom\":\n        case \"roll\":\n        case \"reverse\":\n          this.core.setTrackFilter(type, flag);\n          return;\n        case \"color\":\n          this.core.setColorFilter(flag);\n      }\n    });\n    this.player.on(\"danmaku:add\", (dan, play) => {\n      this.core.add(dan, play);\n    });\n    this.player.on(\"danmaku:remove\", (dan) => {\n      this.core.remove(dan);\n    });\n    this.player.on(\"danmaku:draw\", (dm) => {\n      this.core.draw([dm]);\n    });\n    this.player.on(\"danmaku:blockUser\", (user, flag) => {\n      this.core.setUserFilter(user, flag);\n    });\n    this.player.on(\"danmaku:blockContent\", (content, flag) => {\n      this.core.setContentFilter(content, flag);\n    });\n    this.player.on(\"danmaku:clear\", () => {\n      this.core.clear();\n    });\n    this.player.on(\"danmaku:on\", () => {\n      this.core.show();\n    });\n    this.player.on(\"danmaku:off\", () => {\n      this.core.hide();\n    });\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    if (options.danmaku) {\n      const { scale, font, bold, speed, opacity } = options.danmaku;\n      scale && this.setScale(scale);\n      font && this.setFont(font);\n      bold != null && this.setBold(bold);\n      speed && this.setSpeed(speed);\n      opacity && this.setOpacity(opacity);\n    }\n  }\n  // 弹幕播放属性设置\n\n  /** 设置弹幕不透明度 */\n  setOpacity(value: number) {\n    this.core.opacity = value;\n    this.player.emit(\"danmaku:opacityChange\", value);\n  }\n  /** 设置弹幕速度 */\n  setSpeed(value: number) {\n    this.core.speed = value;\n    this.player.emit(\"danmaku:speedChange\", value);\n  }\n  /** 设置弹幕区域 */\n  setArea(value: number) {\n    this.core.limitArea = value;\n    this.player.emit(\"danmaku:areaChange\", value);\n  }\n  /** 设置弹幕大小 */\n  setScale(value: number) {\n    this.core.fontScale = value;\n    this.player.emit(\"danmaku:scaleChange\", value);\n  }\n  /** 设置弹幕字体 */\n  setFont(value: string) {\n    this.core.fontFamily = value;\n    this.player.emit(\"danmaku:fontChange\", value);\n  }\n  /** 设置弹幕加粗 */\n  setBold(value: boolean) {\n    this.core.fontWeight = value ? \"bold\" : \"\";\n    this.player.emit(\"danmaku:boldChange\", value);\n  }\n  /** 根据坐标捕获弹幕 */\n  capture(x: number, y: number, r: number) {\n    return this.core.captureDanmaku(x, y, r);\n  }\n}\n","let count = 1000;\nconst ar = [\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"0\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n\nexport function randomId() {\n  const hs = [];\n  const al = ar.length;\n  for (let i = 0; i < 8; i++) {\n    hs.push(ar[Math.floor(Math.random() * al)]);\n  }\n  count++;\n  return hs.join(\"\") + `${count}`;\n}\n","import { DanmakuItem, DanmakuParser, DanmakuSource } from \"./types\";\nimport { PlayerOptions, VideoInfo } from \"@/types\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { randomId } from \"@/utils/randomId\";\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    danmakuLoader?: DanmakuLoader;\n  }\n  interface PlayerOptions {\n    danmakuParser?: Record<string, DanmakuParser>;\n  }\n}\n\n/** 弹幕加载器\n *\n * 负责弹幕加载及格式转换\n *\n * 前置插件: `danmaku`\n */\nexport default class DanmakuLoader extends BasePlugin {\n  static readonly pluginName = \"danmakuLoader\";\n\n  /** 默认弹幕类型 */\n  public type: string = \"\";\n\n  public parser: Record<string, DanmakuParser> = defaultParsers;\n\n  get danmaku() {\n    return this.player.danmaku;\n  }\n\n  init() {\n    this.player.on(\"videoChange\", (info) => {\n      this.reload(info);\n    });\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    this.type = options.danmaku?.type || \"\";\n    this.parser = Object.assign(this.parser, options.danmakuParser);\n  }\n\n  /** 从响应中获取数据 */\n  protected async getResponseData<T extends DanmakuParser[\"type\"]>(\n    response: Response,\n    type: T\n  ): Promise<Parameters<DanmakuParser[\"parse\"]>[0]> {\n    if (type == \"json\") {\n      return await response.json();\n    } else if (type == \"xml\") {\n      return new DOMParser().parseFromString(await response.text(), \"text/xml\");\n    } else {\n      return await response.text();\n    }\n  }\n\n  parse(raw: any, type: string) {\n    if (!type) {\n      return raw as DanmakuItem[];\n    } else {\n      const parser = this.parser[type];\n      if (!parser) throw \"未知弹幕格式\";\n      try {\n        return parser.parse(raw);\n      } catch {\n        throw \"无法正确解析弹幕格式\";\n      }\n    }\n  }\n\n  /** 加载附加弹幕文件 */\n  loadSource({ url, type }: DanmakuSource) {\n    fetch(url)\n      .then((data) => this.getResponseData(data, this.parser[type].type))\n      .then((data) => this.parse(data, type))\n      .then((dan) => {\n        dan && this.add(dan);\n        this.player.emit(\"danmaku:loaded\", dan, { url });\n      })\n      .catch((err) => {\n        this.player.emit(\"danmaku:loadFailed\", err, { url });\n        console.error(err);\n      });\n  }\n\n  /** 加载弹幕 */\n  private load(info: VideoInfo) {\n    this.danmaku!.invoke.get?.(info)\n      .then((data) => this.parse(data as any, this.type))\n      .then((dan) => {\n        dan && this.add(dan);\n        this.player.emit(\"danmaku:loaded\", dan, info);\n      })\n      .catch((err) => {\n        this.player.emit(\"danmaku:loadFailed\", err, info);\n      });\n  }\n\n  private add(dan: DanmakuItem[]) {\n    this.danmaku!.add(dan);\n  }\n\n  /** 重载弹幕 */\n  public async reload(info: VideoInfo) {\n    // 清空弹幕池\n    this.danmaku!.clear();\n    this.player.emit(\"danmaku:loading\");\n    this.load(info);\n    info.danmaku?.forEach((source) => {\n      this.loadSource(source);\n    });\n  }\n}\n\nconst defaultParsers: Record<string, DanmakuParser> = {\n  \"bilibili-xml\": {\n    type: \"xml\",\n    parse: (xmlDoc: XMLDocument) => {\n      const dan: [string, any][] = [];\n      // 获取xml文档的所有子节点\n      const nodeList = xmlDoc.childNodes;\n      const generate = (nodeList: any) => {\n        for (let i = 0; i < nodeList.length; i++) {\n          const currentNode = nodeList[i];\n          if (currentNode?.attributes?.length && i > 0) {\n            const m = currentNode.attributes[0].nodeValue.split(\",\");\n            const c = currentNode.innerHTML;\n            dan.push([c, m]);\n          } else if (currentNode.childNodes.length > 0) {\n            generate(currentNode.childNodes);\n          }\n        }\n      };\n      generate(nodeList);\n      return dan.map(([c, m]) => ({\n        time: +m[0],\n        mode: +m[1],\n        color: +m[3],\n        user: m[6],\n        content: c,\n        size: +m[2] ?? 25,\n        date: +m[4] ?? 0,\n        id: +m[7],\n      }));\n    },\n  },\n  dplayer: {\n    type: \"json\",\n    parse: (data: [number, number, number, number | string, string, number, number][]) =>\n      data.map((item, i) => ({\n        time: item[0],\n        mode: [1, 5, 4, 6][item[1]],\n        color: item[2],\n        user: item[3],\n        content: item[4],\n        size: 25,\n        date: 0,\n        id: randomId(),\n      })),\n  },\n  mfuns: {\n    type: \"json\",\n    parse: (data: [number, number, number, string, string, number, number, number][]) =>\n      data.map((item) => ({\n        time: item[0],\n        mode: item[1],\n        color: item[2],\n        user: item[3],\n        content: item[4],\n        size: item[5],\n        date: item[6] > 1 ? item[6] : 0,\n        id: item[7],\n      })),\n  },\n};\n","import { DanmakuItem, DanmakuSendItem } from \"./types\";\nimport Player from \"@/player\";\nimport Danmaku from \"./danmaku\";\nimport { BasePlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    danmakuOperate?: DanmakuOperate;\n  }\n}\n\n/** 弹幕操作\n *\n * 负责对弹幕进行api相关操作\n *\n * 前置插件: `danmaku`\n */\n\nexport default class DanmakuOperate extends BasePlugin {\n  static readonly pluginName = \"danmakuOperate\";\n\n  get danmaku() {\n    return this.player.danmaku;\n  }\n  get invoke() {\n    return this.player.danmaku?.invoke || {};\n  }\n\n  /**\n   * 发送弹幕\n   * @param danmaku 要发送的弹幕\n   * @return 操作结果\n   * */\n  async send(danmaku: DanmakuSendItem): Promise<void> {\n    if (!this.invoke.send) throw \"发送失败\";\n    return await this.invoke\n      .send(danmaku, this.player.getVideoInfo())\n      .then((res) => {\n        this.danmaku!.add(\n          [\n            Object.assign(\n              {\n                id: `send:${Date.now()}`,\n                date: Math.floor(Date.now() / 1000),\n                user: this.player.userId || 0,\n                fromHere: true,\n              },\n              danmaku\n            ),\n          ],\n          true\n        );\n        return res;\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 举报弹幕\n   * @param danmaku 要举报的弹幕\n   * @return 操作结果\n   * */\n  async report(danmaku: DanmakuItem): Promise<void> {\n    if (!this.invoke.report) throw \"操作失败\";\n    return await this.invoke\n      .report(danmaku, this.player.getVideoInfo())\n      .then((res) => {\n        // 操作成功后从弹幕池移除该弹幕\n        this.danmaku!.remove([danmaku]);\n        return res;\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 删除弹幕\n   * @param danmaku 要删除的弹幕\n   * @return 操作结果\n   * */\n  async delete(danmaku: DanmakuItem[]): Promise<void> {\n    if (!this.invoke.delete) throw \"操作失败\";\n    return await this.invoke\n      .delete(danmaku, this.player.getVideoInfo())\n      .then((res) => {\n        // 操作成功后从弹幕池移除该弹幕\n        this.danmaku!.remove(danmaku);\n        return res;\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 删除自己发送的弹幕\n   * @param danmaku 要删除的弹幕\n   * @return 操作结果\n   * */\n  async recall(danmaku: DanmakuItem): Promise<void> {\n    if (!this.invoke.recall) throw \"操作失败\";\n    return await this.invoke\n      .recall(danmaku, this.player.getVideoInfo())\n      .then((res) => {\n        // 操作成功后从弹幕池移除该弹幕\n        this.danmaku!.remove([danmaku]);\n        return res;\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 屏蔽用户\n   * @param user 用户id\n   * @param flag 设置屏蔽状态\n   * @return 操作结果\n   * */\n  async blockUser(user: string | number, flag: boolean): Promise<void> {\n    if (!this.invoke.blockUser) throw \"操作失败\";\n    return await this.invoke\n      .blockUser(user, flag)\n      .then(() => {\n        this.player.emit(\"danmaku:blockUser\", user, flag);\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * 屏蔽关键词\n   * @param content 关键词内容\n   * @param flag 设置屏蔽状态\n   * @return 操作结果\n   * */\n  async blockContent(content: string, flag: boolean): Promise<void> {\n    if (!this.invoke.blockContent) throw \"操作失败\";\n    return await this.invoke\n      .blockContent(content, flag)\n      .then((res) => {\n        this.player.emit(\"danmaku:blockContent\", content, flag);\n      })\n      .catch((e) => {\n        throw e;\n      });\n  }\n}\n","import { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-danmakutoggle is-on\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-danmaku-off\"></i>\n      <i class=\"mpicon-danmaku\"></i>\n    </div>\n    <div class=\"mpui-tooltip\">关闭弹幕</div>\n  </div>\n`;\n\nexport default class ButtonDanmakuToggle extends ControlsPlugin {\n  static pluginName = \"buttonDanmakuToggle\";\n  name = \"danmakuToggle\";\n\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n    this.$tooltip = this.$(\".mpui-tooltip\")!;\n  }\n\n  init() {\n    this.player.on(\"danmaku:on\", () => {\n      this._change(true);\n    });\n    this.player.on(\"danmaku:off\", () => {\n      this._change(false);\n    });\n    this.$icon.addEventListener(\"click\", () => {\n      this.plugin.danmaku?.toggle();\n    });\n  }\n\n  /** 设置按钮状态 */\n  private _change(flag: boolean) {\n    this.$el.classList.toggle(\"is-on\", flag);\n    this.$tooltip.innerText = flag ? \"关闭弹幕\" : \"开启弹幕\";\n  }\n}\n","import type { DanmakuSendItem } from \"@plugin/danmaku/types\";\nimport { keyCode } from \"@/utils/KeyCode.enum\";\nimport { PlayerOptions } from \"@/types\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport Controller from \"../ui/controller\";\nimport { ControlsPlugin, IControls, UIOptionsItem } from \"@/plugin\";\nimport Danmaku from \"./danmaku\";\n\nconst template = html`\n  <div class=\"${classPrefix}-danmakubar\">\n    <div class=\"${classPrefix}-danmakubar-slot\"></div>\n    <div class=\"${classPrefix}-danmakubar-input-wrap\">\n      <div class=\"${classPrefix}-danmakubar-input-slot\"></div>\n      <input type=\"text\" autocompleted=\"new-password\" class=\"${classPrefix}-danmakubar-input\" />\n      <div class=\"${classPrefix}-danmakubar-status-loading\">弹幕功能加载中...</div>\n      <div class=\"${classPrefix}-danmakubar-status-login\">需要<a>登录</a>后才能发送弹幕哦~</div>\n      <div class=\"${classPrefix}-danmakubar-send\">发送</div>\n    </div>\n  </div>\n`;\n\ndeclare module \"@core\" {\n  interface Player {\n    danmakuBar?: DanmakuBar;\n  }\n}\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    /** 弹幕栏设置 */\n    danmakuBar?: {\n      controls: {\n        left: UIOptionsItem<IControls>[];\n        right: UIOptionsItem<IControls>[];\n      };\n      /** 占位文本 */\n      placeholder?: string;\n      /** 需要登录 */\n      loginRequired?: boolean;\n    };\n    danmakuStyle?: {\n      /** 选色列表 */\n      colorList?: string[];\n      /** 字号列表 */\n      sizeList?: [number, string?][];\n      /** 弹幕模式列表 */\n      modeList?: number[];\n      /** 默认弹幕字号 */\n      defaultSize?: number;\n      /** 默认弹幕模式 */\n      defaultMode?: number;\n      /** 默认弹幕模式 */\n      defaultColor?: number;\n    };\n  }\n  interface PlayerPlugins {\n    danmakuBar?: DanmakuBar;\n  }\n}\n\n/** 弹幕栏\n *\n * 前置插件: `danmaku`\n */\nexport default class DanmakuBar extends ControlsPlugin {\n  static pluginName = \"danmakuBar\";\n  name = \"danmakuBar\";\n\n  $send: HTMLElement;\n  $input: HTMLInputElement;\n  $slot: HTMLElement;\n  $inputSlot: HTMLElement;\n\n  $logina: HTMLElement;\n\n  controller: Controller;\n  danmaku: Danmaku;\n\n  danmakuColor = 0xffffff;\n  danmakuMode = 1;\n  danmakuSize = 25;\n\n  /** 是否需要登录 */\n  get loginRequired() {\n    return this.$el.classList.contains(\"is-login\");\n  }\n\n  /** 冷却计时器 */\n  coolDownTimer = 0;\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-danmakubar`)!);\n\n    this.controller = this.plugin.controller!;\n    this.danmaku = this.plugin.danmaku!;\n\n    this.$send = this.$el.querySelector(`.${classPrefix}-danmakubar-send`)!;\n    this.$input = this.$el.querySelector(`.${classPrefix}-danmakubar-input`)!;\n    this.$slot = this.$el.querySelector(`.${classPrefix}-danmakubar-slot`)!;\n    this.$inputSlot = this.$el.querySelector(`.${classPrefix}-danmakubar-input-slot`)!;\n    this.$logina = this.$el.querySelector(`.${classPrefix}-danmakubar-status-login a`)!;\n\n    this.$logina.onclick = () => this.player.login?.();\n\n    this.player.on(\"videoChange\", () => {\n      this.setLoading(true);\n    });\n    this.player.on(\"loadeddata\", () => {\n      this.setLoading(false);\n    });\n\n    this.$input.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode == keyCode.Enter) {\n        this.send();\n      }\n    });\n    this.$send.onclick = () => {\n      this.send();\n    };\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    if (options.danmakuBar?.loginRequired) {\n      this.setLoginRequired(true);\n    }\n    this.setPlaceHolder(options.danmakuBar?.placeholder || defaultPlaceholder);\n  }\n  setPlaceHolder(placeholder: string) {\n    this.$input.placeholder = placeholder;\n  }\n  /** 执行弹幕发送操作 */\n  private send() {\n    // 如果内容为空或只有空格，则不进行发送操作\n    if (!this.$input.value.trim() || this.coolDownTimer) return;\n    this.plugin.danmakuOperate?.send(this.generateDanmaku());\n    this.$input.value = \"\";\n  }\n  /** 设置弹幕发送冷却 */\n  public setCoolDown(time: number) {\n    if (this.coolDownTimer) {\n      window.clearInterval(this.coolDownTimer);\n    }\n    let t = Math.round(time);\n    this.$send.classList.add(\"is-disabled\");\n    this.$send.innerText = `${t}秒`;\n    this.coolDownTimer = window.setInterval(() => {\n      t -= 1;\n      if (t) {\n        this.$send.innerText = `${t}秒`;\n      } else {\n        this.$send.innerText = \"发送\";\n        this.$send.classList.remove(\"is-disabled\");\n        window.clearInterval(this.coolDownTimer);\n        this.coolDownTimer = 0;\n      }\n    }, 1000);\n  }\n  generateDanmaku(): DanmakuSendItem {\n    return {\n      time: this.player.currentTime,\n      content: this.$input.value,\n      mode: this.danmakuMode,\n      color: this.danmakuColor,\n      size: this.danmakuSize,\n    };\n  }\n  /** 设置登录限制 */\n  private setLoginRequired(flag: boolean) {\n    if (flag) {\n      this.$el.classList.add(\"is-login\");\n    } else {\n      this.$el.classList.remove(\"is-login\");\n    }\n  }\n  /** 设置加载状态 */\n  private setLoading(flag: boolean) {\n    if (flag) {\n      this.$el.classList.add(\"is-loading\");\n    } else {\n      this.$el.classList.remove(\"is-loading\");\n    }\n  }\n}\n\nconst defaultPlaceholder = \"发条弹幕吧~\";\n","import { MultiPicker, Slider } from \"@/components\";\nimport { html, render } from \"lit-html\";\nimport Player from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst template = html`\n  <div class=\"${classPrefix}-controls-button ${classPrefix}-button-danmakusettings\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <i class=\"mpicon-danmaku-settings\"></i>\n    </div>\n    <div class=\"${classPrefix}-controls-panel-wrap\">\n      <div class=\"${classPrefix}-controls-panel ${classPrefix}-controls-panel-danmaku-settings\">\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">类型屏蔽</div>\n          <div class=\"${classPrefix}-danmaku-settings-filter-picker\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">不透明度</div>\n          <div\n            class=\"${classPrefix}-danmaku-settings-opacity-slider ${classPrefix}-slider-wrap\"\n          ></div>\n          <div class=\"${classPrefix}-danmaku-settings-opacity-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">显示区域</div>\n          <div class=\"${classPrefix}-danmaku-settings-area-slider ${classPrefix}-slider-wrap\"></div>\n          <div class=\"${classPrefix}-danmaku-settings-area-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">文字大小</div>\n          <div class=\"${classPrefix}-danmaku-settings-size-slider ${classPrefix}-slider-wrap\"></div>\n          <div class=\"${classPrefix}-danmaku-settings-size-value ${classPrefix}-row-value\"></div>\n        </div>\n        <div class=\"${classPrefix}-panel-row\">\n          <div class=\"${classPrefix}-row-label\">弹幕速度</div>\n          <div\n            class=\"${classPrefix}-danmaku-settings-speed-slider  ${classPrefix}-slider-wrap\"\n          ></div>\n          <div class=\"${classPrefix}-danmaku-settings-speed-value ${classPrefix}-row-value\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n`;\n\nexport default class ButtonDanmakuSettings extends ControlsPlugin {\n  static pluginName = \"buttonDanmakuSettings\";\n  name = \"danmakuSettings\";\n\n  $icon: HTMLElement;\n\n  $filterPicker: HTMLElement;\n  $opacitySlider: HTMLElement;\n  $areaSlider: HTMLElement;\n  $sizeSlider: HTMLElement;\n  $speedSlider: HTMLElement;\n\n  $opacityValue: HTMLElement;\n  $areaValue: HTMLElement;\n  $sizeValue: HTMLElement;\n  $speedValue: HTMLElement;\n\n  pickerFilter!: MultiPicker;\n  sliderOpacity!: Slider;\n  sliderArea!: Slider;\n  sliderSize!: Slider;\n  sliderSpeed!: Slider;\n\n  get danmaku() {\n    return this.plugin.danmaku!;\n  }\n  get danmakuEngine() {\n    return this.plugin.danmakuEngine!;\n  }\n\n  constructor(player: Player) {\n    const fragment = new DocumentFragment();\n    render(template, fragment);\n    super(player, fragment.querySelector(`.${classPrefix}-controls-button`)!);\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`)!;\n\n    this.$filterPicker = this.$(`.${classPrefix}-danmaku-settings-filter-picker`)!;\n    this.$opacitySlider = this.$(`.${classPrefix}-danmaku-settings-opacity-slider`)!;\n    this.$areaSlider = this.$(`.${classPrefix}-danmaku-settings-area-slider`)!;\n    this.$sizeSlider = this.$(`.${classPrefix}-danmaku-settings-size-slider`)!;\n    this.$speedSlider = this.$(`.${classPrefix}-danmaku-settings-speed-slider`)!;\n\n    this.$opacityValue = this.$(`.${classPrefix}-danmaku-settings-opacity-value`)!;\n    this.$areaValue = this.$(`.${classPrefix}-danmaku-settings-area-value`)!;\n    this.$sizeValue = this.$(`.${classPrefix}-danmaku-settings-size-value`)!;\n    this.$speedValue = this.$(`.${classPrefix}-danmaku-settings-speed-value`)!;\n  }\n\n  init() {\n    // 弹幕类型屏蔽\n    this.pickerFilter = new MultiPicker({\n      container: this.$filterPicker,\n      value: [],\n      list: [\n        { value: \"roll\", label: \"滚动\" },\n        { value: \"top\", label: \"顶部\" },\n        { value: \"bottom\", label: \"底部\" },\n        { value: \"color\", label: \"彩色\" },\n        { value: \"special\", label: \"特殊\" },\n      ],\n      onToggle: (value, flag) => {\n        this.danmaku.filterType(value, flag);\n      },\n    });\n    // 不透明度\n    this.sliderOpacity = new Slider({\n      container: this.$opacitySlider,\n      min: 10,\n      max: 100,\n      step: 1,\n      value: 100,\n      onDrag: (value) => {\n        this.danmakuEngine.setOpacity(value / 100);\n      },\n      onChange: (value) => {\n        this.$opacityValue.innerText = `${value}%`;\n      },\n    });\n    // 显示区域\n    this.sliderArea = new Slider({\n      container: this.$areaSlider,\n      min: 20,\n      max: 105,\n      step: 5,\n      value: 25,\n      onDrag: (value) => {\n        const area = value / 100;\n        this.danmakuEngine.setArea(area > 100 ? 0 : area);\n      },\n      onChange: (value) => {\n        this.$areaValue.innerText = value < 100 ? `${value}%` : value == 100 ? \"不重叠\" : \"无限\";\n      },\n    });\n    this.sliderArea.drag(25);\n    // 文字大小\n    this.sliderSize = new Slider({\n      container: this.$sizeSlider,\n      min: 50,\n      max: 200,\n      step: 1,\n      value: 100,\n      onDrag: (value) => {\n        this.danmakuEngine.setScale(value / 100);\n      },\n      onChange: (value) => {\n        this.$sizeValue.innerText = `${value}%`;\n      },\n    });\n    // 弹幕速度\n    this.sliderSpeed = new Slider({\n      container: this.$speedSlider,\n      min: 20,\n      max: 180,\n      step: 10,\n      value: 100,\n      divider: 5,\n      onDrag: (value) => {\n        this.danmakuEngine.setSpeed(value / 100);\n      },\n      onChange: (value) => {\n        this.$speedValue.innerText = `${value}%`;\n      },\n    });\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\nimport { html, render } from \"lit-html\";\nimport { DanmakuItem } from \"./types\";\n\nconst templateDanmaku = (\n  danmaku: DanmakuItem[],\n  operation: (dm: DanmakuItem) => [string, (dm: DanmakuItem) => void, unknown][],\n  onClick: (dm: DanmakuItem) => void,\n  hide: () => void\n) => html`\n  ${danmaku.map(\n    (dm) => html`\n      <li\n        class=\"${classPrefix}-contextmenu-danmaku-item\"\n        @click=${() => {\n          onClick(dm);\n        }}\n      >\n        <div class=\"${classPrefix}-contextmenu-danmaku-item-content\">${dm.content}</div>\n        <div class=\"${classPrefix}-contextmenu-danmaku-item-operate\">\n          ${operation(dm).map(\n            ([label, onClick]) => html`<div\n              class=\"${classPrefix}-contextmenu-danmaku-item-operate-btn\"\n              @click=${(e: MouseEvent) => {\n                e.stopPropagation();\n                onClick(dm);\n                hide();\n              }}\n            >\n              ${label}\n            </div>`\n          )}\n        </div>\n      </li>\n    `\n  )}\n`;\n\nconst copyClip = (content: string) => navigator.clipboard.writeText(content);\n\n/** 弹幕菜单\n *\n * 前置插件: `danmaku` `contextMenu`\n */\nexport default class DanmakuMenu extends BasePlugin {\n  static pluginName = \"danmakuMenu\";\n  $el: HTMLElement;\n  constructor(player: Player) {\n    super(player);\n    this.$el = createElement(\"ul\", { class: `${classPrefix}-contextmenu-danmaku mpui-black` });\n  }\n  init() {\n    this.player.on(\"contextMenuShow\", (x, y) => {\n      const captured = this.plugin.danmakuEngine?.capture(x, y, 4);\n      this.update(captured || []);\n    });\n  }\n  ready() {\n    this.plugin.contextMenu?.$list.before(this.$el);\n  }\n  update(danmaku: DanmakuItem[]) {\n    const api = this.plugin.danmaku?.invoke;\n    const operate = this.plugin.danmakuOperate;\n    if (danmaku?.length) {\n      this.$el.style.display = \"\";\n    } else {\n      this.$el.style.display = \"none\";\n    }\n    render(\n      templateDanmaku(\n        danmaku,\n        (dm) => {\n          const myDanmaku = this.player.userId && dm.user == this.player.userId;\n          return [\n            [\n              \"举报\",\n              (dm: DanmakuItem) => {\n                operate?.report(dm);\n              },\n              !myDanmaku && api?.report,\n            ],\n            [\n              \"屏蔽\",\n              (dm: DanmakuItem) => {\n                operate?.blockUser(dm.user, true);\n              },\n              !myDanmaku && api?.blockUser,\n            ],\n            [\n              \"撤回\",\n              (dm: DanmakuItem) => {\n                operate?.recall(dm);\n              },\n              myDanmaku && api?.recall,\n            ],\n            [\n              \"复制\",\n              (dm: DanmakuItem) => {\n                copyClip(dm.content);\n              },\n              true,\n            ],\n          ].filter((v) => v[2]) as [string, (dm: DanmakuItem) => void, unknown][];\n        },\n        (dm) => {\n          this.player.emit(\"danmaku:select\", dm);\n        },\n        () => {\n          this.plugin.contextMenu?.hide();\n        }\n      ),\n      this.$el\n    );\n  }\n}\n","import { PlayerOptions } from \"@/types\";\nimport Danmaku from \"../danmaku/danmaku\";\nimport DanmakuEngine from \"../danmaku/danmakuEngine\";\nimport DanmakuLoader from \"../danmaku/danmakuLoader\";\nimport DanmakuOperate from \"../danmaku/danmakuOperate\";\nimport ButtonDanmakuToggle from \"../danmaku/controls/ButtonDanmakuToggle\";\nimport DanmakuBar from \"../danmaku/danmakuBar\";\nimport ButtonDanmakuSettings from \"../danmaku/controls/ButtonDanmakuSettings\";\nimport DanmakuMenu from \"../danmaku/danmakuMenu\";\n\nconst danmakuPlugins = [\n  Danmaku,\n  DanmakuEngine,\n  DanmakuLoader,\n  DanmakuOperate,\n  DanmakuBar,\n  DanmakuMenu,\n];\nconst danmakuControls = [ButtonDanmakuToggle, ButtonDanmakuSettings];\n\nexport const presetDanmaku = [...danmakuPlugins, ...danmakuControls];\n","import { BasePlugin } from \"@/plugin\";\nimport { QualityItem } from \"@plugin/quality\";\n\ndeclare module \"@core\" {\n  interface VideoInfo {\n    qualities?: QualityItem[];\n  }\n}\n/** 将视频质量列表作为视频参数传入 */\nexport default class Qualities extends BasePlugin {\n  /** 比较函数，若设置则根据该函数对清晰度列表排序 */\n  compare?: (a: QualityItem, b: QualityItem) => number;\n  /** 优先选择函数，默认情况下选择列表第一个值 */\n  prior?: (list: QualityItem[]) => QualityItem;\n  init() {\n    this.player.on(\"videoChange\", (info) => {\n      if (info.qualities) {\n        this.compare && info.qualities.sort((a, b) => this.compare!(a, b));\n        this.player.quality?.updateList(info.qualities);\n      }\n    });\n    this.player.hook.register(\"video.beforeLoad\", (info) => {\n      const list = this.player.getVideoInfo().qualities;\n      let quality: QualityItem = {};\n      if (!info.url && list) {\n        quality = this.prior ? this.prior(list) : list[0];\n        info.url = quality.url;\n        info.type = quality.type;\n      }\n      this.player.quality?.updateCurrent(quality);\n    });\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { LoadInfo, MediaController, PlayerOptions } from \"@/types\";\nimport type Hls from \"hls.js\";\n\ndeclare module \"@core\" {\n  interface PlayerExternals {\n    hlsjs: () => Promise<typeof Hls>;\n  }\n}\ndeclare global {\n  interface Window {\n    Hls?: typeof Hls;\n  }\n}\n\nexport interface HlsMediaController extends MediaController {\n  kernel: Hls | null;\n}\n\nexport default class HlsLoader extends BasePlugin {\n  static pluginName = \"hlsLoader\";\n  private Hls?: typeof Hls;\n  private _getHlsjs?: () => Promise<typeof Hls>;\n  private _supported?: boolean;\n  constructor(player: Player) {\n    super(player);\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this._getHlsjs = options.externals?.hlsjs;\n    this.player.loader.register(\"hls\", this);\n  }\n  check(info: LoadInfo) {\n    return info.type == \"hls\" || info.type == \"m3u8\";\n  }\n  create(info: LoadInfo, video: HTMLVideoElement): HlsMediaController {\n    const { type, url, live, play, time } = info;\n    const controller: HlsMediaController = {\n      kernel: null,\n      type: type || \"\",\n      url: url,\n      live: live || false,\n      mediaElement: video,\n      destroy() {\n        this.kernel?.destroy();\n        this.kernel = null;\n      },\n    };\n    this.initHls().then(() => {\n      const hlsPlayer = new this.Hls!();\n      controller.kernel = hlsPlayer;\n      const t = time === true ? this.player.currentTime : time;\n      hlsPlayer.attachMedia(video);\n      hlsPlayer.on(this.Hls!.Events.MEDIA_ATTACHED, () => {\n        hlsPlayer.loadSource(url);\n      });\n      this.player.once(\"loadedmetadata\", () => {\n        if (t) {\n          this.player.seek(t);\n        }\n        if (play) {\n          this.player.play();\n        }\n      });\n      return true;\n    });\n    return controller;\n  }\n\n  /** 初始化hls.js */\n  async initHls() {\n    if (this._supported == true) {\n      return;\n    } else if (this._supported == false) {\n      throw new Error(\"播放器不支持hls加载\");\n    } else {\n      this.Hls ??= window.Hls;\n      if (!this.Hls) {\n        if (!this._getHlsjs) {\n          this.throw(new Error(\"hls.js初始化失败: 播放器未引入hls.js\"));\n        } else {\n          this.Hls =\n            (await this._getHlsjs().catch((e) => {\n              this.throw(new Error(`hls.js初始化失败: ${e}`));\n            })) || void 0;\n          this._supported = this.Hls?.isSupported() || false;\n          if (this._supported == false) throw new Error(\"播放器不支持hls加载\");\n        }\n      }\n    }\n  }\n}\n","/* eslint-disable new-cap */\nimport Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { LoadInfo, MediaController, MediaLoader, PlayerOptions } from \"@/types\";\nimport type dashjs from \"dashjs\";\n\ndeclare module \"@core\" {\n  interface PlayerExternals {\n    dashjs: () => Promise<typeof dashjs>;\n  }\n}\ndeclare global {\n  interface Window {\n    dashjs?: typeof dashjs;\n  }\n}\n\nexport interface DashMediaController extends MediaController {\n  kernel: dashjs.MediaPlayerClass | null;\n}\n\nexport default class DashLoader extends BasePlugin implements MediaLoader {\n  static pluginName = \"dashLoader\";\n  private dashjs?: typeof dashjs;\n  private _getDashjs?: () => Promise<typeof dashjs>;\n  private _supported?: boolean;\n  constructor(player: Player) {\n    super(player);\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this._getDashjs = options.externals?.dashjs;\n    this.player.loader.register(\"dash\", this);\n  }\n  check(info: LoadInfo) {\n    return info.type == \"dash\" || info.type == \"m3u8\";\n  }\n  create(info: LoadInfo, video: HTMLVideoElement): DashMediaController {\n    const { type, url, live, play, time } = info;\n    const controller: DashMediaController = {\n      kernel: null,\n      type: type || \"\",\n      url: url,\n      live: live || false,\n      mediaElement: video,\n      destroy() {\n        this.kernel?.destroy();\n        this.kernel = null;\n      },\n    };\n    this.initDash().then(() => {\n      const dashPlayer = this.dashjs!.MediaPlayer().create();\n      controller.kernel = dashPlayer;\n      const t = time === true ? this.player.currentTime : time === false ? 0 : time;\n      dashPlayer.initialize(video, url, play, t);\n    });\n    return controller;\n  }\n\n  /** 初始化dash.js */\n  async initDash() {\n    if (this._supported == true) {\n      return;\n    } else if (this._supported == false) {\n      throw new Error(\"播放器不支持dash加载\");\n    } else {\n      this.dashjs ??= window.dashjs;\n      if (!this.dashjs) {\n        if (!this._getDashjs) {\n          throw new Error(\"dash.js初始化失败: 播放器未引入dash.js\");\n        } else {\n          this.dashjs =\n            (await this._getDashjs().catch((e) => {\n              throw new Error(`dash.js初始化失败: ${e}`);\n            })) || undefined;\n          this._supported = this.dashjs?.supportsMediaSource() || false;\n          if (this._supported == false) throw new Error(\"播放器不支持dash加载\");\n        }\n      }\n    }\n  }\n}\n","import Player from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\nimport { LoadInfo, MediaController, MediaLoader, PlayerOptions } from \"@/types\";\nimport type FlvJs from \"flv.js\";\n\ndeclare module \"@core\" {\n  interface PlayerExternals {\n    flvjs: () => Promise<typeof FlvJs>;\n  }\n}\ndeclare global {\n  interface Window {\n    flvjs?: typeof FlvJs;\n  }\n}\n\nexport interface FlvMediaController extends MediaController {\n  kernel: FlvJs.Player | null;\n}\n\nexport default class FlvLoader extends BasePlugin implements MediaLoader {\n  static pluginName = \"flvLoader\";\n  private flvjs?: typeof FlvJs;\n  private _getFlvjs?: () => Promise<typeof FlvJs>;\n  private _supported?: boolean;\n  constructor(player: Player) {\n    super(player);\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this._getFlvjs = options.externals?.flvjs;\n    this.player.loader.register(\"flv\", this);\n  }\n  check(info: LoadInfo) {\n    return info.type == \"flv\";\n  }\n  create(info: LoadInfo, video: HTMLVideoElement): FlvMediaController {\n    const { type, url, live, play, time } = info;\n    const controller: FlvMediaController = {\n      kernel: null,\n      type: type || \"\",\n      url: url,\n      live: live || false,\n      mediaElement: video,\n      destroy() {\n        this.kernel?.destroy();\n        this.kernel = null;\n      },\n    };\n    this.initFlv().then(() => {\n      const flvPlayer = this.flvjs!.createPlayer({\n        type: type || \"flv\",\n        url: url,\n        cors: true,\n        isLive: live,\n      });\n      controller.kernel = flvPlayer;\n      const t = time === true ? this.player.currentTime : time === false ? 0 : time;\n      flvPlayer.attachMediaElement(video);\n      flvPlayer.load();\n      t && (flvPlayer.currentTime = t);\n      play && flvPlayer.play();\n    });\n    return controller;\n  }\n  /** 初始化flvjs */\n  async initFlv() {\n    if (this._supported == true) {\n      return;\n    } else if (this._supported == false) {\n      throw new Error(\"播放器不支持flv加载\");\n    } else {\n      this.flvjs ??= window.flvjs;\n      if (!this.flvjs) {\n        if (!this._getFlvjs) {\n          throw new Error(\"flv.js初始化失败: 播放器未引入flv.js\");\n        } else {\n          this.flvjs =\n            (await this._getFlvjs().catch((e) => {\n              throw new Error(`flv.js初始化失败: ${e}`);\n            })) || void 0;\n          this._supported = this.flvjs?.isSupported() || false;\n          if (this._supported == false) throw new Error(\"播放器不支持flv加载\");\n        }\n      }\n    }\n  }\n}\n","import { Checkbox } from \"@/components\";\nimport Player from \"@/player\";\nimport { PlayerOptions } from \"@/types\";\nimport { BasePlugin } from \"@/plugin\";\nimport { ResizeObserver as ResizeObserverPonyfill } from \"@juggle/resize-observer\";\n\ndeclare module \"@core\" {\n  interface Player {\n    aspectRatio?: string;\n    setAspectRatio?: (value: string) => void;\n  }\n  interface PlayerEventMap {\n    /** 视频比例 */\n    aspectRatioChange: (value: string) => void;\n  }\n  interface PlayerOptions {\n    /** 视频比例 */\n    aspectRatio?: string;\n  }\n}\n\n/** 视频比例 */\n\nexport default class AspectRatio extends BasePlugin {\n  static pluginName = \"aspectRatio\";\n  #ratio: [number, number] | null = null;\n  private readonly observer?: ResizeObserver;\n  constructor(player: Player) {\n    super(player);\n\n    // --- 初始化observer --- //\n    const Observer = window.ResizeObserver || ResizeObserverPonyfill;\n    if (Observer) {\n      this.observer = new Observer(([item]) => {\n        const { width, height } = item.contentRect;\n        this._keepRatio(width, height);\n      });\n    }\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this.#ratio = this._parse(options.aspectRatio || \"\");\n  }\n  init() {\n    this.player.define(\"aspectRatio\", { get: () => this._stringify(this.#ratio) });\n    this.player.define(\"setAspectRatio\", (value: string) => {\n      this.set(value);\n    });\n  }\n  mounted(): void {\n    console.log(\"233333311111111\");\n    this.observer?.observe(this.player.$area);\n    this._setRatio(this.#ratio);\n  }\n  set(value: string) {\n    const ratio = this._parse(value);\n    this.#ratio = ratio;\n    this._setRatio(ratio);\n    this.player.emit(\"aspectRatioChange\", this._stringify(ratio));\n  }\n  /** 设置视频比例 */\n  private _setRatio(ratio: [number, number] | null) {\n    const video = this.player.$video;\n    video.style.width = \"\";\n    video.style.height = \"\";\n    if (ratio) {\n      const [ratioW, ratioH] = ratio;\n      video.style.aspectRatio = `${ratioW}/${ratioH}`;\n      video.style.objectFit = \"fill\";\n      const { width, height } = video.getBoundingClientRect();\n      const { width: cWidth, height: cHeight } = this.player.$area.getBoundingClientRect();\n      if (width == cWidth && height == cHeight) {\n        this._rescale(width, height, ratioW, ratioH);\n      }\n    } else {\n      video.style.aspectRatio = \"\";\n      video.style.objectFit = \"\";\n    }\n  }\n  /** 保持视频比例 */\n  private _keepRatio(cWidth: number, cHeight: number) {\n    if (this.#ratio) {\n      const video = this.player.$video;\n      video.style.width = \"\";\n      video.style.height = \"\";\n      const [ratioW, ratioH] = this.#ratio;\n      const { width, height } = video.getBoundingClientRect();\n      console.log(`${width} x ${height} -- ${cWidth} x ${cHeight}`);\n      if (Math.abs(width - cWidth) < 1 && Math.abs(height - cHeight) < 1) {\n        // 该情况表示播放器大小可能已被固定，需要重新计算宽高\n        this._rescale(cWidth, cHeight, ratioW, ratioH);\n      }\n    }\n  }\n  /** 根据当前视频宽高重新维持视频比例 */\n  private _rescale(width: number, height: number, ratioW: number, ratioH: number) {\n    const rwxh = ratioW * height;\n    const rhxw = ratioH * width;\n    const video = this.player.$video;\n    if (rwxh < rhxw) {\n      video.style.width = `${(rwxh / rhxw) * 100}%`;\n      video.style.height = \"100%\";\n    } else {\n      video.style.width = \"100%\";\n      video.style.height = `${(rhxw / rwxh) * 100}%`;\n    }\n  }\n  private _parse(value: string): [number, number] | null {\n    const [x, y] = value.split(\"/\").map((n) => parseFloat(n));\n    return x && y && isFinite(x) && isFinite(y) ? [x, y] : null;\n  }\n  private _stringify(ratio: [number, number] | null) {\n    return ratio ? ratio.join(\"/\") : \"\";\n  }\n}\n","import Player from \"./core-player\";\nimport { PlayerOptions } from \"@/types\";\nimport DanmakuList from \"../mfuns-plugin/danmakuList\";\nimport BlackBorder from \"@plugin/enhance/video/blackBorder\";\nimport Widescreen from \"@plugin/screen/widescreen\";\nimport { ButtonWebscreen, ButtonWidescreen } from \"@plugin/controls\";\nimport About from \"@plugin/panels/about\";\nimport Hotkeys from \"@plugin/panels/hotkeyInfo\";\nimport { presetBasic } from \"@plugin/presets/basic\";\nimport AutoPart from \"@plugin/enhance/playback/autoPart\";\nimport AutoPlay from \"@plugin/enhance/playback/autoPlay\";\nimport AutoSeek from \"@plugin/enhance/playback/autoSeek\";\nimport Theme from \"@plugin/theme\";\nimport Part from \"@plugin/videoOptions/part\";\nimport Seamless from \"@plugin/patch/seamless\";\nimport PartList from \"@plugin/panels/partList\";\nimport ButtonDanmakulist from \"@plugin/controls/button/ButtonDanmakulist\";\nimport Quality from \"@plugin/quality\";\nimport ButtonQuality from \"@plugin/controls/button/ButtonQuality\";\nimport VideoStatus from \"@plugin/enhance/ui/videoStatus\";\nimport LoadingMask from \"@plugin/enhance/ui/loadingMask\";\nimport VideoTitle from \"@plugin/controls/videoTitle\";\nimport Header from \"@plugin/ui/header\";\nimport Mini from \"@plugin/enhance/ui/mini\";\nimport LightOff from \"@plugin/enhance/ui/lightOff\";\nimport Webscreen from \"@plugin/screen/webscreen\";\nimport { presetDanmaku } from \"@plugin/presets/danmaku\";\nimport VideoQuality from \"@plugin/videoOptions/qualities\";\nimport HlsLoader from \"@plugin/videoLoader/hlsLoader\";\nimport DashLoader from \"@plugin/videoLoader/dashLoader\";\nimport FlvLoader from \"@plugin/videoLoader/flvLoader\";\nimport AspectRatio from \"@plugin/enhance/video/aspectRatio\";\n\n/** 内置插件 */\nconst plugins = [\n  Quality,\n  VideoQuality,\n  Header,\n  Part,\n  Seamless,\n  DanmakuList,\n  BlackBorder,\n  AspectRatio,\n  Webscreen,\n  Widescreen,\n  AutoPlay,\n  AutoPart,\n  AutoSeek,\n  Theme,\n  VideoStatus,\n  LoadingMask,\n  Mini,\n  LightOff,\n];\n\nconst panels = [About, Hotkeys, PartList];\n\nconst controls = [ButtonWebscreen, ButtonWidescreen, ButtonDanmakulist, ButtonQuality, VideoTitle];\n\nconst loaders = [FlvLoader, HlsLoader, DashLoader];\n\n/** MfunsPlayer 播放页版播放器\n *\n * 插件功能：快捷键、右键菜单、弹幕栏、弹幕列表、视频黑边、宽屏模式、关灯模式\n */\nexport default class MfunsPlayer extends Player {\n  constructor(options: PlayerOptions) {\n    super({\n      autoPart: true,\n      controller: {\n        controls: {\n          top: [\"progress\"],\n          left: [\"prev\", \"play\", \"next\", \"time\"],\n          right: [\n            \"quality\",\n            \"part\",\n            \"volume\",\n            \"settings\",\n            \"pip\",\n            \"widescreen\",\n            \"webscreen\",\n            \"fullscreen\",\n          ],\n        },\n      },\n      ...options,\n      plugins: [\n        ...presetBasic,\n        ...presetDanmaku,\n        ...plugins,\n        ...panels,\n        ...controls,\n        ...loaders,\n        ...(options.plugins || []),\n      ],\n    });\n  }\n}\n"],"names":["createArray","count","val","getFullscreenElement","fullScreenEnabled","pictureInPictureEnabled","timeToSecond","str","arr","sec","min","hour","debounce","fn","delay","immediate","timer","isInvoke","args","createElement","tagName","attributes","children","el","name","clamp","number","lower","upper","secondToTime","second","showHour","add0","num","number2Color","dateFormatMap","d","dateFormat","date","format","match","_a","classPrefix","repositoryLink","developers","videoEventMap","v","VideoController","player","options","res","info","play","time","_b","url","type","live","loadInfo","video","eventName","values","_c","PluginManager","pluginItem","_d","plugin","HookManager","func","before","hook","index","ctx","defaultFunc","f","ControlsManager","controls","item","PanelManager","panel","MenuManager","LoaderManager","loader","controller","t","EventEmitter","listener","i","_Player","volume","flag","value","err","Player","s","e","o","n","l","h","r","u","c","a","_","m","p","g","$","y","w","x","T","A","E","C","P","V","N","H","L","z","k","S","M","R","Z","I","B","D","VirtualList","getData","itemHeight","createItem","overflow","clientH","scrollTop","oldRenderStart","oldRenderEnd","beforeItems","addFrom","addTo","removeFrom","removeTo","child","afterItems","top","BasePlugin","UIPlugin","selectors","ControlsPlugin","PanelPlugin","opt","template","clearSelect","html","getDanmakuListItem","danmaku","operation","onClick","onDblclick","selected","focused","title","label","fragment","render","DanmakuList","dm","pos","api","operate","myDanmaku","unFreeze","dan","sortedBy","sortOrder","b","at","bt","status","viewEnd","selectedIndex","focusedIndex","focusedItem","shift","ctrl","from","to","divider","Slider","container","max","step","onChange","onDragStart","onDragEnd","onDrag","event","clientX","trackLength","nMax","thumbTrackX","nLeft","nLength","mousemoveEvent","removeEvent","per","SliderVertical","clientY","thumbTrackY","nTop","templateWrap","list","Picker","onPick","condition","MultiPicker","onToggle","Checkbox","BlackBorder","Widescreen","ButtonPlay","ButtonPrev","hasNext","hasPrev","ButtonNext","VideoTime","inputVal","ButtonLoop","ButtonPart","ButtonVolume","muted","ButtonSettings","settings","ButtonPip","ButtonWidescreen","ButtonWebscreen","ButtonFullscreen","link","about","key","description","HotkeyInfo","hotkeyInfoList","ContextMenu","content","clientRect","Controller","left","center","right","keyCode","Hotkey","tag","editable","_initPanels","Modal","__privateAdd","__privateSet","__privateGet","Progress","dragMoveEvent","dragEndEvent","buffered","Settings","rate","ratio","Side","Pip","Fullscreen","fullScreenChangeHandler","doc","_userId","_authorId","User","author","userId","_status","_mousemove","StateActive","debounceRemoveActive","StateFocus","resizeObservers","hasActiveObservations","ro","hasSkippedObservations","msg","deliverResizeLoopError","ResizeObserverBoxOptions","freeze","obj","ResizeObserverSize","inlineSize","blockSize","DOMRectReadOnly","width","height","bottom","rectangle","isSVG","target","isHidden","offsetWidth","offsetHeight","isElement","scope","isReplacedElement","global","cache","scrollRegexp","verticalRegexp","IE","parseDimension","pixel","size","switchSizes","zeroBoxes","calculateBoxSizes","forceRecalculation","cs","svg","removePadding","canScrollVertically","canScrollHorizontally","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderRight","borderBottom","borderLeft","horizontalPadding","verticalPadding","horizontalBorderArea","verticalBorderArea","horizontalScrollbarThickness","verticalScrollbarThickness","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","calculateBoxSize","observedBox","borderBoxSize","contentBoxSize","devicePixelContentBoxSize","ResizeObserverEntry","calculateDepthForNode","node","depth","parent","broadcastActiveObservations","shallowestDepth","callbacks","entries","ot","entry","targetDepth","_i","callbacks_1","callback","gatherActiveObservationsAtDepth","process","trigger","notify","cb","queueMicroTask","toggle_1","el_1","config","queueResizeObserver","watching","isWatching","CATCH_PERIOD","observerConfig","events","timeout","scheduled","Scheduler","_this","until","elementsHaveResized","scheduler","updateCount","skipNotifyOnElement","ResizeObservation","ResizeObserverDetail","resizeObserver","observerMap","getObservationIndex","observationTargets","ResizeObserverController","detail","firstObservation","lastObservation","ResizeObserver","StateResize","Observer","ResizeObserverPonyfill","StateIntersecting","isIntersecting","corePlugins","basicPlugins","basicControls","LabelTime","presetBasic","AutoPart","part","AutoPlay","AutoSeek","themeOptionsVars","Theme","theme","scheme","Part","Seamless","oldVideo","templateList","setPart","PartList","ButtonDanmakulist","Quality","quality","result","ButtonQuality","VideoStatus","LoadingMask","line","handler","id","VideoTitle","Header","_shown","_dragging","_enabled","Mini","disabled","offsetLeft","offsetTop","mLeft","mTop","mousemoveHandler","mouseupHandler","LightOff","Webscreen","Danmaku","DanmakuMode","MeonDanmakuEngine","displayed","contentIndex","items","keyword","user","containerWidth","containerHeight","itemY","danItemRight","containerRight","elRight","danItemLeft","containerLeft","getSpeed","getDOMTrack","getTrack","ele","forTrack","DOMTrack","track","enterTime","danRight","danLeft","docFragment","itemWidth","trackType","trackIndex","maxTop","prev","cur","speed","distance","topArr","topDan","bottomArr","bottomDan","text","font","range","single","elRect","containerRect","edgeLeft","edgeRight","edgeTop","edgeBottom","resultDOM","DanmakuEngine","scale","bold","opacity","ar","randomId","hs","al","DanmakuLoader","defaultParsers","response","raw","parser","data","source","xmlDoc","nodeList","generate","currentNode","DanmakuOperate","ButtonDanmakuToggle","DanmakuBar","defaultPlaceholder","placeholder","ButtonDanmakuSettings","area","templateDanmaku","hide","copyClip","DanmakuMenu","captured","danmakuPlugins","danmakuControls","presetDanmaku","Qualities","HlsLoader","hlsPlayer","DashLoader","dashPlayer","FlvLoader","flvPlayer","_ratio","AspectRatio","ratioW","ratioH","cWidth","cHeight","rwxh","rhxw","plugins","VideoQuality","panels","About","Hotkeys","loaders","MfunsPlayer"],"mappings":"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","x_google_ignoreList":[12,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72]}