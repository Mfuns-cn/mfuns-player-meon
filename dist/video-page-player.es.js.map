{"version":3,"file":"video-page-player.es.js","sources":["../src/core/utils/index.ts","../src/core/config.ts","../src/core/module/videoController.ts","../src/core/module/pluginManager.ts","../src/core/module/hookManager.ts","../src/core/module/loaderManager.ts","../src/core/module/eventEmitter.ts","../src/core/player.ts","../src/core/plugin.ts","../src/core/components/Slider.ts","../src/core/components/SliderVertical.ts","../node_modules/lit-html/lit-html.js","../src/core/components/Picker.ts","../src/core/components/MultiPicker.ts","../src/core/components/Switch.ts","../src/core/components/Checkbox.ts","../src/mfuns-player/core-player.ts","../src/mfuns-plugin/danmakuList/VirtualList.ts","../src/mfuns-plugin/danmakuList/index.ts","../src/plugins/enhance/video/blackBorder.ts","../src/plugins/screen/widescreen.ts","../src/plugins/controls/button/ButtonPlay.ts","../src/plugins/controls/button/ButtonPrev.ts","../src/plugins/controls/button/ButtonNext.ts","../src/plugins/controls/videoTime.ts","../src/plugins/controls/button/ButtonLoop.ts","../src/plugins/controls/button/ButtonPart.ts","../src/plugins/controls/button/ButtonVolume.ts","../src/plugins/controls/button/ButtonSettings.ts","../src/plugins/controls/button/ButtonPip.ts","../src/plugins/controls/button/ButtonWidescreen.ts","../src/plugins/controls/button/ButtonWebscreen.ts","../src/plugins/controls/button/ButtonFullscreen.ts","../src/plugins/panels/about/index.ts","../src/plugins/panels/hotkeyInfo/index.ts","../src/plugins/ui/contextMenu.ts","../src/plugins/ui/controller.ts","../src/core/utils/KeyCode.enum.ts","../src/plugins/hotkey.ts","../src/plugins/ui/modal.ts","../src/plugins/controls/progress.ts","../src/plugins/settings.ts","../src/plugins/ui/side.ts","../src/plugins/screen/pip.ts","../src/plugins/screen/fullscreen.ts","../src/plugins/videoOptions/user.ts","../src/plugins/state/stateActive.ts","../src/plugins/state/stateFocus.ts","../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/utils/freeze.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/utils/process.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../src/plugins/state/stateResize.ts","../src/plugins/state/stateIntersecting.ts","../src/plugins/ui/toast.ts","../src/plugins/presets/basic.ts","../src/plugins/enhance/playback/autoPart.ts","../src/plugins/enhance/playback/autoPlay.ts","../src/plugins/enhance/playback/autoSeek.ts","../src/plugins/theme.ts","../src/plugins/videoOptions/part.ts","../src/plugins/patch/seamless.ts","../src/plugins/panels/partList/index.ts","../src/plugins/controls/button/ButtonDanmakulist.ts","../src/plugins/quality.ts","../src/plugins/controls/button/ButtonQuality.ts","../src/plugins/enhance/ui/videoStatus.ts","../src/plugins/enhance/ui/loadingMask.ts","../src/plugins/danmaku/controls/danmakuCount.ts","../src/plugins/ui/header.ts","../src/plugins/enhance/ui/mini.ts","../src/plugins/enhance/ui/lightOff.ts","../src/plugins/screen/webscreen.ts","../src/plugins/danmaku/danmaku.ts","../src/plugins/danmaku/types.ts","../src/plugins/danmaku/danmakuEngine/MeonDanmakuEngine.ts","../src/plugins/danmaku/danmakuEngine/index.ts","../src/core/utils/randomId.ts","../src/plugins/danmaku/danmakuLoader.ts","../src/plugins/danmaku/danmakuOperate.ts","../src/plugins/danmaku/controls/ButtonDanmakuToggle.ts","../src/plugins/danmaku/danmakuBar.ts","../src/plugins/danmaku/controls/ButtonDanmakuSettings.ts","../src/plugins/danmaku/danmakuMenu.ts","../src/plugins/danmaku/controls/ButtonDanmakuStyle.ts","../src/plugins/presets/danmaku.ts","../src/plugins/videoOptions/qualities.ts","../src/plugins/videoLoader/hlsLoader.ts","../src/plugins/videoLoader/dashLoader.ts","../src/plugins/videoLoader/flvLoader.ts","../src/plugins/enhance/video/aspectRatio.ts","../src/plugins/ui/footbar.ts","../src/mfuns-player/video-page-player.ts"],"sourcesContent":["import { PlayerOptions } from \"@/types\";\n\nexport const isMobile = /mobile/i.test(window.navigator.userAgent);\n\n/** 是否支持全屏 */\nexport const fullScreenEnabled =\n  document.fullscreenEnabled ||\n  (document as any).webkitFullscreenEnabled ||\n  (document as any).mozFullScreenEnabled ||\n  (document as any).msFullscreenEnabled ||\n  false;\n\n/** 是否支持画中画 */\nexport const pictureInPictureEnabled = document.pictureInPictureEnabled || false;\n\n/**\n * 创建元素\n * @param tagName 元素标签名\n * @param attributes 元素属性\n * @param children 子元素/HTML字符串\n */\nexport function createElement<T extends keyof HTMLElementTagNameMap>(\n  tagName: T,\n  attributes?: Record<string, string>,\n  children?: Node | string\n) {\n  const el = document.createElement(tagName);\n  if (attributes) {\n    for (const name in attributes) {\n      el.setAttribute(name, attributes[name]);\n    }\n  }\n  if (typeof children == \"string\") {\n    el.innerHTML = children;\n  } else if (children instanceof Node) {\n    el.appendChild(children);\n  }\n  return el;\n}\n\n/**\n * 替换子元素\n * @param element 父元素\n * @param children 要替换的子节点或HTML字符串\n */\nexport function replaceChildren(element: HTMLElement, children: Node | string) {\n  if (typeof children == \"string\") {\n    element.innerHTML = children;\n  } else {\n    element.innerHTML = \"\";\n    element.appendChild(children);\n  }\n}\n/**\n * 防抖\n * @param fn 需要防抖处理的函数\n * @param delay 防抖延迟执行时间\n * @param immediate 是否立即执行一次\n */\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  delay: number,\n  immediate: boolean = false\n) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let isInvoke = false;\n  const f = function (this: unknown, ...args: T) {\n    if (timer) clearTimeout(timer);\n    if (immediate && !isInvoke) {\n      fn.apply(this, args);\n      isInvoke = true;\n    } else {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n        isInvoke = false;\n      }, delay);\n    }\n  };\n  /*   f.clear = () => {\n    if (timer) clearTimeout(timer);\n  }; */\n  return f;\n};\n\n/**\n * 节流\n * @param fn 需要节流处理的函数\n * @param wait 执行一次后需要等待的时间\n */\nexport const throttle = <T extends any[]>(fn: (...args: T) => void, wait: number) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  return function (this: unknown, ...args: T) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        clearTimeout(timer!);\n        timer = null;\n      }, wait);\n    }\n  };\n};\n\n/** 生成一个范围内的随机数\n * @param lower 最小值\n * @param upper 最大值\n * @returns 生成的随机数\n */\nexport function random(lower: number, upper: number): number {\n  return lower + Math.random() * (upper - lower);\n}\n\n/** 钳制数值\n * @param number 传入数值\n * @param lower 最小值\n * @param upper 最大值\n * @returns 钳制后的数值\n */\nexport function clamp(number: number, lower: number, upper: number): number {\n  return number > lower ? (number < upper ? number : upper) : lower;\n}\n\n/**\n * 将时间文本转换为秒数\n *\n * @param time 冒号分隔的时间文本\n * @return 秒数\n */\nexport function timeToSecond(time: string): number {\n  const arr = time.split(\":\").slice(-3);\n  const sec = parseInt(arr[arr.length - 1]) || 0;\n  const min = parseInt(arr[arr.length - 2]) || 0;\n  const hour = parseInt(arr[arr.length - 3]) || 0;\n  const day = parseInt(arr[arr.length - 4]) || 0;\n  return sec + min * 60 + hour * 3600 + day * 86400;\n}\n\n/**\n * 将秒数转换为时间文本\n *\n * @param second 秒数\n * @param level 转换等级(二进制位属性，表示可转换的时间格式，4-天时分秒，3-时分秒，2-分秒, 1-秒)\n * @return 时间文本\n */\nexport function secondToTime(second: number, level: number = 0b0110): string {\n  second = Number.isFinite(second) ? Math.floor(second) : 0;\n  if (!(level & 0b1111)) return second.toString();\n  const join = (...args: number[]) =>\n    args.map((num) => (num < 10 ? `0${num}` : `${num}`)).join(\":\");\n  let minute: number, hour: number, day: number;\n  if (level & 0b0001 && second < 60) {\n    return second.toString();\n  }\n  minute = Math.floor(second / 60);\n  second = second % 60;\n  if (level & 0b0010 && minute < 60) {\n    return join(minute, second);\n  }\n  hour = Math.floor(minute / 60);\n  minute = minute % 60;\n  if (level & 0b0100 && hour < 24) {\n    return join(hour, minute, second);\n  }\n  day = Math.floor(hour / 60);\n  hour = hour % 24;\n  return join(day, hour, minute, second);\n}\n\n/** 十六进制颜色转数字\n * @param color 颜色字符串，可以省略#符号\n * @return 数值\n */\nexport function HexColorToNumber(color: string): number {\n  if (color[0] === \"#\") {\n    color = color.substring(1);\n  }\n  if (color.length === 3) {\n    color = `${color[0]}${color[0]}${color[1]}${color[1]}${color[2]}${color[2]}`;\n  }\n  return (parseInt(color, 16) + 0x000000) & 0xffffff;\n}\n\n/**\n * 数字转十六进制颜色\n * @param number 传入的数字\n * @return 十六进制颜色\n */\nexport function numberToHexColor(number: number): string {\n  return `#${`00000${number.toString(16)}`.slice(-6)}`;\n}\n\nconst dateFormatMap = {\n  yyyy: (d: Date) => d.getFullYear().toString(),\n  yy: (d: Date) => d.getFullYear().toString().slice(-2),\n  MM: (d: Date) => (d.getMonth() + 1).toString().padStart(2, \"0\"),\n  dd: (d: Date) => d.getDate().toString().padStart(2, \"0\"),\n  HH: (d: Date) => d.getHours().toString().padStart(2, \"0\"),\n  mm: (d: Date) => d.getMinutes().toString().padStart(2, \"0\"),\n  ss: (d: Date) => d.getSeconds().toString().padStart(2, \"0\"),\n};\n\n/**\n * 格式化时间\n * @param date 时间对象\n * @param format 日期格式\n * @return 格式化后的字符串\n */\nexport function dateFormat(date: Date, format: string): string {\n  return format.replace(/yyyy|yy|MM|dd|HH|mm|ss/g, (match) =>\n    dateFormatMap[match as keyof typeof dateFormatMap]?.(date)\n  );\n}\n\n// 判断是否是纯粹对象\nexport function isPlainObject(obj: object) {\n  return Object.getPrototypeOf(obj) === Object.prototype;\n}\n\n// 深合并(不包括数组)\nexport function assignDeep(...args: Record<string, any>[]) {\n  if (args.length < 2) return args[0];\n  // 合并结果\n  let result = args[0];\n  args.shift();\n  args.forEach((item) => {\n    if (isPlainObject(item)) {\n      if (!isPlainObject(result)) result = {};\n      for (const key in item) {\n        if (result[key] && isPlainObject(item[key])) {\n          result[key] = assignDeep(result[key], item[key]);\n        } else {\n          result[key] = item[key];\n        }\n      }\n    }\n  });\n  return result;\n}\n\nexport function mergeOptions(...opts: PlayerOptions[]) {\n  let result = { ...opts[0] };\n  let plugins = opts[0].plugins || [];\n  opts.shift();\n  opts.forEach((op) => {\n    if (op.plugins) plugins = plugins.concat(plugins, op.plugins);\n    assignDeep(result, op);\n  });\n  result.plugins = plugins;\n  return result;\n}\n","export const classPrefix = \"mfuns-player\";\r\n\r\nexport const version = __MFUNSPLAYER_VERSION__;\r\nexport const gitHash = __MFUNSPLAYER_GIT_HASH__;\r\n\r\n/** 项目链接 */\r\nexport const repositoryLink = \"https://github.com/Mfuns-cn/mfunsPlayer/tree/v3-beta\";\r\n\r\n/** 开发者列表 */\r\nexport const developers = [\r\n  { name: \"Minteea\", id: \"Minteea\", link: \"https://github.com/Minteea\" },\r\n  { name: \"鲁迪钨丝\", id: \"Rudiusu\", link: \"https://github.com/Rudiusu\" },\r\n];\r\n","import { LoadInfo, MediaController, PlayerOptions, VideoInfo } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { PlayerEventMap } from \"@/types/PlayerEventMap\";\r\nimport { createElement } from \"@/utils\";\r\nimport { classPrefix } from \"@/config\";\r\n\r\nconst videoEventMap: {\r\n  [k in keyof PlayerEventMap & keyof HTMLVideoElementEventMap]?: (\r\n    v: HTMLVideoElement\r\n  ) => Parameters<PlayerEventMap[k]>;\r\n} = {\r\n  play: () => [],\r\n  pause: () => [],\r\n  ended: () => [],\r\n\r\n  loadeddata: () => [],\r\n  loadedmetadata: () => [],\r\n  waiting: () => [],\r\n  playing: () => [],\r\n  canplay: () => [],\r\n  canplaythrough: () => [],\r\n\r\n  timeupdate: (v) => [v.currentTime],\r\n  durationchange: (v) => [v.duration],\r\n  progress: (v) => [v.buffered],\r\n  seeking: (v) => [v.currentTime],\r\n  seeked: (v) => [v.currentTime],\r\n  volumechange: (v) => [v.volume, v.muted],\r\n  ratechange: (v) => [v.playbackRate],\r\n\r\n  enterpictureinpicture: () => [],\r\n  leavepictureinpicture: () => [],\r\n};\r\n\r\nexport default class VideoController {\r\n  /** 播放器主体 */\r\n  player: Player;\r\n  /** video对象 */\r\n  $el: HTMLVideoElement;\r\n\r\n  ratio: [number, number] | null = null;\r\n\r\n  /** 视频信息 */\r\n  info: VideoInfo = {};\r\n\r\n  mediaController: MediaController | null = null;\r\n\r\n  private detachEventController?: AbortController;\r\n\r\n  constructor(player: Player, options: PlayerOptions) {\r\n    this.player = player;\r\n\r\n    this.$el = this.player.$content.appendChild(\r\n      createElement(\"video\", { class: `${classPrefix}-video` })\r\n    );\r\n\r\n    this._attachEvent(this.$el);\r\n\r\n    this.player.on(\"ended\", () => {\r\n      this.player.hook.call(\"end\").then((res) => {\r\n        if (res) this.player.emit(\"end\");\r\n      });\r\n    });\r\n  }\r\n\r\n  /** 设置视频 */\r\n  public set(info: VideoInfo, play?: boolean, time?: number) {\r\n    this.player.hook.call(\"video.set\", info).then(async (res) => {\r\n      if (res) {\r\n        // 销毁并丢弃原视频控制实例\r\n        this.mediaController?.destroy?.();\r\n        this.mediaController = null;\r\n        // 设置新视频信息\r\n        this.info = info;\r\n        this.player.emit(\"videoChange\", { ...info });\r\n        // 加载视频\r\n        let { url, type, live } = info;\r\n        const loadInfo = { url, type, play, time, live };\r\n        this.player.hook.call(\"video.beforeLoad\", loadInfo).then(() => {\r\n          if (loadInfo.url) {\r\n            this.load(loadInfo as LoadInfo);\r\n          } else {\r\n            this.player.throw(new Error(\"缺少视频播放信息\"));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /** 加载视频 */\r\n  public load(info: LoadInfo) {\r\n    this.player.hook.call(\"video.load\", info).then((res) => {\r\n      if (res) {\r\n        this.mediaController = this.player.loader.create(info, this.$el);\r\n        this.player.emit(\"videoLoad\", info);\r\n      } else {\r\n        this.player.throw(new Error(\"视频加载失败\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  /** 添加视频事件 */\r\n  private _attachEvent(video: HTMLVideoElement) {\r\n    this.detachEventController = new AbortController();\r\n    for (const eventName in videoEventMap) {\r\n      const values =\r\n        videoEventMap[eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap]!;\r\n      video.addEventListener(\r\n        eventName,\r\n        () => {\r\n          this.player.emit(\r\n            eventName as keyof HTMLVideoElementEventMap & keyof PlayerEventMap,\r\n            ...values(video)\r\n          );\r\n        },\r\n        { signal: this.detachEventController.signal }\r\n      );\r\n    }\r\n  }\r\n\r\n  public bind(el: HTMLVideoElement) {\r\n    this.$el = el;\r\n    this.detachEventController?.abort();\r\n    this._attachEvent(el);\r\n  }\r\n\r\n  /** 获取播放信息 */\r\n  getVideoInfo() {\r\n    return {\r\n      ...this.info,\r\n    };\r\n  }\r\n  /** 获取媒体信息 */\r\n  getMediaInfo() {\r\n    return {\r\n      url: this.mediaController?.url,\r\n      type: this.mediaController?.type || \"\",\r\n      live: this.mediaController?.live || false,\r\n    };\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { PluginFrom } from \"@/plugin\";\r\nimport { PlayerOptions, PluginItem, PluginConstructor } from \"@/types\";\r\n\r\nexport default class PluginManager {\r\n  player: Player;\r\n  get list() {\r\n    return this.player.plugins as unknown as Record<string, PluginItem>;\r\n  }\r\n  private isInit = false;\r\n  private isReady = false;\r\n  private isMounted = false;\r\n  constructor(player: Player) {\r\n    this.player = player;\r\n  }\r\n\r\n  /** 插件模块初始化 @internal */\r\n  init(options: PlayerOptions) {\r\n    if (this.isInit) return;\r\n    this.isInit = true;\r\n    options.plugins?.forEach((pluginItem) => {\r\n      this.register(pluginItem, options);\r\n    });\r\n    this.pluginsReady();\r\n    this.player.emit(\"ready\");\r\n    this.player.once(\"mounted\", () => {\r\n      this.playerMounted();\r\n    });\r\n  }\r\n\r\n  /** 注册插件 */\r\n  register(pluginItem: PluginConstructor | PluginItem, options: PlayerOptions) {\r\n    const plugin: PluginItem =\r\n      typeof pluginItem == \"function\" ? new pluginItem(this.player) : pluginItem;\r\n    if (pluginItem.pluginName) this.list[pluginItem.pluginName] = plugin;\r\n    if (plugin.initialized) return;\r\n    plugin.init?.(this.player);\r\n    plugin.apply?.(this.player, options);\r\n    this.isReady && plugin.ready?.(this.player);\r\n    this.isMounted && plugin.mounted?.(this.player);\r\n    plugin.initialized = true;\r\n  }\r\n\r\n  /** 访问已安装插件实例 */\r\n  get(name: string): PluginItem | undefined {\r\n    return this.list[name];\r\n  }\r\n\r\n  /** 获取插件实例 */\r\n  from<T extends PluginItem>(item: PluginFrom<T>): T | undefined {\r\n    switch (typeof item) {\r\n      case \"object\":\r\n        return item;\r\n      case \"function\":\r\n        return this.build(item);\r\n      default:\r\n        return this.list[item] as T;\r\n    }\r\n  }\r\n\r\n  /** 初始化插件实例 */\r\n  build<T extends PluginItem>(\r\n    pluginItem: (new (player: Player) => T) | T,\r\n    options: PlayerOptions = {}\r\n  ): T {\r\n    const plugin: T = typeof pluginItem == \"function\" ? new pluginItem(this.player) : pluginItem;\r\n    if (plugin.initialized) return plugin;\r\n    plugin.init?.(this.player);\r\n    plugin.apply?.(this.player, options);\r\n    this.isReady\r\n      ? plugin.ready?.(this.player)\r\n      : this.player.once(\"ready\", () => plugin.mounted?.(this.player));\r\n    this.isMounted\r\n      ? plugin.mounted?.(this.player)\r\n      : this.player.once(\"mounted\", () => plugin.mounted?.(this.player));\r\n    plugin.initialized = true;\r\n    return plugin;\r\n  }\r\n\r\n  /** 所有插件注册完毕后执行 @internal */\r\n  protected pluginsReady() {\r\n    if (this.isReady) return;\r\n    for (const name in this.list) {\r\n      const plugin = this.list[name];\r\n      plugin.ready?.(this.player);\r\n    }\r\n    this.isReady = true;\r\n  }\r\n\r\n  /** 播放器挂载后执行 @internal */\r\n  protected playerMounted() {\r\n    if (this.isMounted) return;\r\n    for (const name in this.list) {\r\n      const plugin = this.list[name];\r\n      plugin.mounted?.(this.player);\r\n    }\r\n  }\r\n\r\n  /** 销毁所有插件 @internal */\r\n  destroy() {\r\n    for (const name in this.list) {\r\n      const plugin = this.list[name];\r\n      plugin.destroy?.();\r\n    }\r\n  }\r\n}\r\n","import { PlayerHookMap } from \"@/types\";\r\n\r\ntype MaybePromise<T> = T | Promise<T>;\r\n\r\nexport type HookFunction<T> = (ctx: T) => MaybePromise<void | boolean>;\r\n\r\nexport default class HookManager {\r\n  protected hooks: Record<string, HookFunction<any>[]> = {};\r\n\r\n  /** 注册钩子 */\r\n  register<T extends keyof PlayerHookMap>(\r\n    name: T,\r\n    func: HookFunction<PlayerHookMap[T]>,\r\n    before = false\r\n  ) {\r\n    let hook = this.hooks[name];\r\n    if (!hook) {\r\n      hook = [];\r\n      this.hooks[name] = hook;\r\n    }\r\n    before ? hook.unshift(func) : hook.push(func);\r\n  }\r\n\r\n  /** 移除钩子 */\r\n  unregister<T extends keyof PlayerHookMap>(name: T, func: HookFunction<PlayerHookMap[T]>) {\r\n    let hook = this.hooks[name];\r\n    if (!hook) {\r\n      hook = [];\r\n      this.hooks[name] = hook;\r\n    }\r\n    const index = hook.indexOf(func);\r\n    if (index > -1) hook.splice(index, 1);\r\n  }\r\n\r\n  call<T extends keyof PlayerHookMap>(\r\n    name: PlayerHookMap[T] extends void ? T : never,\r\n    ctx: void,\r\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\r\n  ): Promise<boolean>;\r\n  call<T extends keyof PlayerHookMap>(\r\n    name: T,\r\n    ctx: PlayerHookMap[T],\r\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\r\n  ): Promise<boolean>;\r\n  /** 调用钩子函数\r\n   * @param name 钩子名称\r\n   * @param ctx 钩子上下文\r\n   * @param defaultFunc 钩子在正常遍历完毕后最终执行的钩子函数\r\n   */\r\n  async call<T extends keyof PlayerHookMap>(\r\n    name: T,\r\n    ctx: PlayerHookMap[T],\r\n    defaultFunc?: HookFunction<PlayerHookMap[T]>\r\n  ) {\r\n    const hook = this.hooks[name];\r\n    if (hook?.length) {\r\n      for (const f of hook) {\r\n        const res = await f(ctx);\r\n        if (res == true) {\r\n          console.log(`钩子提前结束调用: ${name}`);\r\n          console.log(f);\r\n          return true;\r\n        } else if (res == false) {\r\n          console.log(`钩子被拦截: ${name}`);\r\n          console.log(f);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    console.log(`钩子调用完毕: ${name}`);\r\n    console.log(ctx);\r\n    return defaultFunc?.(ctx as any) ?? true;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { LoadInfo, MediaController, MediaLoader, PlayerHookMap } from \"@/types\";\r\n\r\nexport default class LoaderManager {\r\n  protected list = new Map<string, MediaLoader>();\r\n  protected player: Player;\r\n\r\n  constructor(player: Player) {\r\n    this.player = player;\r\n  }\r\n\r\n  /** 注册加载器 */\r\n  register(name: string, loader: MediaLoader) {\r\n    this.list.set(name, loader);\r\n  }\r\n\r\n  /** 移除加载器 */\r\n  unregister<T extends keyof PlayerHookMap>(name: T) {\r\n    this.list.delete(name);\r\n  }\r\n\r\n  /** 创建媒体控制实例 */\r\n  create(info: LoadInfo, video: HTMLVideoElement) {\r\n    for (const [name, loader] of this.list) {\r\n      if (loader.check(info)) return loader.create(info, video);\r\n    }\r\n    return this.createDefault(info, video);\r\n  }\r\n\r\n  /** 常规方式创建实例 */\r\n  createDefault(info: LoadInfo, video: HTMLVideoElement): MediaController {\r\n    const { type, url, live, play, time } = info;\r\n    const controller: MediaController = {\r\n      type: type || \"\",\r\n      url: url,\r\n      live: live || false,\r\n      mediaElement: video,\r\n      destroy() {\r\n        this.mediaElement.src = \"\";\r\n      },\r\n    };\r\n    const t = time === true ? this.player.currentTime : time;\r\n    video.src = url;\r\n    video.addEventListener(\r\n      \"loadeddata\",\r\n      () => {\r\n        if (t) {\r\n          this.player.seek(t);\r\n        }\r\n        if (play) {\r\n          this.player.play();\r\n        }\r\n      },\r\n      { once: true }\r\n    );\r\n    return controller;\r\n  }\r\n}\r\n","import { PlayerEventMap } from \"@/types\";\r\n\r\nexport default class EventEmitter {\r\n  protected listeners: Record<string, ((...args: any[]) => void)[]> = {};\r\n  protected onceListeners: Record<string, ((...args: any[]) => void)[]> = {};\r\n\r\n  readonly customEventList: string[] = [];\r\n\r\n  /** 添加监听 */\r\n  on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\r\n    if (!this.listeners[name]) {\r\n      this.listeners[name] = [];\r\n    }\r\n    this.listeners[name].push(listener);\r\n  }\r\n\r\n  /** 添加一次性监听 */\r\n  once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\r\n    if (!this.onceListeners[name]) {\r\n      this.onceListeners[name] = [];\r\n    }\r\n    this.onceListeners[name].push(listener);\r\n  }\r\n\r\n  /** 移除监听 */\r\n  off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\r\n    if (!this.listeners[name]) {\r\n      this.listeners[name] = [];\r\n    }\r\n    const index = this.listeners[name].indexOf(listener);\r\n    if (index > -1) this.listeners[name].splice(index, 1);\r\n  }\r\n\r\n  /** 触发事件 */\r\n  emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\r\n    if (this.listeners[name]?.length) {\r\n      for (let i = 0; i < this.listeners[name].length; i++) {\r\n        this.listeners[name][i](...args);\r\n      }\r\n    }\r\n    if (this.onceListeners[name]?.length) {\r\n      for (let i = 0; i < this.onceListeners[name].length; i++) {\r\n        this.onceListeners[name][i](...args);\r\n      }\r\n      this.onceListeners[name] = [];\r\n    }\r\n  }\r\n}\r\n","import {\r\n  LoadInfo,\r\n  MediaController,\r\n  PlayerInvokes,\r\n  PlayerPlugins,\r\n  PlayerPropertyDescriptor,\r\n  VideoInfo,\r\n} from \"./types\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { PlayerEventMap } from \"./types/PlayerEventMap\";\r\nimport { clamp, createElement } from \"./utils\";\r\nimport { classPrefix, gitHash, version } from \"./config\";\r\nimport VideoController from \"./module/videoController\";\r\nimport PluginManager from \"./module/pluginManager\";\r\nimport HookManager from \"./module/hookManager\";\r\nimport LoaderManager from \"./module/loaderManager\";\r\nimport EventEmitter from \"./module/eventEmitter\";\r\n\r\n/**\r\n * @event\r\n */\r\nexport class Player {\r\n  static readonly version = version;\r\n  static readonly gitHash = gitHash;\r\n  /** 容器 */\r\n  readonly container?: HTMLElement;\r\n  /** 播放器元素 */\r\n  readonly $el: HTMLDivElement;\r\n  /** 播放器主要区域 */\r\n  readonly $main: HTMLDivElement;\r\n  /** 播放器视频区域 */\r\n  readonly $area: HTMLDivElement;\r\n  /** 播放器视频容器 */\r\n  readonly $content: HTMLDivElement;\r\n  /** hook */\r\n  readonly hook = new HookManager();\r\n  /** 媒体加载器 */\r\n  readonly loader: LoaderManager;\r\n  /** 插件 */\r\n  readonly plugins: PlayerPlugins = {};\r\n  /** 外部调用 */\r\n  readonly invokes: PlayerInvokes = {};\r\n  /** 插件管理 */\r\n  readonly plugin: PluginManager;\r\n  /** 视频控制 */\r\n  protected _videoController: VideoController;\r\n  /** 事件机制 */\r\n  protected _eventEmitter = new EventEmitter();\r\n  /** Player类 */\r\n  readonly Player = Player;\r\n\r\n  constructor(options: PlayerOptions) {\r\n    this.container = options.container;\r\n\r\n    this.$el = createElement(\"div\", { class: `${classPrefix} mpui` });\r\n    this.$main = this.$el.appendChild(createElement(\"div\", { class: `${classPrefix}-main` }));\r\n    this.$area = this.$main.appendChild(createElement(\"div\", { class: `${classPrefix}-area` }));\r\n    this.$content = this.$area.appendChild(\r\n      createElement(\"div\", { class: `${classPrefix}-content` })\r\n    );\r\n    this.invokes = options.invokes ?? {};\r\n\r\n    this.plugin = new PluginManager(this);\r\n    this._videoController = new VideoController(this, options);\r\n    this.loader = new LoaderManager(this);\r\n\r\n    this.init(options);\r\n  }\r\n\r\n  /** 初始化播放器 */\r\n  private async init(options: PlayerOptions) {\r\n    // 状态事件\r\n    this.on(\"videoChange\", () => {\r\n      this.$el.classList.add(\"is-start\");\r\n    });\r\n    this.$el.classList.add(\"is-paused\");\r\n    this.on(\"play\", () => {\r\n      this.$el.classList.remove(\"is-start\");\r\n      this.$el.classList.remove(\"is-paused\");\r\n    });\r\n    this.on(\"pause\", () => {\r\n      this.$el.classList.add(\"is-paused\");\r\n    });\r\n    this.on(\"waiting\", () => {\r\n      this.$el.classList.add(\"is-loading\");\r\n    });\r\n    this.on(\"playing\", () => {\r\n      this.$el.classList.remove(\"is-loading\");\r\n    });\r\n\r\n    // 注册列表中的插件\r\n    this.plugin.init(options);\r\n\r\n    // 播放器挂载\r\n    this.container?.appendChild(this.$el);\r\n\r\n    this.emit(\"mounted\");\r\n\r\n    // 装载视频\r\n    this._videoController.set(options.video || {}, options.autoPlay, options.time);\r\n  }\r\n\r\n  /** 播放器视频元素 */\r\n  get $video(): HTMLVideoElement {\r\n    return this._videoController.$el;\r\n  }\r\n\r\n  /** 获取视频信息 */\r\n  getVideoInfo() {\r\n    return this._videoController.getVideoInfo();\r\n  }\r\n\r\n  /** 获取媒体信息 */\r\n  getMediaInfo() {\r\n    return this._videoController.getMediaInfo();\r\n  }\r\n\r\n  /** 获取播放器的媒体元素 */\r\n  getMediaElement(): HTMLVideoElement {\r\n    return this._videoController.$el;\r\n  }\r\n\r\n  /** 绑定媒体元素 */\r\n  attachMediaElement(el: HTMLVideoElement) {\r\n    this._videoController.bind(el);\r\n  }\r\n\r\n  /** 获取媒体控制实例 */\r\n  getMediaController(): MediaController | null {\r\n    return this._videoController.mediaController;\r\n  }\r\n\r\n  /** 绑定媒体控制实例 */\r\n  attachMediaController(controller: MediaController) {\r\n    this._videoController.mediaController = controller;\r\n    this._videoController.bind(controller.mediaElement);\r\n  }\r\n\r\n  /** 设置视频内容 */\r\n  setVideo(info: VideoInfo, play?: boolean, time?: number) {\r\n    return this._videoController.set(info, play, time);\r\n  }\r\n\r\n  /** 加载视频源 */\r\n  loadVideo(info: LoadInfo) {\r\n    return this._videoController.load(info);\r\n  }\r\n\r\n  // --- 播放切换控制 --- //\r\n\r\n  /** 切换上一个 */\r\n  public prev() {\r\n    this.hook.call(\"prev\");\r\n  }\r\n\r\n  /** 切换下一个 */\r\n  public next() {\r\n    this.hook.call(\"next\");\r\n  }\r\n\r\n  // --- 视频播放控制 --- //\r\n\r\n  /** 当前播放器暂停状态 */\r\n  get paused() {\r\n    return this.$video.paused;\r\n  }\r\n\r\n  /** 当前播放时间 */\r\n  public get currentTime() {\r\n    return this.$video.currentTime;\r\n  }\r\n\r\n  /** 当前播放总时间 */\r\n  public get duration() {\r\n    return this.$video.duration;\r\n  }\r\n\r\n  /** 当前播放音量 */\r\n  public get volume() {\r\n    return this.$video.volume;\r\n  }\r\n\r\n  /** 当前静音状态 */\r\n  public get muted() {\r\n    return this.$video.muted;\r\n  }\r\n\r\n  /** 当前播放速度 */\r\n  public get playbackRate() {\r\n    return this.$video.playbackRate;\r\n  }\r\n\r\n  /** 当前视频循环 */\r\n  public get loop() {\r\n    return this.$video.loop;\r\n  }\r\n\r\n  /** 开始播放 */\r\n  public play() {\r\n    this.hook.call(\"play\").then((res) => {\r\n      if (res) this.$video.play();\r\n    });\r\n  }\r\n\r\n  /** 暂停播放 */\r\n  public pause() {\r\n    this.hook.call(\"pause\").then((res) => {\r\n      if (res) this.$video.pause();\r\n    });\r\n  }\r\n\r\n  /** 跳转\r\n   * @param time 跳转时间点（秒）\r\n   */\r\n  public seek(time: number) {\r\n    this.hook.call(\"seek\").then((res) => {\r\n      if (res) {\r\n        this.$video.currentTime = clamp(time, 0, this.$video.duration);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** 设置音量\r\n   * @param volume 音量（0-1）\r\n   */\r\n  public setVolume(volume: number) {\r\n    this.$video.volume = clamp(volume, 0, 1);\r\n  }\r\n\r\n  /** 静音 */\r\n  public setMuted(flag: boolean) {\r\n    this.$video.muted = flag;\r\n  }\r\n\r\n  /** 设置倍速 */\r\n  public setPlaybackRate(value: number) {\r\n    this.$video.playbackRate = value;\r\n  }\r\n\r\n  /** 设置视频循环 */\r\n  public setLoop(flag: boolean) {\r\n    this.$video.loop = flag;\r\n    this.emit(\"loopChange\", flag);\r\n  }\r\n\r\n  // --- 事件 --- //\r\n\r\n  /** 监听事件 */\r\n  public on<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\r\n    this._eventEmitter.on(name, listener);\r\n  }\r\n\r\n  /** 取消监听事件 */\r\n  public off<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\r\n    this._eventEmitter.off(name, listener);\r\n  }\r\n\r\n  /** 一次性监听事件 */\r\n  public once<T extends keyof PlayerEventMap>(name: T, listener: PlayerEventMap[T]) {\r\n    this._eventEmitter.once(name, listener);\r\n  }\r\n\r\n  /** 发送事件 */\r\n  public emit<T extends keyof PlayerEventMap>(name: T, ...args: Parameters<PlayerEventMap[T]>) {\r\n    this._eventEmitter.emit(name, ...args);\r\n  }\r\n\r\n  /** 定义属性或方法 */\r\n  public define<T extends keyof Player>(\r\n    name: Player[T] extends Function | undefined ? T : never,\r\n    item: Function\r\n  ): void;\r\n  public define<T extends keyof Player>(name: T, item: PlayerPropertyDescriptor<Player[T]>): void;\r\n  public define(name: string, item: Function | PropertyDescriptor) {\r\n    Object.defineProperty(this, name, typeof item == \"function\" ? { value: item } : item);\r\n  }\r\n\r\n  /** 抛出错误 */\r\n  public throw(err: Error) {\r\n    console.error(err);\r\n    this.emit(\"error\", err);\r\n  }\r\n\r\n  /** 播放器销毁 */\r\n  public destroy() {\r\n    // 所有插件执行destroy函数\r\n    this.plugin.destroy();\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import { PlayerOptions, PluginItem } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\n\r\n/** 基础插件 */\r\nexport abstract class BasePlugin implements PluginItem {\r\n  static pluginName: string;\r\n  protected readonly player: Player;\r\n  protected readonly plugins: Player[\"plugins\"];\r\n  /** 抛出错误 */\r\n  protected readonly throw: Player[\"throw\"];\r\n  constructor(player: Player) {\r\n    this.player = player;\r\n    this.plugins = player.plugins;\r\n    this.throw = player.throw;\r\n  }\r\n  /** 插件创建后 */\r\n  init?(player: Player): void;\r\n  /** 作为插件注册 */\r\n  apply?(player: Player, options: PlayerOptions): void;\r\n  /** 所有插件加载后 */\r\n  ready?(player: Player): void;\r\n  /** 播放器挂载后 */\r\n  mounted?(player: Player): void;\r\n  /** 执行销毁 */\r\n  destroy?(): void;\r\n}\r\n\r\n/** UI组件 */\r\nexport interface UIItem extends PluginItem {\r\n  /** 组件元素 */\r\n  $el: HTMLElement;\r\n  /** 组件标题 */\r\n  title?: string;\r\n  /** 忽略该组件，用于不支持的情况 */\r\n  ignored?: boolean;\r\n}\r\n\r\n/** 可挂载组件 */\r\nexport interface MountableItem extends UIItem {\r\n  /** 将组件挂载到父元素 */\r\n  mount(\r\n    /** 挂载的容器元素 */\r\n    el: HTMLElement,\r\n    opt?: {\r\n      /** 挂载组件时执行的逻辑 */\r\n      onToggle?: (flag: boolean) => void;\r\n      /** 卸载组件时执行的逻辑 */\r\n      onUnmount?: () => void;\r\n    }\r\n  ): void;\r\n  /** 卸载组件 */\r\n  unmount(): void;\r\n}\r\n\r\n/** 控制组件 */\r\nexport interface ControlsItem extends UIItem {}\r\n\r\n/** 面板组件 */\r\nexport interface PanelItem extends MountableItem {\r\n  toggle?(flag?: boolean): void;\r\n}\r\n\r\n/** 菜单项组件 */\r\nexport interface MenuItem extends PluginItem {\r\n  icon?: HTMLElement | ((player: Player) => HTMLElement);\r\n  content: string | HTMLElement | ((player: Player) => string | HTMLElement);\r\n  onClick?: (player: Player) => void;\r\n}\r\n\r\n/** 界面插件 */\r\nexport abstract class UIPlugin extends BasePlugin {\r\n  $el: HTMLElement;\r\n  $<T extends HTMLElement>(selectors: string) {\r\n    return this.$el.querySelector<T>(selectors)!;\r\n  }\r\n  constructor(player: Player, el: HTMLElement) {\r\n    super(player);\r\n    this.$el = el;\r\n  }\r\n}\r\n\r\n/** 可挂载组件插件 */\r\nexport abstract class MountablePlugin extends UIPlugin implements MountableItem {\r\n  title?: string;\r\n  #onUnmount?: () => void;\r\n  /** 挂载 */\r\n  mount(el: HTMLElement, opt?: { onUnmount?: () => void }) {\r\n    el.appendChild(this.$el);\r\n    this.unmount();\r\n    this.#onUnmount = opt?.onUnmount;\r\n  }\r\n  /** 卸载 */\r\n  unmount() {\r\n    this.#onUnmount?.();\r\n    this.#onUnmount = undefined;\r\n  }\r\n  show() {\r\n    this.$el.style.display = \"\";\r\n  }\r\n  hide() {\r\n    this.$el.style.display = \"none\";\r\n  }\r\n}\r\n\r\n/** 控制组件插件 */\r\nexport abstract class ControlsPlugin extends MountablePlugin implements ControlsItem {}\r\n\r\n/** 面板插件 */\r\nexport abstract class PanelPlugin extends MountablePlugin implements PanelItem {\r\n  title?: string;\r\n  container?: HTMLElement;\r\n  #onToggle?: (flag: boolean) => void;\r\n  shown = false;\r\n  constructor(player: Player, el: HTMLElement) {\r\n    super(player, el);\r\n  }\r\n  /** 挂载 */\r\n  mount(el: HTMLElement, opt?: { onToggle?: (flag: boolean) => void; onUnmount?: () => void }) {\r\n    super.mount(el, { onUnmount: opt?.onUnmount });\r\n    this.#onToggle = opt?.onToggle;\r\n  }\r\n  /** 卸载 */\r\n  unmount() {\r\n    this.toggle(false);\r\n    super.unmount();\r\n    this.#onToggle = undefined;\r\n  }\r\n  /** 切换显示隐藏状态 */\r\n  toggle(flag?: boolean) {\r\n    this.shown = flag ?? !this.shown;\r\n    this.#onToggle?.(this.shown);\r\n  }\r\n}\r\n\r\n/** 菜单项插件 */\r\nexport abstract class MenuPlugin extends BasePlugin implements MenuItem {\r\n  abstract name: string;\r\n  abstract content: string | HTMLElement | ((player: Player) => string | HTMLElement);\r\n}\r\n\r\nexport interface MountableContainer {\r\n  append(panel: MountablePlugin, position?: string): void;\r\n}\r\n\r\nexport type PluginFrom<T = PluginItem> = (new (player: Player) => T) | T | string;\r\n","import { createElement } from \"@/utils\";\n\nconst template = ({ divider }: { divider: number }) => /*html*/ `\n  <div\n    class=\"mpui-slider-track\"\n    style=\"\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  \"\n  >\n    <div class=\"mpui-slider-bar\" style=\"position: absolute; left: 0; height: 100%\"></div>\n    <div class=\"mpui-slider-thumb-track\" style=\"height: 0px\">\n      <div\n        class=\"mpui-slider-thumb\"\n        style=\"position: absolute; transform: translate(-50%, -50%)\"\n      ></div>\n      ${\n        divider\n          ? /*html*/ `\n            <div class=\"mpui-slider-divider\">\n              ${new Array(divider).fill(/*html*/ `<div class=\"mpui-slider-divider-dot\"></div>`).join(\"\")}\n            </div>\n          `\n          : \"\"\n      }\n    </div>\n  </div>\n`;\n\ninterface SliderOptions {\n  /** 挂载容器 */\n  container: HTMLElement;\n  /** 最小值 */\n  min: number;\n  /** 最大值 */\n  max: number;\n  /** 步长(若不填或为0，则没有步长限制) */\n  step?: number;\n  /** 分割线 */\n  divider?: number | boolean;\n  /** 默认值(不填的情况下默认值为0) */\n  value?: number;\n  /** 数值更改时触发 */\n  onChange?: (value: number) => void;\n  /** 拖动引发数值更改时触发 */\n  onDrag?: (value: number) => void;\n  /** 开始拖动时触发 */\n  onDragStart?: (value: number) => void;\n  /** 结束拖动时触发 */\n  onDragEnd?: (value: number) => void;\n}\n\n/** 横向滑动条 */\nexport class Slider implements SliderOptions {\n  readonly container: HTMLElement;\n  readonly min: number;\n  readonly max: number;\n  /** 步长 */\n  readonly step: number;\n  /** 分割线 */\n  readonly divider: number;\n  /** 数值 */\n  value: number;\n  onChange?: (value: number) => void;\n  onDragStart?: (value: number) => void;\n  onDragEnd?: (value: number) => void;\n  onDrag?: (value: number) => void;\n\n  // 部件\n  $el: HTMLElement;\n\n  $track: HTMLElement;\n\n  $bar: HTMLElement;\n\n  $thumbTrack: HTMLElement;\n\n  $thumb: HTMLElement;\n\n  constructor({\n    container,\n    min,\n    max,\n    step,\n    divider = 0,\n    value = 0,\n    onChange,\n    onDragStart,\n    onDragEnd,\n    onDrag,\n  }: SliderOptions) {\n    this.container = container;\n    this.min = min;\n    this.max = max;\n    this.step = step || 0;\n    this.divider = divider ? (typeof divider === \"boolean\" ? this.step : divider) : 0;\n    this.value = isNaN(value) ? value : Number(value);\n    this.onChange = onChange;\n    this.onDragStart = onDragStart;\n    this.onDragEnd = onDragEnd;\n    this.onDrag = onDrag;\n\n    this.$el = this.container.appendChild(\n      createElement(\n        \"div\",\n        {\n          class: `mpui-slider mpui-slider-horizontal`,\n          style: \"position: relative; width: 100%; height: 100%\",\n        },\n        template({ divider: this.divider })\n      )\n    );\n    this.$track = this.$el.querySelector(\".mpui-slider-track\")!; // 滑动条轨道\n    this.$bar = this.$track.querySelector(\".mpui-slider-bar\")!; // 滑动条痕迹\n    this.$thumbTrack = this.$track.querySelector(\".mpui-slider-thumb-track\")!; // 滑块轨道\n    this.$thumb = this.$track.querySelector(\".mpui-slider-thumb\")!; // 滑块\n\n    // 滑动条事件\n    this.$el.addEventListener(\"mousedown\", (event: MouseEvent) => {\n      const e: MouseEvent = event;\n      // 鼠标X位置\n      const { clientX } = e;\n      // 滑块长度\n      const trackLength = this.$track.offsetWidth;\n      // 滑块可滑动距离\n      let nMax = this.$thumbTrack.offsetWidth;\n      nMax = nMax || trackLength;\n      // 滑块轨道与总轨道距离差\n      const thumbTrackX = (trackLength - nMax) / 2;\n      // 滑动条位置\n      const nLeft = this.$el.getBoundingClientRect().left;\n      // 计算滑块位置\n      let nLength = clientX - nLeft - thumbTrackX;\n      // 限制滑块移动位置\n      nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n      const value = this.step\n        ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step + this.min\n        : (nLength / nMax) * (this.max - this.min) + this.min;\n      // 开始滑动事件\n      this.onDragStart?.(value);\n      // 监测数据更新并执行函数\n      if (this.value != value) {\n        this.drag(value);\n      }\n\n      const mousemoveEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        // 鼠标X位置\n        const { clientX } = e;\n        // 鼠标移动时取消默认行为，避免选中其他元素或文字\n        e.preventDefault();\n        e.stopPropagation();\n        // 获取鼠标移动后滑块应该移动到的位置\n        let nLength = clientX - nLeft - thumbTrackX;\n        // 限制滑块移动位置\n        nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\n\n        const value = this.step\n          ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step +\n            this.min\n          : (nLength / nMax) * (this.max - this.min) + this.min;\n        // 监测数据更新并执行函数\n        if (this.value != value) {\n          this.drag(value);\n        }\n        window.getSelection()?.removeAllRanges();\n      };\n\n      const removeEvent = (event: MouseEvent) => {\n        const e: MouseEvent = event;\n        e.stopPropagation();\n        window.getSelection()?.removeAllRanges();\n        document.removeEventListener(\"mousemove\", mousemoveEvent);\n        document.removeEventListener(\"mouseup\", removeEvent);\n        this.onDragEnd?.(value);\n      };\n\n      document.addEventListener(\"mousemove\", mousemoveEvent);\n      document.addEventListener(\"mouseup\", removeEvent);\n    });\n\n    // 设置滑块初始位置\n    this.setValue(this.value);\n  }\n\n  /** 设置滑动条值 */\n  public setValue(value: number) {\n    this.value = value <= this.min ? this.min : value >= this.max ? this.max : value;\n    // 计算滑块位置\n    const per = (this.value - this.min) / (this.max - this.min);\n    // 修改滑块位置\n    this.$thumb.style.left = `${per * 100}%`;\n    // 修改滑动痕迹高度\n    this.$bar.style.width = `${per * 100}%`;\n    // 触发数据更改事件\n    this.onChange?.(this.value);\n  }\n\n  /** 拖动滑动条到特定的值 */\n  public drag(value: number) {\n    this.setValue(value);\n    // 触发拖动事件\n    this.onDrag?.(this.value);\n  }\n}\n","import { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div\r\n    class=\"mpui-slider-track\"\r\n    style=\"\r\n      position: absolute;\r\n      height: 100%;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center\r\n    \"\r\n  >\r\n    <div class=\"mpui-slider-bar\" style=\"position: absolute; bottom: 0; width: 100%\"></div>\r\n    <div class=\"mpui-slider-thumb-track\" style=\"width: 0px\">\r\n      <div\r\n        class=\"mpui-slider-thumb\"\r\n        style=\"position: absolute; transform: translate(-50%, -50%)\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\ninterface SliderVerticalOptions {\r\n  /** 挂载容器 */\r\n  container: HTMLElement;\r\n  /** 最小值 */\r\n  min: number;\r\n  /** 最大值 */\r\n  max: number;\r\n  /** 步长(若不填或为0，则没有步长限制) */\r\n  step?: number;\r\n  /** 默认值(不填的情况下默认值为0) */\r\n  value?: number;\r\n  /** 数值更改时触发 */\r\n  onChange?: (value: number) => void;\r\n  /** 拖动引发数值更改时触发 */\r\n  onDrag?: (value: number) => void;\r\n  /** 开始拖动时触发 */\r\n  onDragStart?: (value: number) => void;\r\n  /** 结束拖动时触发 */\r\n  onDragEnd?: (value: number) => void;\r\n}\r\n\r\n/** 横向滑动条 */\r\nexport class SliderVertical implements SliderVerticalOptions {\r\n  readonly container: HTMLElement;\r\n  readonly min: number;\r\n  readonly max: number;\r\n  /** 步长 */\r\n  readonly step: number;\r\n  /** 数值 */\r\n  value: number;\r\n  onChange?: (value: number) => void;\r\n  onDragStart?: (value: number) => void;\r\n  onDragEnd?: (value: number) => void;\r\n  onDrag?: (value: number) => void;\r\n  // 部件\r\n  $el: HTMLElement;\r\n  $track: HTMLElement;\r\n  $bar: HTMLElement;\r\n  $thumbTrack: HTMLElement;\r\n  $thumb: HTMLElement;\r\n\r\n  constructor({\r\n    container,\r\n    min,\r\n    max,\r\n    step,\r\n    value = 0,\r\n    onChange,\r\n    onDragStart,\r\n    onDragEnd,\r\n    onDrag,\r\n  }: SliderVerticalOptions) {\r\n    this.container = container;\r\n    this.min = min;\r\n    this.max = max;\r\n    this.step = step || 0;\r\n    this.value = isNaN(value) ? value : Number(value);\r\n    this.onChange = onChange;\r\n    this.onDragStart = onDragStart;\r\n    this.onDragEnd = onDragEnd;\r\n    this.onDrag = onDrag;\r\n\r\n    this.$el = createElement(\r\n      \"div\",\r\n      {\r\n        class: \"mpui-slider mpui-slider-vertical\",\r\n        style: \"position: relative; width: 100%; height: 100%\",\r\n      },\r\n      templateHTML\r\n    );\r\n    this.$track = this.$el.querySelector(\".mpui-slider-track\")!; // 滑动条轨道\r\n    this.$bar = this.$track.querySelector(\".mpui-slider-bar\")!; // 滑动条痕迹\r\n    this.$thumbTrack = this.$track.querySelector(\".mpui-slider-thumb-track\")!; // 滑块轨道\r\n    this.$thumb = this.$track.querySelector(\".mpui-slider-thumb\")!; // 滑块\r\n\r\n    this.container.appendChild(this.$el);\r\n\r\n    // 滑动条事件\r\n    // 点击鼠标事件\r\n    this.$el.addEventListener(\"mousedown\", (event: MouseEvent) => {\r\n      const e: MouseEvent = event;\r\n      // 鼠标Y位置\r\n      const { clientY } = e;\r\n      // 滑块长度\r\n      const trackLength = this.$track.offsetHeight;\r\n      // 滑块可滑动距离\r\n      let nMax = this.$thumbTrack.offsetHeight;\r\n      nMax = nMax || trackLength;\r\n      // 滑块轨道与总轨道距离差\r\n      const thumbTrackY = (trackLength - nMax) / 2;\r\n      // 滑动条位置\r\n      const nTop = this.$el.getBoundingClientRect().top;\r\n      // 计算滑块位置\r\n      let nLength = nMax - (clientY - nTop - thumbTrackY);\r\n      // 限制滑块移动位置\r\n      nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\r\n      const value = this.step\r\n        ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step + this.min\r\n        : (nLength / nMax) * (this.max - this.min) + this.min;\r\n      // 开始滑动事件\r\n      this.onDragStart?.(value);\r\n      // 监测数据更新并执行函数\r\n      if (this.value != value) {\r\n        this.drag(value);\r\n      }\r\n\r\n      const mousemoveEvent = (event: MouseEvent) => {\r\n        const e: MouseEvent = event;\r\n        // 鼠标X位置\r\n        const { clientY } = e;\r\n        // 鼠标移动时取消默认行为，避免选中其他元素或文字\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // 获取鼠标移动后滑块应该移动到的位置\r\n        let nLength = nMax - (clientY - nTop - thumbTrackY);\r\n        // 限制滑块移动位置\r\n        nLength = nLength >= nMax ? nMax : nLength <= 0 ? 0 : nLength;\r\n\r\n        const value = this.step\r\n          ? Math.round(((nLength / nMax) * (this.max - this.min)) / this.step) * this.step +\r\n            this.min\r\n          : (nLength / nMax) * (this.max - this.min) + this.min;\r\n        // 监测数据更新并执行函数\r\n        if (this.value != value) {\r\n          this.drag(value);\r\n        }\r\n        window.getSelection()?.removeAllRanges();\r\n      };\r\n      const removeEvent = (event: MouseEvent) => {\r\n        const e: MouseEvent = event;\r\n        e.stopPropagation();\r\n        window.getSelection()?.removeAllRanges();\r\n        document.removeEventListener(\"mousemove\", mousemoveEvent);\r\n        document.removeEventListener(\"mouseup\", removeEvent);\r\n        this.onDragEnd?.(value);\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", mousemoveEvent);\r\n      document.addEventListener(\"mouseup\", removeEvent);\r\n    });\r\n    // 设置滑块初始位置\r\n    this.setValue(this.value);\r\n  }\r\n\r\n  /** 设置滑动条值 */\r\n  setValue(value: number) {\r\n    // this.value = value <= this.min ? this.min : value >= this.max ? this.max : value;\r\n    this.value = Math.max(Math.min(value, this.max), this.min);\r\n    // 计算滑块位置\r\n    const per = (this.value - this.min) / (this.max - this.min);\r\n    // 修改滑块位置\r\n    this.$thumb.style.top = `${(1 - per) * 100}%`;\r\n    // 修改滑动痕迹高度\r\n    this.$bar.style.height = `${Math.max(Math.min(per, 1), 0) * 100}%`;\r\n    // 执行相应函数\r\n    this.onChange?.(value);\r\n  }\r\n\r\n  /** 拖动滑动条到特定的值 */\r\n  private drag(value: number) {\r\n    this.setValue(value);\r\n    // 触发拖动事件\r\n    this.onDrag?.(this.value);\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=window,s=i.trustedTypes,e=s?s.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,o=\"$lit$\",n=`lit$${(Math.random()+\"\").slice(9)}$`,l=\"?\"+n,h=`<${l}>`,r=document,u=()=>r.createComment(\"\"),d=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,c=Array.isArray,v=t=>c(t)||\"function\"==typeof(null==t?void 0:t[Symbol.iterator]),a=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,_=/-->/g,m=/>/g,p=RegExp(`>|${a}(?:([^\\\\s\"'>=/]+)(${a}*=${a}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),g=/'/g,$=/\"/g,y=/^(?:script|style|textarea|title)$/i,w=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=w(1),b=w(2),T=Symbol.for(\"lit-noChange\"),A=Symbol.for(\"lit-nothing\"),E=new WeakMap,C=r.createTreeWalker(r,129,null,!1);function P(t,i){if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==e?e.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,e=[];let l,r=2===i?\"<svg>\":\"\",u=f;for(let i=0;i<s;i++){const s=t[i];let d,c,v=-1,a=0;for(;a<s.length&&(u.lastIndex=a,c=u.exec(s),null!==c);)a=u.lastIndex,u===f?\"!--\"===c[1]?u=_:void 0!==c[1]?u=m:void 0!==c[2]?(y.test(c[2])&&(l=RegExp(\"</\"+c[2],\"g\")),u=p):void 0!==c[3]&&(u=p):u===p?\">\"===c[0]?(u=null!=l?l:f,v=-1):void 0===c[1]?v=-2:(v=u.lastIndex-c[2].length,d=c[1],u=void 0===c[3]?p:'\"'===c[3]?$:g):u===$||u===g?u=p:u===_||u===m?u=f:(u=p,l=void 0);const w=u===p&&t[i+1].startsWith(\"/>\")?\" \":\"\";r+=u===f?s+h:v>=0?(e.push(d),s.slice(0,v)+o+s.slice(v)+n+w):s+n+(-2===v?(e.push(void 0),i):w)}return[P(t,r+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\")),e]};class N{constructor({strings:t,_$litType$:i},e){let h;this.parts=[];let r=0,d=0;const c=t.length-1,v=this.parts,[a,f]=V(t,i);if(this.el=N.createElement(a,e),C.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(h=C.nextNode())&&v.length<c;){if(1===h.nodeType){if(h.hasAttributes()){const t=[];for(const i of h.getAttributeNames())if(i.endsWith(o)||i.startsWith(n)){const s=f[d++];if(t.push(i),void 0!==s){const t=h.getAttribute(s.toLowerCase()+o).split(n),i=/([.?@])?(.*)/.exec(s);v.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?H:\"?\"===i[1]?L:\"@\"===i[1]?z:k})}else v.push({type:6,index:r})}for(const i of t)h.removeAttribute(i)}if(y.test(h.tagName)){const t=h.textContent.split(n),i=t.length-1;if(i>0){h.textContent=s?s.emptyScript:\"\";for(let s=0;s<i;s++)h.append(t[s],u()),C.nextNode(),v.push({type:2,index:++r});h.append(t[i],u())}}}else if(8===h.nodeType)if(h.data===l)v.push({type:2,index:r});else{let t=-1;for(;-1!==(t=h.data.indexOf(n,t+1));)v.push({type:7,index:r}),t+=n.length-1}r++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){var o,n,l,h;if(i===T)return i;let r=void 0!==e?null===(o=s._$Co)||void 0===o?void 0:o[e]:s._$Cl;const u=d(i)?void 0:i._$litDirective$;return(null==r?void 0:r.constructor)!==u&&(null===(n=null==r?void 0:r._$AO)||void 0===n||n.call(r,!1),void 0===u?r=void 0:(r=new u(t),r._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Co)&&void 0!==l?l:h._$Co=[])[e]=r:s._$Cl=r),void 0!==r&&(i=S(t,r._$AS(t,i.values),r,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:r).importNode(s,!0);C.currentNode=o;let n=C.nextNode(),l=0,h=0,u=e[0];for(;void 0!==u;){if(l===u.index){let i;2===u.type?i=new R(n,n.nextSibling,this,t):1===u.type?i=new u.ctor(n,u.name,u.strings,this,t):6===u.type&&(i=new Z(n,this,t)),this._$AV.push(i),u=e[++h]}l!==(null==u?void 0:u.index)&&(n=C.nextNode(),l++)}return C.currentNode=r,o}v(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{constructor(t,i,s,e){var o;this.type=2,this._$AH=A,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cp=null===(o=null==e?void 0:e.isConnected)||void 0===o||o}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cp}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===(null==t?void 0:t.nodeType)&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),d(t)?t===A||null==t||\"\"===t?(this._$AH!==A&&this._$AR(),this._$AH=A):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):v(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==A&&d(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=N.createElement(P(e.h,e.h[0]),this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.v(s);else{const t=new M(o,this),i=t.u(this.options);t.v(s),this.$(i),this._$AH=t}}_$AC(t){let i=E.get(t.strings);return void 0===i&&E.set(t.strings,i=new N(t)),i}T(t){c(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new R(this.k(u()),this.k(u()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cp=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class k{constructor(t,i,s,e,o){this.type=1,this._$AH=A,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=A}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=S(this,t,i,0),n=!d(t)||t!==this._$AH&&t!==T,n&&(this._$AH=t);else{const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=S(this,e[s+l],i,l),h===T&&(h=this._$AH[l]),n||(n=!d(h)||h!==this._$AH[l]),h===A?t=A:t!==A&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h}n&&!e&&this.j(t)}j(t){t===A?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===A?void 0:t}}const I=s?s.emptyScript:\"\";class L extends k{constructor(){super(...arguments),this.type=4}j(t){t&&t!==A?this.element.setAttribute(this.name,I):this.element.removeAttribute(this.name)}}class z extends k{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=S(this,t,i,0))&&void 0!==s?s:A)===T)return;const e=this._$AH,o=t===A&&e!==A||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==A&&(e===A||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class Z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const j={O:o,P:n,A:l,C:1,M:V,L:M,R:v,D:S,I:R,V:k,H:L,N:z,U:H,F:Z},B=i.litHtmlPolyfillSupport;null==B||B(N,R),(null!==(t=i.litHtmlVersions)&&void 0!==t?t:i.litHtmlVersions=[]).push(\"2.8.0\");const D=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new R(i.insertBefore(u(),t),t,void 0,null!=s?s:{})}return l._$AI(t),l};export{j as _$LH,x as html,T as noChange,A as nothing,D as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import { html, render, TemplateResult } from \"lit-html\";\r\n\r\nconst templateWrap = ({\r\n  list,\r\n  template,\r\n}: {\r\n  list: PickerOptionsItem[];\r\n  template?: PickerItemTemplate;\r\n}) => html`\r\n  <ul class=\"mpui-picker\">\r\n    ${list.map(\r\n      (item, index) => html`\r\n        <li class=\"mpui-picker-item\" data-value=\"${item.value}\">\r\n          ${template?.(item, index) || item.label || item.value}\r\n        </li>\r\n      `\r\n    )}\r\n  </ul>\r\n`;\r\n\r\n/** 选择器函数 */\r\ntype PickerItemTemplate = (item: PickerOptionsItem, index?: number) => string | TemplateResult;\r\n\r\ninterface PickerOptionsItem {\r\n  value: string | number;\r\n  label?: string;\r\n  disabled?: boolean;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface PickerOptions {\r\n  /** 挂载容器 */\r\n  container: HTMLElement;\r\n  /** 选择列表 */\r\n  list: PickerOptionsItem[];\r\n  /** 选择项标签模板 */\r\n  template?: PickerItemTemplate;\r\n  /** 默认值(不填的情况下默认值为undefined) */\r\n  value?: string | number;\r\n  /** 值更改时触发 */\r\n  onChange?: (value?: string | number) => void;\r\n  /** 选择某一项时触发 */\r\n  onPick?: (value?: string | number) => void;\r\n  /** 相等条件 */\r\n  condition?: (item: string, value?: string | number) => boolean;\r\n}\r\n\r\n/** 单选选择器 */\r\nexport class Picker implements PickerOptions {\r\n  readonly container: HTMLElement;\r\n\r\n  readonly template?: PickerItemTemplate;\r\n\r\n  list: PickerOptionsItem[];\r\n\r\n  /** 已选值 */\r\n  value?: string | number;\r\n\r\n  onChange?: (value?: string | number) => void;\r\n\r\n  onPick?: (value?: string | number) => void;\r\n\r\n  $el!: HTMLElement;\r\n\r\n  /** 相等条件 */\r\n  condition?: (item: string, value?: string | number) => boolean;\r\n\r\n  /** 选择项标签集合 */\r\n  private $items!: NodeListOf<HTMLElement>;\r\n\r\n  constructor({ container, value, onChange, onPick, list, template, condition }: PickerOptions) {\r\n    this.container = container;\r\n    this.list = list;\r\n    this.value = value;\r\n    this.onChange = onChange; // 更新数据时需要执行的函数\r\n    this.onPick = onPick; // 更新数据时需要执行的函数\r\n    this.template = template;\r\n    this.condition = condition;\r\n    this.reload();\r\n  }\r\n\r\n  /** 重载，一般用于列表项更改 */\r\n  public reload(value?: string | number) {\r\n    render(templateWrap({ list: this.list, template: this.template }), this.container);\r\n    this.$el = this.container.querySelector(\".mpui-picker\")!;\r\n    this.$items = this.$el.querySelectorAll(\".mpui-picker-item\"); // 标签集合\r\n    this.$items.forEach((item) => {\r\n      item.addEventListener(\"click\", () => {\r\n        this.pick(item.getAttribute(\"data-value\") || undefined);\r\n      });\r\n    });\r\n    this.setValue(value ?? this.value);\r\n  }\r\n\r\n  /** 设置值 */\r\n  public setValue(value?: string | number) {\r\n    this.$items.forEach((n, i) => {\r\n      if (\r\n        this.condition\r\n          ? this.condition(n.getAttribute(\"data-value\")!, value)\r\n          : n.getAttribute(\"data-value\") == value\r\n      ) {\r\n        n.classList.add(\"is-checked\");\r\n      } else {\r\n        n.classList.remove(\"is-checked\");\r\n      }\r\n    });\r\n    this.value = value;\r\n    this.onChange?.(value);\r\n  }\r\n\r\n  /** 点选一个选项 */\r\n  public pick(value?: string) {\r\n    this.setValue(value);\r\n    this.onPick?.(value);\r\n  }\r\n}\r\n","import { html, render, TemplateResult } from \"lit-html\";\r\n\r\nconst templateWrap = ({\r\n  list,\r\n  template,\r\n}: {\r\n  list: PickerOptionsItem[];\r\n  template?: PickerItemTemplate;\r\n}) => html`\r\n  <ul class=\"mpui-picker\">\r\n    ${list.map(\r\n      (item, index) => html`\r\n        <li class=\"mpui-picker-item\" data-value=\"${item.value}\">\r\n          ${template?.(item, index) || item.label || item.value}\r\n        </li>\r\n      `\r\n    )}\r\n  </ul>\r\n`;\r\n\r\n/** 选择器函数 */\r\ntype PickerItemTemplate = (item: PickerOptionsItem, index?: number) => string | TemplateResult;\r\n\r\ninterface PickerOptionsItem {\r\n  value: string;\r\n  label?: string;\r\n  disabled?: boolean;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface MultiPickerOptions {\r\n  /** 绑定的dom对象 */\r\n  container: HTMLElement;\r\n  /** 选择列表 */\r\n  list: PickerOptionsItem[];\r\n  /** 选择项标签模板 */\r\n  template?: PickerItemTemplate;\r\n  /** 默认值(不填的情况下默认值为[]) */\r\n  value?: string[];\r\n  /** 值更改时触发 */\r\n  onChange?: (value: string[]) => void;\r\n  /** 选择/取消选择某一项时触发 */\r\n  onToggle?: (value: string, flag: boolean) => void;\r\n}\r\n\r\n/** 多项选择器 */\r\nexport class MultiPicker implements MultiPickerOptions {\r\n  readonly container: HTMLElement;\r\n\r\n  readonly template?: PickerItemTemplate;\r\n\r\n  list: PickerOptionsItem[];\r\n\r\n  valueSet: Set<string>;\r\n\r\n  /** 已选值 */\r\n  get value() {\r\n    return [...this.valueSet];\r\n  }\r\n\r\n  onChange?: (value: string[]) => void;\r\n\r\n  onToggle?: (value: string, flag: boolean) => void;\r\n\r\n  $el!: HTMLElement;\r\n\r\n  /** 选择项标签集合 */\r\n  private $items!: NodeListOf<HTMLElement>;\r\n\r\n  constructor({ container, value = [], list, onChange, onToggle }: MultiPickerOptions) {\r\n    this.container = container;\r\n    this.list = list;\r\n    this.valueSet = new Set(value);\r\n    this.onChange = onChange; // 更新数据时需要执行的函数\r\n    this.onToggle = onToggle; // 更新数据时需要执行的函数\r\n    this.reload();\r\n  }\r\n\r\n  /** 重载，一般用于列表项更改 */\r\n  public reload(value?: string[]) {\r\n    render(templateWrap({ list: this.list, template: this.template }), this.container);\r\n    this.$el = this.container.querySelector(\".mpui-picker\")!;\r\n    this.$items = this.$el.querySelectorAll(\".mpui-picker-item\"); // 标签集合\r\n    this.$items.forEach((item) => {\r\n      item.addEventListener(\"click\", () => {\r\n        this.toggle(item.getAttribute(\"data-value\")!);\r\n      });\r\n    });\r\n    this.setValue(value ?? this.value);\r\n  }\r\n\r\n  /** 设置值 */\r\n  public setValue(value: string[]) {\r\n    this.valueSet = new Set(value);\r\n    this.$items.forEach((n, i) => {\r\n      if (this.valueSet.has(n.getAttribute(\"data-value\")!)) {\r\n        n.classList.add(\"is-checked\");\r\n      } else {\r\n        n.classList.remove(\"is-checked\");\r\n      }\r\n    });\r\n    this.onChange?.(value);\r\n  }\r\n\r\n  /** 切换一个选项的选择状态 */\r\n  public toggle(value: string, flag?: boolean) {\r\n    const b = flag == null ? !this.valueSet.has(value) : flag;\r\n    if (b) {\r\n      this.valueSet.add(value);\r\n    } else {\r\n      this.valueSet.delete(value);\r\n    }\r\n    this.$items.forEach((n, i) => {\r\n      if (n.getAttribute(\"data-value\") == value) {\r\n        n.classList.toggle(\"is-checked\", b);\r\n      }\r\n    });\r\n    this.onChange?.(this.value);\r\n    this.onToggle?.(value, b);\r\n  }\r\n}\r\n","import { createElement } from \"@/utils\";\r\n\r\ninterface SwitchOptions {\r\n  /** 挂载容器 */\r\n  container: HTMLElement;\r\n  /** 标签 */\r\n  label?: string;\r\n  /** 不可点选 */\r\n  disabled?: boolean;\r\n  /** 默认值(不填的情况下默认值为false) */\r\n  value?: boolean;\r\n  /** 值更改时触发 */\r\n  onChange?: (value: boolean) => void;\r\n  /** 切换状态时触发 */\r\n  onToggle?: (value: boolean) => void;\r\n}\r\n\r\n/** 开关 */\r\nexport class Switch implements SwitchOptions {\r\n  readonly container: HTMLElement;\r\n\r\n  onChange?: (value: boolean) => void;\r\n\r\n  onToggle?: (value: boolean) => void;\r\n\r\n  label?: string;\r\n\r\n  /** 当前值 */\r\n  value: boolean;\r\n\r\n  $el: HTMLElement;\r\n\r\n  constructor({ container, value = false, onChange, onToggle }: SwitchOptions) {\r\n    this.container = container;\r\n    this.value = value;\r\n    this.onChange = onChange; // 更新数据时需要执行的函数\r\n    this.onToggle = onToggle;\r\n\r\n    this.$el = createElement(\"div\", { class: `mpui-switch` }, this.label);\r\n\r\n    this.$el = this.container.querySelector(\".mpui-switch\")!;\r\n    this.$el.addEventListener(\"click\", () => {\r\n      this.toggle(!this.value);\r\n    });\r\n\r\n    this.setValue(this.value);\r\n  }\r\n\r\n  /** 设置开关状态 */\r\n  public setValue(value: boolean) {\r\n    this.value = value;\r\n    this.$el.classList.toggle(\"is-checked\", value);\r\n    this.onChange?.(value);\r\n  }\r\n\r\n  /** 点按开关 */\r\n  public toggle(value = !this.value) {\r\n    this.setValue(value);\r\n    this.onToggle?.(value);\r\n  }\r\n}\r\n","import { createElement } from \"@/utils\";\r\n\r\ninterface CheckboxOptions {\r\n  /** 挂载容器 */\r\n  container: HTMLElement;\r\n  /** 标签 */\r\n  label?: string;\r\n  /** 不可点选 */\r\n  disabled?: boolean;\r\n  /** 默认值(不填的情况下默认值为false) */\r\n  value?: boolean;\r\n  /** 值更改时触发 */\r\n  onChange?: (value: boolean) => void;\r\n  /** 切换状态时触发 */\r\n  onToggle?: (value: boolean) => void;\r\n}\r\n\r\n/** 开关 */\r\nexport class Checkbox implements CheckboxOptions {\r\n  readonly container: HTMLElement;\r\n\r\n  onChange?: (value: boolean) => void;\r\n\r\n  onToggle?: (value: boolean) => void;\r\n\r\n  label?: string;\r\n\r\n  /** 当前值 */\r\n  value: boolean;\r\n\r\n  $el: HTMLElement;\r\n\r\n  constructor({ container, value = false, onChange, onToggle, label }: CheckboxOptions) {\r\n    this.container = container;\r\n    this.value = value;\r\n    this.onChange = onChange; // 更新数据时需要执行的函数\r\n    this.onToggle = onToggle;\r\n    this.label = label;\r\n\r\n    this.$el = this.container.appendChild(\r\n      createElement(\r\n        \"div\",\r\n        { class: \"mpui-checkbox\" },\r\n        /*html*/ `\r\n          <div class=\"mpui-checkbox-icon\"></div>\r\n          <div class=\"mpui-checkbox-label\">${label}</div>\r\n        `\r\n      )\r\n    );\r\n\r\n    this.$el.addEventListener(\"click\", () => {\r\n      this.toggle();\r\n    });\r\n\r\n    this.setValue(this.value);\r\n  }\r\n\r\n  /** 设置开关状态 */\r\n  public setValue(value: boolean) {\r\n    this.value = value;\r\n    this.$el.classList.toggle(\"is-checked\", value);\r\n    this.onChange?.(value);\r\n  }\r\n\r\n  /** 点按开关 */\r\n  public toggle(value = !this.value) {\r\n    this.setValue(value);\r\n    this.onToggle?.(value);\r\n  }\r\n}\r\n","export { Player } from \"@/player\";\nexport * from \"@/plugin\";\nexport * from \"@/config\";\nexport * as Utils from \"@/utils\";\nexport * as Components from \"@/components\";\nimport { Player } from \"@core\";\nimport \"@css/index.scss\";\n\nconsole.log(\n  `${\"\\n\"} %c mfunsPlayer v${Player.version} ${Player.gitHash} %c https://github.com/Mfuns-cn ${\"\\n\"}${\"\\n\"}`,\n  \"color: #fff; background: #7b7ff7; padding:5px 0;\",\n  \"background: #f5f5f5; padding:5px 0;\"\n);\n","/** 虚拟列表 */\n\nexport class VirtualList<T> {\n  /** 需要绑定的DOM对象 */\n  $el: HTMLElement;\n  $content: HTMLElement;\n  /** 列表数据 */\n  data: T[] = [];\n  /** 拉取列表数据 () => Object */\n  getData: () => T[];\n  /** 列表项高度 */\n  itemHeight: number;\n  /** 列表项DOM生成函数 */\n  createItem: (item: T, i: number, array: T[]) => HTMLElement;\n  /** 溢出范围 */\n  overflow: number;\n  /** 滚动距离 */\n  scrollTop = 0;\n  /** 列表渲染起点 */\n  renderStart = -1;\n  /** 列表渲染终点 */\n  renderEnd = -1;\n  /** 可视范围起点 */\n  viewStart = 0;\n  /** 可视范围终点 */\n  viewEnd = 0;\n  /** 节流开关 */\n  throttle = false;\n  /** 已清空状态 */\n  cleared = false;\n  constructor({\n    el,\n    getData,\n    itemHeight,\n    createItem,\n    overflow = 0,\n  }: {\n    el: HTMLElement;\n    getData: () => T[];\n    itemHeight: number;\n    createItem: (item: T, i: number, array: T[]) => HTMLElement;\n    overflow?: number;\n  }) {\n    this.$el = el;\n    this.getData = getData;\n    this.itemHeight = itemHeight;\n    this.createItem = createItem;\n    this.overflow = overflow;\n\n    this.renderStart = -1;\n    this.renderEnd = -1;\n    this.viewStart = 0;\n    this.viewEnd = 0;\n    this.throttle = false;\n    this.cleared = false;\n\n    this.$el.classList.add(\"vlist-container\");\n    this.$content = document.createElement(\"div\");\n    this.$content.classList.add(\"vlist-content\");\n    this.$el.appendChild(this.$content);\n\n    this.$el.addEventListener(\"scroll\", () => {\n      this.cleared || this.handleScroll();\n    });\n\n    this.reload();\n  }\n  /** 重载列表 */\n  reload() {\n    this.clear();\n    this.data = this.getData();\n    console.log(this.data);\n    this.renderStart = -1;\n    this.renderEnd = -1;\n    this.viewStart = 0;\n    this.viewEnd = 0;\n    this.throttle = false;\n    this.handleScroll();\n    this.cleared = false;\n  }\n  /** 更新列表 */\n  update() {\n    this.data = this.getData();\n    this.handleScroll();\n  }\n  handleScroll() {\n    if (!this.throttle) {\n      const clientH = this.$el.clientHeight;\n      const scrollTop = this.$el.scrollTop;\n      clientH && (this.scrollTop = scrollTop);\n      this.viewStart = this.getViewStart(scrollTop);\n      this.viewEnd = this.getViewEnd(scrollTop, clientH);\n      if (this.viewStart <= this.renderStart || this.viewEnd >= this.renderEnd) {\n        this.render(clientH, scrollTop);\n        // console.log(`${this.renderStart} - ${this.renderEnd}`)\n      }\n      // console.log(`${scrollTop} + ${clientH} @ ${this.viewStart} - ${this.viewEnd} # ${this.renderStart} - ${this.renderEnd}`)\n    } else {\n      // console.log(\"none\")\n    }\n  }\n  render(clientH: number, scrollTop: number) {\n    // 保存原渲染范围\n    const oldRenderStart = this.renderStart;\n    const oldRenderEnd = this.renderEnd;\n    // 获取新渲染范围\n    this.renderStart = this.getViewStart(scrollTop) - this.overflow;\n    this.renderEnd = this.getViewEnd(scrollTop, clientH) + this.overflow;\n    // console.log(`old ${oldRenderStart}-${oldRenderEnd} new ${this.renderStart}-${this.renderEnd}`)\n    // 与列表前段比较\n    if (this.renderStart < oldRenderStart) {\n      // 列表前段范围扩张, 添加新列表项\n      const beforeItems = document.createDocumentFragment();\n      const addFrom = Math.max(this.renderStart, 0);\n      const addTo = Math.min(oldRenderStart - 1, this.renderEnd, this.data.length - 1);\n      // console.log(`add ${addFrom}-${addTo}`)\n      for (let i = addFrom; i <= addTo; i++) {\n        beforeItems.appendChild(this.createItem(this.data[i], i, this.data));\n        // console.log(\"add: \" + i)\n      }\n      this.$content.insertBefore(beforeItems, this.$content.firstElementChild);\n    } else {\n      // 若不扩张, 则删除多余的列表项\n      const removeFrom = Math.max(oldRenderStart, 0);\n      const removeTo = Math.min(this.renderStart - 1, oldRenderEnd);\n      // console.log(`remove ${removeFrom}-${removeTo}`)\n      for (let i = removeFrom; i <= removeTo; i++) {\n        const child = this.$content.firstElementChild;\n        child && this.$content.removeChild(child);\n      }\n    }\n\n    // 与列表后段比较\n    if (this.renderEnd > oldRenderEnd) {\n      // 列表后段范围扩张, 添加新列表项\n      const afterItems = document.createDocumentFragment();\n      const addFrom = Math.max(oldRenderEnd + 1, this.renderStart);\n      const addTo = Math.min(this.renderEnd, this.data.length - 1);\n      // console.log(`add ${addFrom}-${addTo}`)\n      for (let i = addFrom; i <= addTo; i++) {\n        afterItems.appendChild(this.createItem(this.data[i], i, this.data));\n        // console.log(\"add: \" + i)\n      }\n      this.$content.appendChild(afterItems);\n    } else {\n      // 若不扩张, 则删除多余的列表项\n      const removeFrom = Math.min(oldRenderEnd, this.data.length - 1);\n      const removeTo = Math.max(this.renderEnd + 1, oldRenderStart);\n      // console.log(`remove ${removeFrom}-${removeTo}`)\n      for (let i = removeFrom; i >= removeTo; i--) {\n        const child = this.$content.lastElementChild;\n        child && this.$content.removeChild(child);\n        // console.log(\"remove: \" + i)\n      }\n    }\n\n    // 设定占位边距\n    this.$content.style.paddingTop = `${\n      this.renderStart > 0 ? this.renderStart * this.itemHeight : 0\n    }px`;\n    this.$content.style.paddingBottom = `${\n      this.renderEnd < this.data.length - 1\n        ? (this.data.length - this.renderEnd - 1) * this.itemHeight\n        : 0\n    }px`;\n  }\n  getViewStart(scrollTop: number) {\n    return Math.floor(scrollTop / this.itemHeight);\n  }\n  getViewEnd(scrollTop: number, clientH: number) {\n    return Math.ceil((scrollTop + clientH) / this.itemHeight) - 1;\n  }\n  /** 清空列表 */\n  clear() {\n    this.data = [];\n    this.$content.innerHTML = \"\";\n    this.$content.style.paddingTop = \"0px\";\n    this.$content.style.paddingBottom = \"0px\";\n    this.cleared = true;\n  }\n  /** 开头定位到某项 */\n  locateStart(n: number) {\n    this.scrollTo(n * this.itemHeight);\n  }\n  /** 末尾定位到某项 */\n  locateEnd(n: number) {\n    this.scrollTo(n * this.itemHeight - this.$el.clientHeight);\n  }\n  /** 滚动到高度 */\n  scrollTo(top: number) {\n    this.$el.scrollTo({\n      top,\n      behavior: \"auto\",\n    });\n  }\n}\n","import { createElement, debounce, secondToTime } from \"@/utils\";\nimport { dateFormat } from \"@/utils/index\";\nimport { DanmakuItem } from \"@plugins/danmaku/types\";\nimport { Player } from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { html, render } from \"lit-html\";\nimport { VirtualList } from \"./VirtualList\";\nimport \"./style.scss\";\nimport Danmaku from \"@plugins/danmaku/danmaku\";\nimport { PanelPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@core\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    \"danmakuList:autoScrollChange\": (flag: boolean) => void;\n    \"danmakuList:select\": (dan: DanmakuItem[]) => void;\n  }\n  interface PlayerPlugins {\n    danmakuList?: DanmakuList;\n  }\n  interface PlayerOptions {\n    /** 弹幕列表设置 */\n    danmakuList?: {\n      /** 自动滚动 */\n      autoScroll: boolean;\n    };\n  }\n\n  interface PlayerSetValueMap {\n    \"danmakuList:autoScroll\": boolean;\n  }\n}\n\nconst templateHTML = /*html*/ `\n  <div class=\"${classPrefix}-danmakulist-main\">\n    <div class=\"${classPrefix}-danmakulist-head\">\n      <div class=\"list-column col-time\">时间</div>\n      <div class=\"list-column col-content\">弹幕内容</div>\n      <div class=\"list-column col-date\">发送时间</div>\n    </div>\n    <div class=\"${classPrefix}-danmakulist-select\">\n      <div class=\"${classPrefix}-danmakulist-select-info\"></div>\n      <div class=\"${classPrefix}-danmakulist-select-operate\">\n        <div class=\"list-operate-btn\" data-action=\"clearSelect\">取消选择</div>\n      </div>\n    </div>\n    <div class=\"${classPrefix}-danmakulist-container\"></div>\n    <div class=\"${classPrefix}-danmakulist-status\">\n      <div class=\"status-loading-text\">弹幕列表装填中……</div>\n      <div class=\"status-failed-text\">弹幕加载失败 X_X</div>\n      <div class=\"status-empty-text\">还没有弹幕哦，快来发弹幕^_^</div>\n    </div>\n  </div>\n  <div class=\"${classPrefix}-danmakulist-foot\">\n    <div class=\"${classPrefix}-danmakulist-foot-left\">\n      <span class=\"${classPrefix}-danmakulist-autoscroll\">列表滚动[关]</span>\n    </div>\n    <div class=\"${classPrefix}-danmakulist-foot-right\"></div>\n  </div>\n`;\n\n/** 获取弹幕列表项 @internal */\nconst getDanmakuListItem = (\n  danmaku: DanmakuItem,\n  index: number,\n  {\n    operation,\n    onClick,\n    onDblclick,\n    selected,\n    focused,\n    title,\n  }: {\n    operation: [string, (dm: DanmakuItem) => void, unknown][];\n    onClick: (e: MouseEvent) => void;\n    onDblclick: (e: MouseEvent) => void;\n    selected: boolean;\n    focused: boolean;\n    title: string;\n  }\n) => {\n  const item = createElement(\n    \"div\",\n    {\n      class: \"list-row\",\n      \"data-index\": index.toString(),\n      \"data-mode\": danmaku.mode.toString(),\n      title: title,\n    },\n    /* html */ `\n      <div class=\"list-cell col-time\">${secondToTime(danmaku.time)}</div>\n      <div class=\"list-cell col-content\">${danmaku.content}</div>\n      <div class=\"list-cell col-date\">\n        ${danmaku.date ? dateFormat(new Date(danmaku.date * 1000), \"yy-MM-dd HH:mm\") : \"-\"}\n      </div>\n    `\n  );\n  selected && item.classList.add(\"is-selected\");\n  focused && item.classList.add(\"is-focused\");\n  item.ondblclick = onDblclick;\n  item.onclick = onClick;\n\n  // 操作按钮\n  const operations = operation;\n  if (operations.length) {\n    const operationList = createElement(\"div\", { class: \"list-operate\" });\n    // 添加操作按钮\n    operations.forEach(([label, onClick, available]) => {\n      if (!available) return;\n      const operationItem = createElement(\"div\", { class: \"list-operate-btn\" }, label);\n      operationItem.onclick = (e) => {\n        e.stopPropagation();\n        onClick(danmaku);\n      };\n      operationList.appendChild(operationItem);\n    });\n    item.appendChild(operationList);\n  }\n\n  return item;\n};\n\nexport default class DanmakuList extends PanelPlugin {\n  static readonly pluginName = \"danmakuList\";\n  title = \"弹幕列表\";\n\n  danmaku: Danmaku;\n  data: DanmakuItem[] = [];\n  selected: DanmakuItem[] = [];\n  private focused: DanmakuItem | null = null;\n  sortedBy: keyof DanmakuItem = \"time\";\n  sortOrder: number = 1;\n\n  list!: VirtualList<DanmakuItem>;\n  /** 是否随播放自动滚动 */\n  autoScroll = true;\n  /** 自动滚动冻结 */\n  frozen = false;\n\n  $main: HTMLElement;\n  $container: HTMLElement;\n  $status: HTMLElement;\n  $colTime: HTMLElement;\n  $colDate: HTMLElement;\n  $colContent: HTMLElement;\n  $autoscroll: HTMLElement;\n\n  $select: HTMLElement;\n  $selectInfo: HTMLElement;\n  $clearSelect: HTMLElement;\n\n  constructor(player: Player) {\n    super(player, createElement(\"div\", { class: `${classPrefix}-danmakulist` }, templateHTML));\n    this.danmaku = player.plugins.danmaku!;\n    this.$main = this.$(`.${classPrefix}-danmakulist-main`);\n    this.$container = this.$(`.${classPrefix}-danmakulist-container`);\n    this.$status = this.$(`.${classPrefix}-danmakulist-status`);\n    this.$colTime = this.$(\".col-time\");\n    this.$colDate = this.$(\".col-date\");\n    this.$colContent = this.$(\".col-content\");\n    this.$autoscroll = this.$(`.${classPrefix}-danmakulist-autoscroll`);\n\n    this.$select = this.$(`.${classPrefix}-danmakulist-select`);\n    this.$selectInfo = this.$(`.${classPrefix}-danmakulist-select-info`);\n    this.$clearSelect = this.$(`.list-operate-btn[data-action=\"clearSelect\"]`);\n\n    this.$clearSelect.onclick = () => {\n      this.select([]);\n    };\n\n    this.$colTime.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"time\") {\n        this.sort(\"time\", -this.sortOrder);\n      } else {\n        this.sort(\"time\", 1);\n      }\n    };\n    this.$colDate.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"date\") {\n        this.sort(\"date\", -this.sortOrder);\n      } else {\n        this.sort(\"date\", 1);\n      }\n    };\n    this.$colContent.onclick = () => {\n      this.setAutoScroll(false);\n      if (this.sortedBy == \"content\") {\n        this.sort(\"content\", -this.sortOrder);\n      } else {\n        this.sort(\"content\", 1);\n      }\n    };\n    this.$autoscroll.onclick = () => {\n      this.setAutoScroll(!this.autoScroll);\n      this.player.emit(\"setValue\", \"danmakuList:autoScroll\", !this.autoScroll);\n    };\n    this.player.on(\"danmakuList:autoScrollChange\", (flag) => {\n      if (flag) {\n        this.$autoscroll.innerText = \"列表滚动[开]\";\n      } else {\n        this.$autoscroll.innerText = \"列表滚动[关]\";\n      }\n    });\n    if (this.autoScroll) {\n      this.player.emit(\"danmakuList:autoScrollChange\", true);\n    }\n    this.player.on(\"danmakuList:select\", (dm) => {\n      const num = dm.length;\n      this.$selectInfo.innerText = num ? `已选择${num}条弹幕` : \"\";\n      this.$select.classList.toggle(\"is-show\", num > 1);\n    });\n  }\n  mount(\n    el: HTMLElement,\n    opt?: { onToggle?: ((flag: boolean) => void) | undefined; onUnmount?: (() => void) | undefined }\n  ): void {\n    super.mount(el, opt);\n    const pos = this.list?.scrollTop;\n    console.log(\"mountpos: \" + pos);\n    requestAnimationFrame(() => {\n      pos != null && this.list?.scrollTo(pos);\n      -this.autoScroll && this.locateByTime(this.player.currentTime);\n    });\n  }\n  toggle(flag?: boolean | undefined): void {\n    super.toggle(flag);\n    if (this.shown) {\n      const pos = this.list?.scrollTop;\n      pos != null && this.list?.scrollTo(pos);\n      this.autoScroll && this.locateByTime(this.player.currentTime);\n    }\n  }\n  init() {\n    const invokes = this.player.invokes;\n    const operate = this.plugins.danmakuOperate;\n    this.list = new VirtualList({\n      el: this.$container,\n      getData: () => {\n        return this.data;\n      },\n      itemHeight: 24,\n      createItem: (danmaku, i) =>\n        getDanmakuListItem(danmaku, i, {\n          operation: ((dm) => {\n            const myDanmaku = this.player.userId && dm.user == this.player.userId;\n            return [\n              [\n                \"举报\",\n                () => {\n                  operate?.report(dm);\n                },\n                !myDanmaku && invokes?.danmakuReport,\n              ],\n              [\n                \"屏蔽\",\n                (dm: DanmakuItem) => {\n                  operate?.blockUser(dm.user, true);\n                },\n                !myDanmaku && invokes?.danmakuBlockUser,\n              ],\n              [\n                \"撤回\",\n                (dm: DanmakuItem) => {\n                  operate?.recall(dm);\n                },\n                myDanmaku && invokes?.danmakuRecall,\n              ],\n            ].filter((v) => v[2]) as [string, (dm: DanmakuItem) => void, unknown][];\n          })(danmaku),\n          onClick: (e) => {\n            this.clickSelect(danmaku, e.shiftKey, e.ctrlKey);\n          },\n          onDblclick: () => {\n            this.player.seek(danmaku.time);\n          },\n          selected: this.selected.includes(danmaku),\n          focused: this.focused == danmaku,\n          title: `${danmaku.content}\\n${\n            danmaku.date ? dateFormat(new Date(danmaku.date * 1000), \"yyyy-MM-dd HH:mm:ss\") : \"--\"\n          } @ ${secondToTime(danmaku.time, 0b0010)}`,\n        }),\n      overflow: 5,\n    });\n\n    const unFreeze = debounce(() => {\n      this.frozen = false;\n    }, 5000);\n    this.list.$el.addEventListener(\"wheel\", () => {\n      this.frozen = true;\n      unFreeze();\n    });\n    this.list.$el.addEventListener(\"mousedown\", () => {\n      this.frozen = true;\n      unFreeze();\n    });\n    this.$main.addEventListener(\"mouseleave\", () => {\n      this.frozen = false;\n    });\n    // 切换到新分P时，清空上一P弹幕\n    this.player.on(\"videoChange\", () => {\n      this.clear();\n    });\n    this.player.on(\"danmaku:add\", (dan) => {\n      this.fill(dan);\n      if (this.autoScroll) {\n        this.sort(\"time\");\n      }\n    });\n    this.player.on(\"timeupdate\", (time) => {\n      if (this.autoScroll && !this.frozen) {\n        this.locateByTime(time);\n      }\n    });\n    this.player.on(\"danmaku:select\", (dan) => {\n      this.locateByDanmaku(dan);\n      this.select([dan]);\n    });\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this.setAutoScroll(!!options.danmakuList?.autoScroll);\n  }\n  /** 弹幕列表排序 */\n  sort(sortedBy: keyof DanmakuItem, sortOrder = 1) {\n    this.sortedBy = sortedBy;\n    this.sortOrder = sortOrder;\n    this.data.sort((a: any, b: any) => {\n      const at = a[this.sortedBy];\n      const bt = b[this.sortedBy];\n      // 排序\n      return at > bt ? sortOrder : at == bt ? 0 : -sortOrder;\n    });\n    this.list.reload();\n  }\n  /** 装填弹幕(重载列表) */\n  fill(dan: DanmakuItem[]) {\n    this.data = this.data.concat(dan);\n    // 弹幕列表装填\n    if (!this.data.length) {\n      this.setStatus(\"empty\");\n    } else {\n      this.reload();\n      this.setStatus();\n    }\n  }\n  /** 添加弹幕(不重载列表) */\n  add(dan: DanmakuItem[]) {\n    this.data = this.data.concat(dan);\n    // 弹幕列表装填\n    if (!this.data.length) {\n      this.setStatus(\"empty\");\n    } else {\n      this.list.update();\n      this.setStatus();\n    }\n  }\n  /** 重载弹幕列表 */\n  reload() {\n    this.sort(this.sortedBy, this.sortOrder);\n    if (this.autoScroll) {\n      this.locateByTime(this.player.currentTime);\n    }\n  }\n  clear() {\n    // 清空弹幕列表\n    this.list.clear();\n    this.data = [];\n    this.setStatus(\"loading\");\n  }\n  setStatus(status = \"\") {\n    this.$status.dataset.status = status;\n    console.log(\"弹幕加载状态\" + status);\n  }\n  /** 根据播放时间定位 */\n  locateByTime(time: number) {\n    let viewEnd = this.list.viewEnd;\n    if (this.data[viewEnd]?.time > time) {\n      // 如果列表可视区域最后一项的时间超过当前时间, 则重头开始遍历, 否则从列表可视区域最后一项遍历\n      viewEnd = 0;\n    }\n    while (this.data[viewEnd + 1]?.time <= time) {\n      // 遍历并检测下一项弹幕时间是否超过当前时间, 若超过, 则以当前弹幕为定位点\n      viewEnd++;\n    }\n    this.list.locateEnd(viewEnd);\n  }\n  /** 定位弹幕 */\n  locateByDanmaku(dan: DanmakuItem) {\n    const index = this.data.indexOf(dan);\n    if (index > -1) {\n      this.list.locateStart(index);\n      this.frozen = true;\n    }\n  }\n  setAutoScroll(flag: boolean) {\n    this.player.emit(\"danmakuList:autoScrollChange\", flag);\n    // 设置自动滚动\n    this.autoScroll = flag;\n    if (flag) {\n      this.frozen = false;\n      this.sort(\"time\");\n      this.locateByTime(this.player.currentTime);\n      this.list.handleScroll();\n    }\n  }\n  /** 设置选定状态 */\n  select(dan: DanmakuItem[], focused?: DanmakuItem) {\n    this.selected = dan;\n    const selectedIndex: number[] = [];\n    this.focused = focused || (dan.length == 1 ? dan[0] : null);\n    const focusedIndex = this.data.indexOf(this.focused!);\n    dan.forEach((dm) => {\n      const index = this.data.indexOf(dm);\n      selectedIndex.push(index);\n    });\n    for (const item of this.list.$content.children) {\n      item.classList.toggle(\n        \"is-selected\",\n        selectedIndex.includes(Number((item as HTMLElement).dataset.index))\n      );\n      item.classList.toggle(\n        \"is-focused\",\n        focusedIndex == Number((item as HTMLElement).dataset.index)\n      );\n    }\n    this.player.emit(\"danmakuList:select\", this.selected);\n  }\n  /** 设置某条弹幕的选定状态，若选定则聚焦弹幕，否则取消聚焦 */\n  private toggleSelect(dm: DanmakuItem, flag: boolean) {\n    const focusedItem = this.list.$content.querySelector(\n      `[data-index=\"${this.data.indexOf(this.focused!)}\"]`\n    );\n    const item = this.list.$content.querySelector(`[data-index=\"${this.data.indexOf(dm)}\"]`);\n    if (flag) {\n      if (!this.selected.includes(dm)) {\n        this.selected.push(dm);\n      }\n      this.focused = dm;\n      item?.classList.add(\"is-selected\");\n      item?.classList.add(\"is-focused\");\n    } else if (!flag) {\n      const index = this.selected.indexOf(dm);\n      if (index > -1) {\n        this.selected.splice(index, 1);\n      }\n      item?.classList.remove(\"is-selected\");\n      focusedItem?.classList.remove(\"is-focused\");\n    }\n    this.player.emit(\"danmakuList:select\", this.selected);\n  }\n  /** 单击选定弹幕 */\n  private clickSelect(dm: DanmakuItem, shift?: boolean, ctrl?: boolean) {\n    if (shift) {\n      // 按住shift，则以已聚焦弹幕到当前选择弹幕范围选定弹幕，若无已聚焦弹幕，则只选定该弹幕\n      // 该操作既不会取消选择已选弹幕，也不会重新设定已存在的聚焦弹幕\n      if (this.focused) {\n        const index = this.data.indexOf(dm);\n        const focusedIndex = this.data.indexOf(this.focused!);\n        if (index == -1 || focusedIndex == -1) {\n          // 若弹幕列表中没有该弹幕，或未设定已聚焦弹幕，则只选定该弹幕\n          this.select([dm]);\n        } else {\n          const from = index < focusedIndex ? index : focusedIndex;\n          const to = (index < focusedIndex ? focusedIndex : index) + 1;\n          this.select(this.data.slice(from, to), this.focused);\n        }\n      } else {\n        this.select([dm]);\n      }\n    } else if (ctrl) {\n      // 按住ctrl，则将该条弹幕添加到已选择弹幕中，若该弹幕已选择，则移除选择\n      // 选定弹幕时设定聚焦状态，移除选择时移除聚焦状态\n      this.toggleSelect(dm, !this.selected.includes(dm));\n    } else {\n      // 如果该弹幕是唯一一条已选择弹幕，则清除选择，否则选择该条弹幕\n      if (this.selected.length == 1 && this.selected[0] == dm) {\n        this.select([]);\n      } else {\n        this.select([dm]);\n      }\n    }\n  }\n}\n","import { Checkbox } from \"@/components\";\r\nimport { Player } from \"@/player\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { BasePlugin } from \"@/plugin\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerEventMap {\r\n    /** 视频黑边 */\r\n    blackBorderChange: (flag: boolean) => void;\r\n  }\r\n  interface PlayerOptions {\r\n    /** 视频黑边 */\r\n    blackBorder?: boolean;\r\n    /** 视频黑边边距 */\r\n    blackBorderPadding?: string;\r\n  }\r\n  interface PlayerSetValueMap {\r\n    /** 视频黑边 */\r\n    blackBorder: boolean;\r\n  }\r\n}\r\n\r\n/** 视频黑边 */\r\n\r\nexport default class BlackBorder extends BasePlugin {\r\n  static pluginName = \"blackBorder\";\r\n  padding: string = \"\";\r\n  checkbox?: Checkbox;\r\n  constructor(player: Player) {\r\n    super(player);\r\n    if (player.plugins.buttonSettings) {\r\n      const container = document.createElement(\"div\");\r\n      this.checkbox = new Checkbox({\r\n        container,\r\n        value: !this.status,\r\n        onToggle: (val) => {\r\n          this.toggle(!val);\r\n          this.player.emit(\"setValue\", \"blackBorder\", !val);\r\n        },\r\n        label: \"隐藏黑边\",\r\n      });\r\n      player.plugins.settings?.$others.appendChild(container);\r\n    }\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this.padding = options.blackBorderPadding || \"8px\";\r\n    if (options.blackBorder) this.toggle(true);\r\n  }\r\n  toggle(v: boolean) {\r\n    if (v) {\r\n      this.player.$content.style.setProperty(\"--padding\", this.padding);\r\n    } else {\r\n      this.player.$content.style.setProperty(\"--padding\", \"\");\r\n    }\r\n    this.player.emit(\"blackBorderChange\", v);\r\n  }\r\n  get status() {\r\n    return !!this.player.$content.style.getPropertyValue(\"--padding\");\r\n  }\r\n}\r\n","import type { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    /** 是否为宽屏模式 */\r\n    isWidescreen?: boolean;\r\n    /** 进入宽屏模式 */\r\n    enterWidescreen?: () => void;\r\n    /** 退出宽屏模式 */\r\n    exitWidescreen?: () => void;\r\n  }\r\n}\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerOptions {\r\n    widescreen?: boolean;\r\n  }\r\n  interface PlayerInvokes {\r\n    widescreenToggle?: (flag: boolean) => void;\r\n  }\r\n  interface PlayerEventMap {\r\n    widescreenEnter: () => void;\r\n    widescreenExit: () => void;\r\n  }\r\n  interface PlayerPlugins {\r\n    widescreen?: Widescreen;\r\n  }\r\n}\r\n\r\n/** 宽屏模式插件 */\r\n\r\nexport default class Widescreen extends BasePlugin {\r\n  static readonly pluginName = \"widescreen\";\r\n  get invokeToggle() {\r\n    return this.player.invokes.widescreenToggle;\r\n  }\r\n\r\n  init() {\r\n    // --- 绑定属性 --- //\r\n\r\n    this.player.define(\"isWidescreen\", {\r\n      get: () => this.status,\r\n    });\r\n    this.player.define(\"enterWidescreen\", () => this.enter());\r\n    this.player.define(\"exitWidescreen\", () => this.exit());\r\n  }\r\n\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    options.widescreen && this.enter();\r\n  }\r\n\r\n  enter() {\r\n    if (this.status) return;\r\n    this.player.$el.classList.add(\"is-widescreen\");\r\n    this.invokeToggle?.(true);\r\n    this.player.emit(\"widescreenEnter\");\r\n  }\r\n  exit() {\r\n    if (!this.status) return;\r\n    this.player.$el.classList.remove(\"is-widescreen\");\r\n    this.invokeToggle?.(false);\r\n    this.player.emit(\"widescreenExit\");\r\n  }\r\n  get status() {\r\n    return this.player.$el.classList.contains(\"is-widescreen\");\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-play\"></i>\r\n    <i class=\"mpicon-pause\"></i>\r\n  </div>\r\n  <div class=\"mpui-tooltip\">播放</div>\r\n`;\r\n\r\nexport default class ButtonPlay extends ControlsPlugin {\r\n  static pluginName = \"buttonPlay\";\r\n\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-play is-paused` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"pause\", () => {\r\n      this._change(false);\r\n    });\r\n    this.player.on(\"play\", () => {\r\n      this._change(true);\r\n    });\r\n    this.player.on(\"videoChange\", () => {\r\n      this._change(false);\r\n    });\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      this.player.paused ? this.player.play() : this.player.pause();\r\n    });\r\n  }\r\n  /** 设置按钮状态 */\r\n  private _change(flag: boolean) {\r\n    this.$el.classList.toggle(\"is-on\", flag);\r\n    this.$tooltip.innerText = flag ? \"暂停\" : \"播放\";\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-prev\"></i>\r\n  </div>\r\n  <div class=\"mpui-tooltip\">上一P</div>\r\n`;\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerOptions {\r\n    /** 视频切换按钮 */\r\n    switchButton?: {\r\n      /** 自动隐藏按钮，默认值为false */\r\n      autoHide?: boolean;\r\n      /** 只有一个视频时，隐藏所有切换按钮，默认值为true */\r\n      singleHide?: boolean;\r\n    };\r\n  }\r\n}\r\n\r\nexport default class ButtonPrev extends ControlsPlugin {\r\n  static pluginName = \"buttonPrev\";\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  /** 只有单个视频时，隐藏所有切换按钮 */\r\n  singleHide: boolean = true;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        {\r\n          class: `${classPrefix}-controls-button ${classPrefix}-button-prev is-autohide is-disabled`,\r\n        },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n  }\r\n\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this.singleHide = options.switchButton?.singleHide ?? true;\r\n  }\r\n\r\n  init() {\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      this.player.prev();\r\n    });\r\n    this.player.on(\"videoChange\", (info) => {\r\n      const { hasNext, hasPrev } = info;\r\n      this.setDisabled(!hasPrev);\r\n      this.$el.classList.toggle(\"is-hidden\", this.singleHide && !hasPrev && !hasNext);\r\n    });\r\n  }\r\n  setDisabled(flag: boolean) {\r\n    this.$el.classList.toggle(\"is-disabled\", flag);\r\n  }\r\n  /** 自动隐藏上一个/下一个按钮 */\r\n  setAutoHide(flag: boolean) {\r\n    this.$el.classList.toggle(\"is-autohide\", flag);\r\n  }\r\n  get disabled() {\r\n    return this.$el.classList.contains(\"is-disabled\");\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { PlayerOptions } from \"@/types\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\nconst templateHTML = /*html*/ `\n  <div class=\"${classPrefix}-controls-button-icon\">\n    <i class=\"mpicon-next\"></i>\n  </div>\n  <div class=\"mpui-tooltip\">下一P</div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    /** 视频切换按钮 */\n    switchButton?: {\n      /** 自动隐藏按钮，默认值为false */\n      autoHide?: boolean;\n      /** 只有一个视频时，隐藏所有切换按钮，默认值为true */\n      singleHide?: boolean;\n    };\n  }\n}\n\nexport default class ButtonNext extends ControlsPlugin {\n  static pluginName = \"buttonNext\";\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n\n  /** 只有单个视频时，隐藏所有切换按钮 */\n  singleHide: boolean = true;\n\n  constructor(player: Player) {\n    super(\n      player,\n      createElement(\n        \"div\",\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-next` },\n        templateHTML\n      )\n    );\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\n    this.$tooltip = this.$(\".mpui-tooltip\");\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    this.singleHide = options.switchButton?.singleHide ?? true;\n  }\n\n  init(player: Player) {\n    this.$icon.addEventListener(\"click\", () => {\n      this.player.next();\n    });\n    this.player.on(\"videoChange\", (info) => {\n      const { hasNext, hasPrev } = info;\n      this.setDisabled(!hasNext);\n      this.$el.classList.toggle(\"is-hidden\", this.singleHide && !hasPrev && !hasNext);\n    });\n  }\n\n  setDisabled(flag: boolean) {\n    this.$el.classList.toggle(\"is-disabled\", flag);\n  }\n  /** 自动隐藏上一个/下一个按钮 */\n  setAutoHide(flag: boolean) {\n    this.$el.classList.toggle(\"is-autohide\", flag);\n  }\n  get disabled() {\n    return this.$el.classList.contains(\"is-disabled\");\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport { Player } from \"@/player\";\nimport { createElement, secondToTime, timeToSecond } from \"@/utils\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst templateHTML = /*html*/ `\n  <div class=\"${classPrefix}-videotime-label\">\n    <span class=\"${classPrefix}-videotime-current\">00:00</span>\n    <span class=\"${classPrefix}-videotime-divider\">/</span>\n    <span class=\"${classPrefix}-videotime-total\">00:00</span>\n  </div>\n  <input class=\"${classPrefix}-videotime-input mpui-input\" />\n`;\n\nexport default class VideoTime extends ControlsPlugin {\n  static pluginName = \"videoTime\";\n\n  $label: HTMLElement;\n  $current: HTMLElement;\n  $total: HTMLElement;\n  $input: HTMLInputElement;\n  /** 点按时的值 */\n  private valueBeforeEdited = \"\";\n  private timeFormat = 0b0010;\n\n  constructor(player: Player) {\n    super(player, createElement(\"div\", { class: `${classPrefix}-videotime` }, templateHTML));\n    this.$label = this.$(`.${classPrefix}-videotime-label`);\n    this.$current = this.$(`.${classPrefix}-videotime-current`);\n    this.$total = this.$(`.${classPrefix}-videotime-total`);\n    this.$input = this.$(`.${classPrefix}-videotime-input`);\n  }\n\n  init() {\n    this.player.on(\"timeupdate\", (time) => {\n      this.$current.innerText = this.format(time);\n    });\n    this.player.on(\"seeking\", (time) => {\n      this.$current.innerText = this.format(time);\n    });\n    this.player.on(\"durationchange\", (time) => {\n      // 如果视频总时长>1小时，则采用00:00:00格式，否则采用00:00格式\n      this.timeFormat = time > 3600 ? 0b0100 : 0b0010;\n      this.$total.innerText = this.format(time);\n    });\n    this.$label.addEventListener(\"click\", () => {\n      this.$el.classList.add(\"is-input\");\n      this.$input.value = this.format(this.player.currentTime);\n      this.valueBeforeEdited = this.$input.value;\n      this.$input.focus();\n    });\n    this.$input.addEventListener(\"blur\", () => {\n      const inputVal = this.$input.value;\n      if (inputVal != this.valueBeforeEdited) {\n        // 如果输入值有改动，则跳转\n        this.player.seek(timeToSecond(inputVal));\n        this.player.play();\n      }\n      this.exitInput();\n    });\n    this.$input.addEventListener(\"keydown\", (event) => {\n      const e = event || window.event;\n      if (e.keyCode == 13) {\n        this.player.seek(timeToSecond(this.$input.value));\n        this.player.play();\n        this.exitInput();\n      }\n      if (e.keyCode == 27) {\n        this.exitInput();\n      }\n    });\n  }\n\n  /** 退出输入模式 */\n  exitInput() {\n    this.$el.classList.remove(\"is-input\");\n    this.$input.value = \"\";\n    this.valueBeforeEdited = \"\";\n  }\n\n  /** 格式化时间 */\n  protected format(time: number) {\n    return secondToTime(time, this.timeFormat);\n  }\n}\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-loop-off\"></i>\r\n    <i class=\"mpicon-loop\"></i>\r\n  </div>\r\n  <div class=\"mpui-tooltip\">洗脑循环</div>\r\n`;\r\n\r\nexport default class ButtonLoop extends ControlsPlugin {\r\n  static pluginName = \"buttonLoop\";\r\n\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-loop` },\r\n        templateHTML\r\n      )\r\n    );\r\n\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"loopChange\", (flag) => {\r\n      this.$el.classList.toggle(\"is-on\", flag);\r\n      this.$tooltip.innerText = flag ? \"关闭洗脑循环\" : \"洗脑循环\";\r\n    });\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      if (this.player.loop) {\r\n        this.player.setLoop(false);\r\n      } else {\r\n        this.player.setLoop(true);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\nconst templateHTML = /*html*/ `\n  <div class=\"${classPrefix}-controls-button-icon\">\n    <div class=\"${classPrefix}-controls-button-text\">P0</div>\n  </div>\n  <div class=\"mpui-tooltip\">分P列表</div>\n`;\n\nexport default class ButtonPart extends ControlsPlugin {\n  static pluginName = \"buttonPart\";\n\n  $icon: HTMLElement;\n  $text: HTMLElement;\n  $tooltip: HTMLElement;\n\n  constructor(player: Player) {\n    super(\n      player,\n      createElement(\n        \"div\",\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-part` },\n        templateHTML\n      )\n    );\n\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\n    this.$text = this.$(`.${classPrefix}-controls-button-text`);\n    this.$tooltip = this.$(\".mpui-tooltip\");\n  }\n\n  init() {\n    this.$icon.addEventListener(\"click\", () => {\n      this.plugins.partList?.toggle();\n    });\n    this.player.on(\"videoChange\", (info) => {\n      this.$text.innerText = `P${info.part}`;\n      this.$el.classList.toggle(\"is-show\", (info.list?.length || 1) > 1);\n    });\n  }\n}\n","import { SliderVertical } from \"@/components\";\r\nimport { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-volume\"></i>\r\n    <i class=\"mpicon-volume-off\"></i>\r\n  </div>\r\n\r\n  <div class=\"${classPrefix}-controls-panel-wrap\">\r\n    <div class=\"${classPrefix}-controls-panel\">\r\n      <div class=\"${classPrefix}-button-volume-value\">0</div>\r\n      <div class=\"${classPrefix}-button-volume-slider\"></div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nexport default class ButtonVolume extends ControlsPlugin {\r\n  static pluginName = \"buttonVolume\";\r\n\r\n  $icon: HTMLElement;\r\n  $slider: HTMLElement;\r\n  $value: HTMLElement;\r\n  slider!: SliderVertical;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-volume` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$slider = this.$(`.${classPrefix}-button-volume-slider`);\r\n    this.$value = this.$(`.${classPrefix}-button-volume-value`);\r\n  }\r\n\r\n  init() {\r\n    this.slider = new SliderVertical({\r\n      container: this.$slider,\r\n      min: 0,\r\n      max: 100,\r\n      step: 1,\r\n      value: this.player.volume * 100,\r\n      onChange: (value) => {\r\n        this.$value.innerText = value.toString();\r\n      },\r\n      onDrag: (value) => {\r\n        this.player.setVolume(value / 100);\r\n        this.player.emit(\"setValue\", \"volume\", value / 100);\r\n      },\r\n      onDragStart: (value) => {\r\n        if (this.player.muted && value != 0) {\r\n          this.player.setMuted(false);\r\n        }\r\n        this.$el.classList.add(\"is-control\");\r\n        this.player.isControlled = true;\r\n      },\r\n      onDragEnd: () => {\r\n        this.$el.classList.remove(\"is-control\");\r\n        this.player.isControlled = false;\r\n      },\r\n    });\r\n    this.player.on(\"volumechange\", (value: number, muted: boolean) => {\r\n      if (muted) {\r\n        this.$el.classList.add(\"is-muted\");\r\n        this.slider.setValue(0);\r\n      } else {\r\n        this.$el.classList.remove(\"is-muted\");\r\n        this.slider.setValue(Math.round(value * 100));\r\n      }\r\n      if (value == 0) {\r\n        this.$el.classList.add(\"is-muted\");\r\n      }\r\n    });\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      if (this.player.muted || this.player.volume == 0) {\r\n        if (this.player.volume == 0) {\r\n          this.player.setVolume(0.1);\r\n        }\r\n        this.player.setMuted(false);\r\n        this.player.emit(\"setValue\", \"muted\", false);\r\n      } else {\r\n        this.player.setMuted(true);\r\n        this.player.emit(\"setValue\", \"muted\", true);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsItem, ControlsPlugin, PluginFrom } from \"@/plugin\";\r\nimport { PlayerOptions } from \"@core\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-settings\"></i>\r\n  </div>\r\n  <div class=\"${classPrefix}-controls-panel-wrap\">\r\n    <div class=\"${classPrefix}-controls-panel\"></div>\r\n  </div>\r\n`;\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerOptions {\r\n    buttonSettings?: {\r\n      controls?: ControlsPlugin[];\r\n    };\r\n  }\r\n}\r\n\r\nexport default class ButtonSettings extends ControlsPlugin {\r\n  static pluginName = \"buttonSettings\";\r\n\r\n  $icon: HTMLElement;\r\n  $panel: HTMLElement;\r\n\r\n  controls: ControlsPlugin[] = [];\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-settings` },\r\n        templateHTML\r\n      )\r\n    );\r\n\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$panel = this.$(`.${classPrefix}-controls-panel`);\r\n  }\r\n\r\n  apply(player: Player, options: PlayerOptions) {\r\n    this.controls = options.buttonSettings?.controls || [];\r\n  }\r\n\r\n  ready() {\r\n    this.build(this.$panel, this.controls);\r\n    this.player.plugins.settings?.mount(this.$panel);\r\n  }\r\n\r\n  setControls(controls: ControlsPlugin[]) {\r\n    this.controls = controls;\r\n    this.build(this.$panel, controls);\r\n  }\r\n\r\n  protected build(container: HTMLElement, list?: PluginFrom<ControlsItem>[]) {\r\n    container.innerHTML = \"\";\r\n    const fragment = new DocumentFragment();\r\n    list?.forEach((item) => {\r\n      const el = this.player.plugin.from(item)?.$el;\r\n      if (el) fragment.appendChild(el);\r\n    });\r\n    container.appendChild(fragment);\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement, pictureInPictureEnabled } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-pip\"></i>\r\n    <i class=\"mpicon-pip-exit\"></i>\r\n  </div>\r\n  <div class=\"mpui-tooltip\">画中画</div>\r\n`;\r\n\r\nexport default class ButtonPip extends ControlsPlugin {\r\n  static pluginName = \"buttonPip\";\r\n\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-pip` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"enterpictureinpicture\", () => {\r\n      this.$el.classList.add(\"is-on\");\r\n      this.$tooltip.innerText = \"退出画中画\";\r\n    });\r\n    this.player.on(\"leavepictureinpicture\", () => {\r\n      this.$el.classList.remove(\"is-on\");\r\n      this.$tooltip.innerText = \"画中画\";\r\n    });\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      if (this.player.isPip) {\r\n        this.player.exitPip?.();\r\n      } else {\r\n        this.player.enterPip?.();\r\n      }\r\n    });\r\n  }\r\n  get ignored() {\r\n    return !this.player.enterPip || !pictureInPictureEnabled;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-widescreen\"></i>\r\n    <i class=\"mpicon-widescreen-exit\"></i>\r\n  </div>\r\n  <div class=\"mpui-tooltip\">宽屏模式</div>\r\n`;\r\n\r\nexport default class ButtonWidescreen extends ControlsPlugin {\r\n  static pluginName = \"buttonWidescreen\";\r\n\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-widescreen` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"widescreenEnter\", () => {\r\n      this.$el.classList.add(\"is-on\");\r\n      this.$tooltip.innerText = \"退出宽屏模式\";\r\n    });\r\n    this.player.on(\"widescreenExit\", () => {\r\n      this.$el.classList.remove(\"is-on\");\r\n      this.$tooltip.innerText = \"宽屏模式\";\r\n    });\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      if (!this.player.isWidescreen) {\r\n        this.player.enterWidescreen?.();\r\n      } else {\r\n        this.player.exitWidescreen?.();\r\n      }\r\n    });\r\n  }\r\n  get ignored() {\r\n    return !this.player.enterWidescreen;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-webscreen\"></i>\r\n    <i class=\"mpicon-webscreen-exit\"></i>\r\n  </div>\r\n  <div class=\"mpui-tooltip\">网页全屏</div>\r\n`;\r\n\r\nexport default class ButtonWebscreen extends ControlsPlugin {\r\n  static pluginName = \"buttonWebscreen\";\r\n\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-webscreen` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"webscreenEnter\", () => {\r\n      this.$el.classList.add(\"is-on\");\r\n      this.$tooltip.innerText = \"退出网页全屏\";\r\n    });\r\n    this.player.on(\"webscreenExit\", () => {\r\n      this.$el.classList.remove(\"is-on\");\r\n      this.$tooltip.innerText = \"网页全屏\";\r\n    });\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      if (!this.player.isWebscreen) {\r\n        this.player.enterWebscreen?.();\r\n      } else {\r\n        this.player.exitWebscreen?.();\r\n      }\r\n    });\r\n  }\r\n  get ignored() {\r\n    return !this.player.enterWebscreen;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement, fullScreenEnabled } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-fullscreen\"></i>\r\n    <i class=\"mpicon-fullscreen-exit\"></i>\r\n  </div>\r\n  <div class=\"mpui-tooltip\">进入全屏</div>\r\n`;\r\n\r\nexport default class ButtonFullscreen extends ControlsPlugin {\r\n  static pluginName = \"buttonFullscreen\";\r\n\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-fullscreen` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"fullscreenEnter\", () => {\r\n      this.$el.classList.add(\"is-on\");\r\n      this.$tooltip.innerText = \"退出全屏\";\r\n    });\r\n    this.player.on(\"fullscreenExit\", () => {\r\n      this.$el.classList.remove(\"is-on\");\r\n      this.$tooltip.innerText = \"进入全屏\";\r\n    });\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      if (!this.player.isFullscreen) {\r\n        this.player.enterFullscreen?.();\r\n      } else {\r\n        this.player.exitFullscreen?.();\r\n      }\r\n    });\r\n  }\r\n  get ignored() {\r\n    return !this.player.enterFullscreen || !fullScreenEnabled;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix, developers, repositoryLink } from \"@/config\";\r\nimport { PanelPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-about-logo\"></div>\r\n  <div class=\"${classPrefix}-about-version\">version ${Player.version}-${Player.gitHash}</div>\r\n  <div>github：<a href=\"${repositoryLink}\" target=\"_blank\">mfuns-cn/mfunsPlayer</a></div>\r\n  <div>开发者：</div>\r\n  <ul class=\"${classPrefix}-about-developers\">\r\n    ${developers\r\n      .map(\r\n        ({ name, link }) => /*html*/ `\r\n        <li>\r\n          <a href=\"${link}\" target=\"_blank\">${name}</a>\r\n        </li>\r\n      `\r\n      )\r\n      .join(\"\")}\r\n    <li></li>\r\n  </ul>\r\n`;\r\n\r\n/** 播放器面板 */\r\nexport default class about extends PanelPlugin {\r\n  static pluginName = \"about\";\r\n\r\n  title = \"关于\";\r\n  constructor(player: Player) {\r\n    super(player, createElement(\"div\", { class: `${classPrefix}-about` }, templateHTML));\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { PanelPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst template = (list: HotkeyInfoListItem[]) => /*html*/ `\r\n  <div class=\"${classPrefix}-hotkeys-list\">\r\n    ${list\r\n      .map(\r\n        ({ key, description }) => /*html*/ `\r\n        <div class=\"${classPrefix}-hotkeys-list-item\">\r\n          <div class=\"${classPrefix}-hotkeys-list-key\">${key}</div>\r\n          <div class=\"${classPrefix}-hotkeys-list-description\">${description}</div>\r\n        </div>\r\n      `\r\n      )\r\n      .join(\"\")}\r\n  </div>\r\n`;\r\n\r\ninterface HotkeyInfoListItem {\r\n  key: string;\r\n  description: string;\r\n}\r\n\r\n/** 快捷键信息面板 */\r\nexport default class HotkeyInfo extends PanelPlugin {\r\n  static pluginName = \"hotkeyInfo\";\r\n\r\n  title = \"快捷键说明\";\r\n  constructor(player: Player) {\r\n    const hotkeyInfoList = [\r\n      { key: \"Space\", description: \"播放/暂停\" },\r\n      { key: \"→\", description: \"快进5秒\" },\r\n      { key: \"←\", description: \"快退5秒\" },\r\n      { key: \"↑\", description: \"音量增加10%\" },\r\n      { key: \"↓\", description: \"音量降低10%\" },\r\n    ];\r\n    super(\r\n      player,\r\n      createElement(\"div\", { class: `${classPrefix}-hotkeys` }, template(hotkeyInfoList))\r\n    );\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin, MenuItem, PluginFrom } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\nimport { PlayerOptions } from \"@core\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    contextMenu?: ContextMenu;\r\n  }\r\n  interface PlayerEventMap {\r\n    contextMenuShow: (x: number, y: number) => void;\r\n    contextMenuHide: () => void;\r\n  }\r\n  interface PlayerOptions {\r\n    contextMenu?: {\r\n      list: PluginFrom<MenuItem>[];\r\n    };\r\n  }\r\n}\r\n\r\n/** 右键菜单 */\r\n\r\nexport default class ContextMenu extends BasePlugin {\r\n  static pluginName = \"contextMenu\";\r\n  player: Player;\r\n  container: HTMLElement;\r\n  $el: HTMLElement;\r\n  $list: HTMLElement;\r\n  list: PluginFrom<MenuItem>[] = [];\r\n  private isShow = false;\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.player = player;\r\n\r\n    this.container = createElement(\r\n      \"div\",\r\n      { class: `${classPrefix}-contextmenu-wrap` },\r\n      /*html*/ `\r\n      <div class=\"${classPrefix}-contextmenu\">\r\n        <ul class=\"${classPrefix}-contextmenu-list mpui-black\"></ul>\r\n      </div>\r\n      `\r\n    );\r\n    this.$el = this.container.querySelector(`.${classPrefix}-contextmenu`)!;\r\n    this.$list = this.$el.querySelector(`.${classPrefix}-contextmenu-list`)!;\r\n\r\n    this.player.$main.appendChild(this.container);\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this.list = options.contextMenu?.list || [];\r\n  }\r\n  ready(): void {\r\n    this.setMenu(this.list);\r\n  }\r\n  setMenu(list: PluginFrom<MenuItem>[]) {\r\n    this.$list.innerHTML = \"\";\r\n    const fragment = new DocumentFragment();\r\n    list.forEach((pi) => {\r\n      const item = this.player.plugin.from<MenuItem>(pi);\r\n      if (!item) return;\r\n      const el = createElement(\"li\", { class: `${classPrefix}-contextmenu-item` });\r\n      if (item.onClick)\r\n        el.onclick = () => {\r\n          item.onClick?.(this.player);\r\n        };\r\n      let content: string | HTMLElement;\r\n      if (typeof item.content == \"function\") {\r\n        content = item.content(this.player);\r\n      } else {\r\n        content = item.content;\r\n      }\r\n      if (typeof content == \"object\") {\r\n        el.appendChild(content);\r\n      } else {\r\n        el.innerText = content;\r\n      }\r\n      fragment.appendChild(el);\r\n    });\r\n    this.$list.appendChild(fragment);\r\n  }\r\n  init() {\r\n    this.player.$area.addEventListener(\"contextmenu\", (e: MouseEvent) => {\r\n      e.preventDefault();\r\n      const clientRect = this.player.$area.getBoundingClientRect();\r\n      const x = e.clientX - clientRect.left;\r\n      const y = e.clientY - clientRect.top;\r\n      this.show(x, y);\r\n    });\r\n    this.container.addEventListener(\"contextmenu\", (e: MouseEvent) => {\r\n      e.preventDefault();\r\n      const clientRect = this.container.getBoundingClientRect();\r\n      const x = e.clientX - clientRect.left;\r\n      const y = e.clientY - clientRect.top;\r\n      this.show(x, y);\r\n    });\r\n    document.addEventListener(\"click\", () => {\r\n      if (this.isShow) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n  show(x: number, y: number) {\r\n    this.container.classList.add(\"is-show\");\r\n    const clientRect = this.player.$area.getBoundingClientRect();\r\n    if (x + this.$el.offsetWidth >= clientRect.width) {\r\n      this.$el.style.right = clientRect.width - x + \"px\";\r\n      this.$el.style.left = \"initial\";\r\n    } else {\r\n      this.$el.style.left = x + \"px\";\r\n      this.$el.style.right = \"initial\";\r\n    }\r\n    if (y + this.$el.offsetHeight >= clientRect.height) {\r\n      this.$el.style.bottom = clientRect.height - y + \"px\";\r\n      this.$el.style.top = \"initial\";\r\n    } else {\r\n      this.$el.style.top = y + \"px\";\r\n      this.$el.style.bottom = \"initial\";\r\n    }\r\n    this.isShow = true;\r\n    this.player.emit(\"contextMenuShow\", x, y);\r\n  }\r\n  hide() {\r\n    this.container.classList.remove(\"is-show\");\r\n    this.isShow = false;\r\n    this.player.emit(\"contextMenuHide\");\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\r\nimport { Player } from \"@/player\";\r\nimport { PlayerOptions } from \"@/types\";\r\n\r\nimport { BasePlugin, ControlsItem, PluginFrom } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controller-mask\"></div>\r\n  <div class=\"${classPrefix}-controller mpui-black\">\r\n    <div class=\"${classPrefix}-controller-top\"></div>\r\n    <div class=\"${classPrefix}-controller-content\">\r\n      <div class=\"${classPrefix}-controller-left\"></div>\r\n      <div class=\"${classPrefix}-controller-center\"></div>\r\n      <div class=\"${classPrefix}-controller-right\"></div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    controller?: Controller;\r\n  }\r\n  interface PlayerOptions {\r\n    controller?: { controls?: ControllerControls };\r\n  }\r\n}\r\n\r\nexport interface ControllerControls {\r\n  left?: PluginFrom<ControlsItem>[];\r\n  center?: PluginFrom<ControlsItem>[];\r\n  right?: PluginFrom<ControlsItem>[];\r\n  top?: PluginFrom<ControlsItem>[];\r\n}\r\n\r\n/** 控制栏 */\r\nexport default class Controller extends BasePlugin {\r\n  static pluginName = \"controller\";\r\n  player: Player;\r\n  container: HTMLElement;\r\n  $el: HTMLElement;\r\n  $top: HTMLElement;\r\n  $content: HTMLElement;\r\n  $left: HTMLElement;\r\n  $center: HTMLElement;\r\n  $right: HTMLElement;\r\n\r\n  isHover = false;\r\n\r\n  protected inactiveHook: () => boolean | void;\r\n  protected mouseEnterHandler: () => void;\r\n  protected mouseLeaveHandler: () => void;\r\n  protected controls: ControllerControls = {};\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.player = player;\r\n    this.container = createElement(\r\n      \"div\",\r\n      { class: `${classPrefix}-controller-wrap` },\r\n      templateHTML\r\n    );\r\n    this.$el = this.container.querySelector(`.${classPrefix}-controller`)!;\r\n    this.$top = this.$el.querySelector(`.${classPrefix}-controller-top`)!;\r\n    this.$content = this.$el.querySelector(`.${classPrefix}-controller-content`)!;\r\n    this.$left = this.$el.querySelector(`.${classPrefix}-controller-left`)!;\r\n    this.$center = this.$el.querySelector(`.${classPrefix}-controller-center`)!;\r\n    this.$right = this.$el.querySelector(`.${classPrefix}-controller-right`)!;\r\n    this.player.$main.append(this.container);\r\n\r\n    this.inactiveHook = () => !this.isHover && void 0;\r\n    this.mouseEnterHandler = () => {\r\n      this.isHover = true;\r\n    };\r\n    this.mouseLeaveHandler = () => {\r\n      this.isHover = false;\r\n    };\r\n  }\r\n  init() {\r\n    this.player.hook.register(\"inactive\", this.inactiveHook);\r\n    this.container.addEventListener(\"mouseenter\", this.mouseEnterHandler);\r\n    this.container.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\r\n  }\r\n  apply(player: Player, options: PlayerOptions) {\r\n    this.controls = options.controller?.controls || {};\r\n  }\r\n  ready() {\r\n    this.setControls(this.controls);\r\n  }\r\n  /** 更新控制组件 */\r\n  setControls(controls: ControllerControls) {\r\n    this.controls = controls;\r\n    const { left, center, right, top } = controls;\r\n    this.build(this.$left, left);\r\n    this.build(this.$center, center);\r\n    this.build(this.$right, right);\r\n    this.build(this.$top, top);\r\n  }\r\n  protected build(container: HTMLElement, list?: PluginFrom<ControlsItem>[]) {\r\n    container.innerHTML = \"\";\r\n    const fragment = new DocumentFragment();\r\n    list?.forEach((item) => {\r\n      const el = this.player.plugin.from<ControlsItem>(item)?.$el;\r\n      if (el) fragment.appendChild(el);\r\n    });\r\n    container.appendChild(fragment);\r\n  }\r\n  destroy() {\r\n    this.player.hook.unregister(\"inactive\", this.inactiveHook);\r\n    this.container.removeEventListener(\"mouseenter\", this.mouseEnterHandler);\r\n    this.container.removeEventListener(\"mouseleave\", this.mouseLeaveHandler);\r\n  }\r\n}\r\n","export enum keyCode {\r\n  Backspace = 8,\r\n  Tab = 9,\r\n  Enter = 13,\r\n  Shift = 16,\r\n  Ctrl = 17,\r\n  Alt = 18,\r\n  PauseBreak = 19,\r\n  CapsLock = 20,\r\n  Escape = 27,\r\n  Space = 32,\r\n  PageUp = 33,\r\n  PageDown = 34,\r\n  End = 35,\r\n  Home = 36,\r\n\r\n  LeftArrow = 37,\r\n  UpArrow = 38,\r\n  RightArrow = 39,\r\n  DownArrow = 40,\r\n\r\n  Insert = 45,\r\n  Delete = 46,\r\n\r\n  Zero = 48,\r\n  ClosedParen = Zero,\r\n  One = 49,\r\n  ExclamationMark = One,\r\n  Two = 50,\r\n  AtSign = Two,\r\n  Three = 51,\r\n  PoundSign = Three,\r\n  Hash = PoundSign,\r\n  Four = 52,\r\n  DollarSign = Four,\r\n  Five = 53,\r\n  PercentSign = Five,\r\n  Six = 54,\r\n  Caret = Six,\r\n  Hat = Caret,\r\n  Seven = 55,\r\n  Ampersand = Seven,\r\n  Eight = 56,\r\n  Star = Eight,\r\n  Asterik = Star,\r\n  Nine = 57,\r\n  OpenParen = Nine,\r\n\r\n  A = 65,\r\n  B = 66,\r\n  C = 67,\r\n  D = 68,\r\n  E = 69,\r\n  F = 70,\r\n  G = 71,\r\n  H = 72,\r\n  I = 73,\r\n  J = 74,\r\n  K = 75,\r\n  L = 76,\r\n  M = 77,\r\n  N = 78,\r\n  O = 79,\r\n  P = 80,\r\n  Q = 81,\r\n  R = 82,\r\n  S = 83,\r\n  T = 84,\r\n  U = 85,\r\n  V = 86,\r\n  W = 87,\r\n  X = 88,\r\n  Y = 89,\r\n  Z = 90,\r\n\r\n  LeftWindowKey = 91,\r\n  RightWindowKey = 92,\r\n  SelectKey = 93,\r\n\r\n  Numpad0 = 96,\r\n  Numpad1 = 97,\r\n  Numpad2 = 98,\r\n  Numpad3 = 99,\r\n  Numpad4 = 100,\r\n  Numpad5 = 101,\r\n  Numpad6 = 102,\r\n  Numpad7 = 103,\r\n  Numpad8 = 104,\r\n  Numpad9 = 105,\r\n\r\n  Multiply = 106,\r\n  Add = 107,\r\n  Subtract = 109,\r\n  DecimalPoint = 110,\r\n  Divide = 111,\r\n\r\n  F1 = 112,\r\n  F2 = 113,\r\n  F3 = 114,\r\n  F4 = 115,\r\n  F5 = 116,\r\n  F6 = 117,\r\n  F7 = 118,\r\n  F8 = 119,\r\n  F9 = 120,\r\n  F10 = 121,\r\n  F11 = 122,\r\n  F12 = 123,\r\n\r\n  NumLock = 144,\r\n  ScrollLock = 145,\r\n\r\n  SemiColon = 186,\r\n  Equals = 187,\r\n  Comma = 188,\r\n  Dash = 189,\r\n  Period = 190,\r\n  UnderScore = Dash,\r\n  PlusSign = Equals,\r\n  ForwardSlash = 191,\r\n  Tilde = 192,\r\n  GraveAccent = Tilde,\r\n\r\n  OpenBracket = 219,\r\n  ClosedBracket = 221,\r\n  Quote = 222,\r\n}\r\n","import { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { keyCode } from \"@/utils/KeyCode.enum\";\r\nimport { throttle } from \"@/utils\";\r\n\r\nexport default class Hotkey {\r\n  static readonly pluginName = \"hotkey\";\r\n  player: Player;\r\n  controlMask: HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    this.player = player;\r\n    this.controlMask = this.player.$area;\r\n  }\r\n\r\n  apply() {\r\n    this.initKey();\r\n    this.initMask();\r\n  }\r\n\r\n  /** 初始化键盘事件 */\r\n  initKey() {\r\n    document.addEventListener(\"keydown\", (e: KeyboardEvent) => {\r\n      const tag = document.activeElement?.tagName.toUpperCase();\r\n      const editable = document.activeElement?.getAttribute(\"contenteditable\");\r\n      if (this.player.isFocused) {\r\n        if (tag == \"INPUT\" || tag == \"TEXTAREA\" || editable == \"\" || editable == \"true\") return;\r\n        switch (e.keyCode) {\r\n          case keyCode.Space:\r\n            e.preventDefault();\r\n            this.player.paused ? this.player.play() : this.player.pause();\r\n            break;\r\n          case keyCode.LeftArrow:\r\n            e.preventDefault();\r\n            this.player.seek(this.player.currentTime - 5);\r\n            break;\r\n          case keyCode.RightArrow:\r\n            e.preventDefault();\r\n            this.player.seek(this.player.currentTime + 5);\r\n            break;\r\n          case keyCode.UpArrow:\r\n            e.preventDefault();\r\n            this.player.setVolume(this.player.volume + 0.1);\r\n            this.player.emit(\"hotkeyVolume\");\r\n            break;\r\n          case keyCode.DownArrow:\r\n            e.preventDefault();\r\n            this.player.setVolume(this.player.volume - 0.1);\r\n            this.player.emit(\"hotkeyVolume\");\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /** 初始化遮罩事件 */\r\n  initMask() {\r\n    const throttleWheelVolume = throttle((wheelY: number) => {\r\n      this.player.setVolume(this.player.volume + (wheelY > 0 ? -0.05 : 0.05));\r\n    }, 50);\r\n    this.controlMask.addEventListener(\"click\", () => {\r\n      this.player.paused ? this.player.play() : this.player.pause();\r\n    });\r\n    this.controlMask.addEventListener(\"wheel\", (e) => {\r\n      if (this.player.isWebscreen || this.player.isFullscreen) {\r\n        e.preventDefault();\r\n        if (this.player.muted) this.player.setMuted(false);\r\n        throttleWheelVolume(e.deltaY);\r\n        this.player.emit(\"hotkeyVolume\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\r\nimport { Player } from \"@/player\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { createElement } from \"@/utils\";\r\nimport {\r\n  BasePlugin,\r\n  MountableContainer,\r\n  MountableItem,\r\n  PanelItem,\r\n  PanelPlugin,\r\n  PluginFrom,\r\n} from \"@/plugin\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-modal-mask\"></div>\r\n  <div class=\"${classPrefix}-modal\">\r\n    <div class=\"${classPrefix}-modal-head\">\r\n      <div class=\"${classPrefix}-modal-title\"></div>\r\n      <div class=\"${classPrefix}-modal-close\">\r\n        <i class=\"mpicon-close\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"${classPrefix}-modal-content\"></div>\r\n  </div>\r\n`;\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    modal?: Modal;\r\n  }\r\n  interface PlayerOptions {\r\n    modal?: {\r\n      panels?: PanelPlugin[];\r\n    };\r\n  }\r\n}\r\n\r\nexport default class Modal extends BasePlugin implements MountableContainer {\r\n  static readonly pluginName = \"modal\";\r\n  container: HTMLElement;\r\n  $el: HTMLElement;\r\n  $mask: HTMLElement;\r\n  $content: HTMLElement;\r\n  $title: HTMLElement;\r\n  $close: HTMLElement;\r\n  current: PanelItem | null = null;\r\n  #initPanels: PluginFrom<PanelItem>[] = [];\r\n  get isShow(): boolean {\r\n    return this.container.classList.contains(\"is-show\");\r\n  }\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.container = createElement(\"div\", { class: `${classPrefix}-modal-wrap` }, templateHTML);\r\n    this.$el = this.container.querySelector(`.${classPrefix}-modal`)!;\r\n    this.$mask = this.container.querySelector(`.${classPrefix}-modal-mask`)!;\r\n    this.$content = this.$el.querySelector(`.${classPrefix}-modal-content`)!;\r\n    this.$title = this.$el.querySelector(`.${classPrefix}-modal-title`)!;\r\n    this.$close = this.$el.querySelector(`.${classPrefix}-modal-close`)!;\r\n\r\n    this.player.$main.appendChild(this.container);\r\n  }\r\n\r\n  init() {\r\n    this.$mask.addEventListener(\"click\", () => {\r\n      this.hide();\r\n    });\r\n    this.$close.addEventListener(\"click\", () => {\r\n      this.hide();\r\n    });\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this.#initPanels = options.modal?.panels || [];\r\n  }\r\n  ready(): void {\r\n    this.#initPanels.forEach((item) => {\r\n      const panel = this.player.plugin.from(item);\r\n      panel && this.append(panel);\r\n    });\r\n    this.#initPanels = [];\r\n  }\r\n  /** 关闭模态框 */\r\n  hide() {\r\n    this.current?.toggle?.(false);\r\n  }\r\n  /** 挂载一个面板 */\r\n  append(panel: PanelItem) {\r\n    panel.mount(this.$content, {\r\n      onToggle: (flag) => {\r\n        if (flag) {\r\n          for (const a of this.$content.children) {\r\n            a.classList.toggle(\"is-show\", a == panel.$el);\r\n          }\r\n          this.container.classList.add(\"is-show\");\r\n          this.$title.innerText = panel.title || \"\";\r\n          this.current = panel;\r\n        } else {\r\n          if (this.current == panel) {\r\n            this.container.classList.remove(\"is-show\");\r\n            panel.$el.classList.remove(\"is-show\");\r\n            this.$title.innerText = \"\";\r\n            this.current = null;\r\n          }\r\n        }\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\nimport { Player } from \"@/player\";\nimport { createElement, secondToTime } from \"@/utils\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nconst templateHTML = /*html*/ `\n  <div class=\"${classPrefix}-progress-bar\">\n    <div class=\"${classPrefix}-progress-buffered\"></div>\n    <div class=\"${classPrefix}-progress-played\"></div>\n    <div class=\"${classPrefix}-progress-thumb-track\">\n      <div class=\"${classPrefix}-progress-thumb\"></div>\n    </div>\n    <div class=\"${classPrefix}-progress-preview\">\n      <div class=\"${classPrefix}-progress-thumbnail\"></div>\n      <div class=\"${classPrefix}-progress-time\"></div>\n    </div>\n    <div class=\"${classPrefix}-progress-tip\"></div>\n  </div>\n`;\n\n/** 进度条 */\nexport default class Progress extends ControlsPlugin {\n  static readonly pluginName = \"progress\";\n\n  $bar: HTMLElement;\n  $buffered: HTMLElement;\n  $played: HTMLElement;\n  $thumbTrack: HTMLElement;\n  $thumb: HTMLElement;\n  $preview: HTMLElement;\n  $thumbnail: HTMLElement;\n  $time: HTMLElement;\n  $tip: HTMLElement;\n  /** 轨道长度 */\n  private trackLength = 0;\n  /** 鼠标与轨道距离 */\n  private distance = 0;\n  /** 滑块可滑动距离 */\n  private nMax = 0;\n  /** 滑块轨道位置 */\n  private nLeft = 0;\n  /** 滑动距离 */\n  get nLength(): number {\n    const nLength = this.distance - this.thumbTrackX;\n    // 限制滑块移动位置\n    return nLength >= this.nMax ? this.nMax : nLength <= 0 ? 0 : nLength;\n  }\n  /** 滑块轨道与总轨道距离差 */\n  get thumbTrackX(): number {\n    return (this.trackLength - this.nMax) / 2;\n  }\n  /** 滑动值 */\n  get nValue(): number {\n    return (this.nLength / this.nMax) * this.player.duration;\n  }\n  private isDragging = false;\n  private isHover = false;\n  private isActive = false;\n\n  constructor(player: Player) {\n    super(player, createElement(\"div\", { class: `${classPrefix}-progress` }, templateHTML));\n\n    this.$bar = this.$(`.${classPrefix}-progress-bar`);\n    this.$buffered = this.$(`.${classPrefix}-progress-buffered`);\n    this.$played = this.$(`.${classPrefix}-progress-played`);\n    this.$thumbTrack = this.$(`.${classPrefix}-progress-thumb-track`);\n    this.$thumb = this.$(`.${classPrefix}-progress-thumb`);\n    this.$preview = this.$(`.${classPrefix}-progress-preview`);\n    this.$thumbnail = this.$(`.${classPrefix}-progress-thumbnail`);\n    this.$time = this.$(`.${classPrefix}-progress-time`);\n    this.$tip = this.$(`.${classPrefix}-progress-tip`);\n\n    // 点按进度条事件\n    this.$el.addEventListener(\"mousedown\", (e: MouseEvent) => {\n      const { clientX } = e;\n      // 更新滑动条位置信息\n      this.trackLength = this.$el.offsetWidth;\n      this.nMax = this.$thumbTrack.offsetWidth || this.trackLength;\n      this.nLeft = this.$el.getBoundingClientRect().left;\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      this.setPlayed(this.nValue);\n      this.$el.classList.add(`${classPrefix}-progress-dragging`);\n      this.isDragging = true;\n      document.addEventListener(\"mousemove\", dragMoveEvent);\n      document.addEventListener(\"mouseup\", dragEndEvent);\n    });\n\n    // 滑动进度条事件\n    const dragMoveEvent = (e: MouseEvent) => {\n      // 鼠标X位置\n      const { clientX } = e;\n      // 鼠标移动时取消默认行为，避免选中其他元素或文字\n      e.preventDefault();\n      e.stopPropagation();\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      this.setPlayed(this.nValue);\n      // 更新指针显示\n      this.updateTip();\n      window.getSelection()?.removeAllRanges();\n    };\n\n    // 松开进度条事件\n    const dragEndEvent = (e: MouseEvent) => {\n      e.stopPropagation();\n      window.getSelection()?.removeAllRanges();\n      document.removeEventListener(\"mousemove\", dragMoveEvent);\n      document.removeEventListener(\"mouseup\", dragEndEvent);\n      this.$el.classList.remove(`${classPrefix}-progress-dragging`);\n      this.isDragging = false;\n      if (!this.isHover) this.setActive(false);\n      // 跳转\n      this.player.seek(this.nValue);\n      this.player.play();\n    };\n\n    // 鼠标离开进度条区域\n    this.$el.addEventListener(\"mouseenter\", () => {\n      this.isHover = true;\n      if (!this.isDragging) this.updateTip();\n    });\n    // 鼠标在进度条区域内移动\n    this.$el.addEventListener(\"mousemove\", (e: MouseEvent) => {\n      // 如果进度条处于拖动状态，则无需重复显示进度条指针\n      if (this.isDragging) return;\n      // 鼠标X位置\n      const { clientX } = e;\n      // 更新滑动条位置信息\n      this.trackLength = this.$el.offsetWidth;\n      this.nMax = this.$thumbTrack.offsetWidth || this.trackLength;\n      this.nLeft = this.$el.getBoundingClientRect().left;\n      // 获取鼠标与轨道距离\n      this.distance = clientX - this.nLeft;\n      // 更新指针显示\n      this.updateTip();\n    });\n    // 鼠标离开进度条区域\n    this.$el.addEventListener(\"mouseleave\", () => {\n      this.isHover = false;\n      if (!this.isDragging) this.setActive(false);\n    });\n\n    // 视频播放时间更新\n    this.player.on(\"timeupdate\", (time) => {\n      if (!this.isDragging) this.setPlayed(time);\n    });\n\n    // 视频缓存更新\n    this.player.on(\"progress\", (buffered) => {\n      this.setBuffered(buffered.length ? buffered.end(buffered.length - 1) : 0);\n    });\n  }\n\n  /** 设置已播放进度条位置 */\n  public setPlayed(time: number) {\n    // 计算进度比值\n    const per = time / this.player.duration || 0;\n    // 修改滑块位置\n    this.$thumb.style.left = `${per * 100}%`;\n    // 修改滑动痕迹宽度\n    this.$played.style.width = `${per * 100}%`;\n  }\n\n  /** 设置已播放进度条位置 */\n  public setBuffered(time: number) {\n    // 计算进度比值\n    const per = time / this.player.duration || 0;\n    // 修改滑动痕迹宽度\n    this.$buffered.style.width = `${per * 100}%`;\n  }\n\n  /** 设置进度条活跃状态 */\n  private setActive(flag: boolean) {\n    this.isActive = flag;\n    this.$el.classList.toggle(`${classPrefix}-progress-active`, flag);\n    if (flag) {\n      this.player.isControlled = true;\n    } else {\n      this.player.isControlled = false;\n    }\n  }\n\n  /** 更新指针位置 */\n  public updateTip() {\n    if (!this.isActive) this.setActive(true);\n    let per = this.distance / this.trackLength;\n    per = per >= 1 ? 1 : per <= 0 ? 0 : per;\n    this.$tip.style.left = `${per * 100}%`;\n    this.$preview.style.left = `${per * 100}%`;\n    this.$time.innerText = secondToTime(this.nValue);\n  }\n}\n","import { classPrefix } from \"@/config\";\r\nimport { Player } from \"@/player\";\r\nimport { PanelPlugin } from \"@/plugin\";\r\nimport { Checkbox, Picker } from \"@/components\";\r\nimport { createElement } from \"@/utils\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    settings?: Settings;\r\n  }\r\n}\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-settings-slot\">\r\n    <div class=\"${classPrefix}-panel-row\">\r\n      <div class=\"${classPrefix}-row-label\">播放倍速</div>\r\n      <div class=\"${classPrefix}-settings-rate-picker\"></div>\r\n    </div>\r\n    <div class=\"${classPrefix}-panel-row\">\r\n      <div class=\"${classPrefix}-row-label\">视频比例</div>\r\n      <div class=\"${classPrefix}-settings-ratio-picker\"></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"${classPrefix}-panel-row\">\r\n    <div class=\"${classPrefix}-row-label\">播放方式</div>\r\n    <div class=\"${classPrefix}-settings-play\"></div>\r\n  </div>\r\n  <div class=\"${classPrefix}-panel-row\">\r\n    <div class=\"${classPrefix}-row-label\">其他设置</div>\r\n    <div class=\"${classPrefix}-settings-others\"></div>\r\n  </div>\r\n`;\r\n\r\nexport default class Settings extends PanelPlugin {\r\n  static pluginName = \"settings\";\r\n\r\n  title = \"设置\";\r\n\r\n  $slot: HTMLElement;\r\n  $play: HTMLElement;\r\n  $others: HTMLElement;\r\n\r\n  $ratePicker: HTMLElement;\r\n  $ratioPicker: HTMLElement;\r\n\r\n  pickerRate!: Picker;\r\n  pickerRatio!: Picker;\r\n  toggleAutoplay!: Checkbox;\r\n  toggleAutopart!: Checkbox;\r\n\r\n  constructor(player: Player) {\r\n    super(player, createElement(\"div\", { class: `${classPrefix}-settings` }, templateHTML));\r\n    this.$slot = this.$(`.${classPrefix}-settings-slot`);\r\n    this.$play = this.$(`.${classPrefix}-settings-play`);\r\n    this.$others = this.$(`.${classPrefix}-settings-others`);\r\n\r\n    this.$ratePicker = this.$(`.${classPrefix}-settings-rate-picker`);\r\n    this.$ratioPicker = this.$(`.${classPrefix}-settings-ratio-picker`);\r\n  }\r\n  init() {\r\n    this.pickerRate = new Picker({\r\n      container: this.$ratePicker,\r\n      list: [\r\n        { value: 0.5, label: \"0.5\" },\r\n        { value: 0.75, label: \"0.75\" },\r\n        { value: 1, label: \"1.0\" },\r\n        { value: 1.25, label: \"1.25\" },\r\n        { value: 1.5, label: \"1.5\" },\r\n        { value: 2, label: \"2.0\" },\r\n      ],\r\n      value: this.player.playbackRate || 1,\r\n      onPick: (value) => {\r\n        this.player.setPlaybackRate(Number(value));\r\n      },\r\n    });\r\n    this.player.on(\"ratechange\", (rate: number) => {\r\n      this.pickerRate.setValue(rate);\r\n    });\r\n\r\n    this.pickerRatio = new Picker({\r\n      container: this.$ratioPicker,\r\n      list: [\r\n        { value: \"\", label: \"自动\" },\r\n        { value: \"16/9\", label: \"16:9\" },\r\n        { value: \"4/3\", label: \"4:3\" },\r\n      ],\r\n      value: this.player.aspectRatio || \"\",\r\n      onPick: (value) => {\r\n        this.player.setAspectRatio?.((value || \"\") as string);\r\n      },\r\n    });\r\n    this.player.on(\"aspectRatioChange\", (ratio) => {\r\n      this.pickerRatio.setValue(ratio);\r\n    });\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\r\nimport { Player } from \"@/player\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { BasePlugin, PanelItem, PluginFrom } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-side-mask\"></div>\r\n  <div class=\"${classPrefix}-side\">\r\n    <div class=\"${classPrefix}-side-head\">\r\n      <div class=\"${classPrefix}-side-title\"></div>\r\n      <div class=\"${classPrefix}-side-close\">\r\n        <i class=\"mpicon-close\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"${classPrefix}-side-content\"></div>\r\n  </div>\r\n`;\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    side?: Side;\r\n  }\r\n  interface PlayerOptions {\r\n    side?: {\r\n      panels?: PluginFrom<PanelItem>[];\r\n    };\r\n  }\r\n}\r\n\r\nexport default class Side extends BasePlugin {\r\n  static readonly pluginName = \"side\";\r\n  container: HTMLElement;\r\n  $el: HTMLElement;\r\n  $mask: HTMLElement;\r\n  $content: HTMLElement;\r\n  $title: HTMLElement;\r\n  $close: HTMLElement;\r\n  current: PanelItem | null = null;\r\n  #initPanels: PluginFrom<PanelItem>[] = [];\r\n  get isShow(): boolean {\r\n    return this.container.classList.contains(\"is-show\");\r\n  }\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.container = createElement(\"div\", { class: `${classPrefix}-side-wrap` }, templateHTML);\r\n    this.$el = this.container.querySelector(`.${classPrefix}-side`)!;\r\n    this.$mask = this.container.querySelector(`.${classPrefix}-side-mask`)!;\r\n    this.$content = this.$el.querySelector(`.${classPrefix}-side-content`)!;\r\n    this.$title = this.$el.querySelector(`.${classPrefix}-side-title`)!;\r\n    this.$close = this.$el.querySelector(`.${classPrefix}-side-close`)!;\r\n\r\n    this.player.$main.appendChild(this.container);\r\n  }\r\n  init() {\r\n    // --- 事件 --- //\r\n    this.$mask.addEventListener(\"click\", () => {\r\n      this.hide();\r\n    });\r\n    this.$close.addEventListener(\"click\", () => {\r\n      this.hide();\r\n    });\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this.#initPanels = options.side?.panels || [];\r\n  }\r\n  ready(): void {\r\n    this.#initPanels.forEach((item) => {\r\n      const panel = this.player.plugin.from(item);\r\n      panel && this.append(panel);\r\n    });\r\n    this.#initPanels = [];\r\n  }\r\n\r\n  hide() {\r\n    this.current?.toggle?.(false);\r\n  }\r\n\r\n  append(panel: PanelItem) {\r\n    panel.mount(this.$content, {\r\n      onToggle: (flag) => {\r\n        if (flag) {\r\n          this.current?.toggle?.(false);\r\n          for (const a of this.$content.children) {\r\n            a.classList.toggle(\"is-show\", a == panel.$el);\r\n          }\r\n          this.container.classList.add(\"is-show\");\r\n          this.$title.innerText = panel.title || \"\";\r\n          this.current = panel;\r\n        } else {\r\n          if (this.current == panel) {\r\n            this.container.classList.remove(\"is-show\");\r\n            panel.$el.classList.remove(\"is-show\");\r\n            this.$title.innerText = \"\";\r\n            this.current = null;\r\n          }\r\n        }\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    /** 是否为画中画模式 */\r\n    isPip?: boolean;\r\n    /** 进入画中画模式 */\r\n    enterPip?: () => void;\r\n    /** 退出画中画模式 */\r\n    exitPip?: () => void;\r\n  }\r\n}\r\n\r\nexport default class Pip extends BasePlugin {\r\n  static pluginName = \"pip\";\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n\r\n    // --- 绑定属性 --- //\r\n    this.player.define(\"isPip\", {\r\n      get: () => this.status,\r\n    });\r\n    this.player.define(\"enterPip\", () => this.enter());\r\n    this.player.define(\"exitPip\", () => this.exit());\r\n\r\n    // --- 绑定事件 --- //\r\n    this.player.on(\"enterpictureinpicture\", () => {\r\n      this.player.$el.classList.add(\"is-pip\");\r\n    });\r\n    this.player.on(\"leavepictureinpicture\", () => {\r\n      this.player.$el.classList.remove(\"is-pip\");\r\n    });\r\n    // 进入画中画时，退出全屏模式\r\n    this.player.on(\"enterpictureinpicture\", () => {\r\n      this.player.exitFullscreen?.();\r\n    });\r\n    // 进入全屏时，退出画中画模式\r\n    this.player.on(\"fullscreenEnter\", () => {\r\n      this.exit();\r\n    });\r\n  }\r\n\r\n  enter() {\r\n    if (this.status) return;\r\n    this.player.$video.requestPictureInPicture();\r\n  }\r\n\r\n  exit() {\r\n    if (!this.status) return;\r\n    document.exitPictureInPicture();\r\n  }\r\n\r\n  get status(): boolean {\r\n    return !!(document.pictureInPictureElement == this.player.$video);\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\nimport { BasePlugin } from \"@/plugin\";\n\ndeclare module \"@core\" {\n  interface Player {\n    /** 是否为全屏模式 */\n    isFullscreen?: boolean;\n    /** 进入全屏模式 */\n    enterFullscreen?: () => void;\n    /** 退出全屏模式 */\n    exitFullscreen?: () => void;\n  }\n}\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    /** 进入全屏模式 */\n    fullscreenEnter: () => void;\n    /** 退出全屏模式 */\n    fullscreenExit: () => void;\n  }\n}\n\nexport default class Fullscreen extends BasePlugin {\n  static pluginName = \"fullscreen\";\n\n  $el: HTMLElement;\n\n  constructor(player: Player) {\n    super(player);\n    this.$el = this.player.$main;\n\n    // --- 绑定属性 --- //\n    this.player.define(\"isFullscreen\", {\n      get: () => this.status,\n    });\n    this.player.define(\"enterFullscreen\", () => this.enter());\n    this.player.define(\"exitFullscreen\", () => this.exit());\n\n    // --- 绑定事件 --- //\n    const fullScreenChangeHandler = () => {\n      if (this.status) {\n        this.player.$el.classList.add(\"is-fullscreen\");\n        this.player.emit(\"fullscreenEnter\");\n      } else {\n        this.player.$el.classList.remove(\"is-fullscreen\");\n        this.player.emit(\"fullscreenExit\");\n      }\n    };\n    this.$el.addEventListener(\"fullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"webkitfullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"mozfullscreenchange\", fullScreenChangeHandler);\n    this.$el.addEventListener(\"msfullscreenchange\", fullScreenChangeHandler);\n  }\n\n  enter() {\n    if (this.status) return;\n    const el: any = this.$el;\n    if (el.requestFullscreen) {\n      el.requestFullscreen();\n    } else if (el.mozRequestFullScreen) {\n      el.mozRequestFullScreen();\n    } else if (el.webkitRequestFullscreen) {\n      el.webkitRequestFullscreen();\n    } else if (el.webkitEnterFullscreen) {\n      // Safari for iOS\n      el.webkitEnterFullscreen();\n    } else if (el.webkitEnterFullScreen) {\n      el.webkitEnterFullScreen();\n    } else if (el.msRequestFullscreen) {\n      el.msRequestFullscreen();\n    }\n  }\n\n  exit() {\n    if (!this.status) return;\n    const doc: any = document;\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if (doc.webkitExitFullscreen) {\n      doc.webkitExitFullscreen();\n    } else if (doc.webkitExitFullScreen) {\n      doc.webkitExitFullScreen();\n    } else if ((this.$el as any).msExitFullscreen!) {\n      (this.$el as any).msExitFullscreen();\n    }\n  }\n\n  get status(): boolean {\n    return !!(\n      document.fullscreenElement ||\n      (document as any).mozFullScreenElement ||\n      (document as any).webkitFullscreenElement ||\n      (document as any).msFullscreenElement == this.$el\n    );\n  }\n}\n","import { BasePlugin } from \"@/plugin\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@core\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    userId?: number;\r\n    authorId?: number;\r\n    login?: () => Promise<void>;\r\n  }\r\n  interface PlayerEventMap {\r\n    login: (userId: number) => void;\r\n  }\r\n  interface PlayerOptions {\r\n    userId?: number;\r\n  }\r\n  interface PlayerInvokes {\r\n    login?: () => Promise<number>;\r\n  }\r\n  interface PlayerPlugins {\r\n    user?: User;\r\n  }\r\n  interface VideoInfo {\r\n    author?: {\r\n      id: number;\r\n    };\r\n  }\r\n}\r\n\r\nexport default class User extends BasePlugin {\r\n  static pluginName = \"user\";\r\n  private _userId = 0;\r\n  private _authorId = 0;\r\n\r\n  get invokeLogin() {\r\n    return this.player.invokes.login;\r\n  }\r\n  init() {\r\n    this.player.define(\"userId\", { get: () => this._userId });\r\n    this.player.define(\"authorId\", { get: () => this._authorId });\r\n    this.player.define(\"login\", () => {\r\n      return this.login();\r\n    });\r\n    this.player.on(\"videoChange\", ({ author }) => {\r\n      if (author?.id != null) {\r\n        this._authorId = author.id || 0;\r\n      }\r\n    });\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this._userId = options.userId || 0;\r\n  }\r\n  /** 调用页面登录 */\r\n  async login() {\r\n    await this.invokeLogin?.().then((res) => {\r\n      res != null && this.setUser(res);\r\n    });\r\n  }\r\n  /** 设置用户 */\r\n  async setUser(userId: number) {\r\n    this._userId = userId;\r\n    this.player.emit(\"login\", userId);\r\n  }\r\n}\r\n","import type { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { debounce } from \"@/utils\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    /** 是否为活跃状态 */\r\n    isActive?: boolean;\r\n    /** 是否为操作中状态 */\r\n    isControlled?: boolean;\r\n    /** 设置活跃状态 */\r\n    setActive?: () => void;\r\n    /** 移除活跃状态 */\r\n    removeActive?: () => void;\r\n  }\r\n  interface PlayerOptions {\r\n    /** 活跃持续时间 */\r\n    activeDuration?: number;\r\n  }\r\n  interface PlayerEventMap {\r\n    active: () => void;\r\n    inactive: () => void;\r\n  }\r\n  interface PlayerHookMap {\r\n    inactive: void;\r\n  }\r\n  interface PlayerPlugins {\r\n    stateActive?: StateActive;\r\n  }\r\n}\r\n\r\n/** 活跃状态插件 */\r\n\r\nexport default class StateActive extends BasePlugin {\r\n  static readonly pluginName = \"stateActive\";\r\n  #status = false;\r\n  #mousemove = false;\r\n  /** 活跃持续时间 */\r\n  public activeDuration: number = 3000;\r\n  constructor(player: Player) {\r\n    super(player);\r\n\r\n    // --- 绑定属性 --- //\r\n    this.player.define(\"isActive\", {\r\n      get: () => this.#status,\r\n    });\r\n\r\n    // --- 绑定事件 --- //\r\n    const debounceRemoveActive = debounce(() => {\r\n      this.#mousemove = false;\r\n      this.remove();\r\n    }, this.activeDuration);\r\n    this.player.$main.addEventListener(\"mousemove\", () => {\r\n      this.#mousemove = true;\r\n      this.set();\r\n      debounceRemoveActive();\r\n    });\r\n    this.player.$main.addEventListener(\"mouseleave\", () => {\r\n      this.#mousemove = false;\r\n      this.remove();\r\n    });\r\n  }\r\n\r\n  apply(player: Player, options: PlayerOptions) {\r\n    this.activeDuration = options.activeDuration ?? 3000;\r\n  }\r\n\r\n  /** 设置播放器活跃状态 */\r\n  set() {\r\n    if (this.#status) return;\r\n    this.player.$el.classList.add(\"is-active\");\r\n    this.#status = true;\r\n    this.player.emit(\"active\");\r\n  }\r\n  /** 移除播放器活跃状态 */\r\n  remove() {\r\n    if (!this.#status || this.#mousemove || this.player.isControlled) return;\r\n    this.player.hook.call(\"inactive\").then((res) => {\r\n      if (!res) return;\r\n      this.player.$el.classList.remove(\"is-active\");\r\n      this.#status = false;\r\n      this.player.emit(\"inactive\");\r\n    });\r\n  }\r\n}\r\n","import type { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    /** 是否为聚焦状态 */\r\n    isFocused?: boolean;\r\n    /** 播放器聚焦 */\r\n    focus?: () => void;\r\n    /** 播放器取消聚焦 */\r\n    blur?: () => void;\r\n  }\r\n  interface PlayerEventMap {\r\n    focus: () => void;\r\n    blur: () => void;\r\n  }\r\n}\r\n\r\n/** 聚焦状态插件 */\r\n\r\nexport default class StateFocus extends BasePlugin {\r\n  static readonly pluginName = \"stateFocus\";\r\n  constructor(player: Player) {\r\n    super(player);\r\n\r\n    // --- 绑定属性 --- //\r\n    this.player.define(\"isFocused\", {\r\n      get: () => this.status,\r\n    });\r\n\r\n    // --- 绑定事件 --- //\r\n    document.addEventListener(\r\n      \"click\",\r\n      () => {\r\n        this.toggle(false);\r\n      },\r\n      true\r\n    );\r\n    this.player.$el.addEventListener(\r\n      \"click\",\r\n      () => {\r\n        this.toggle(true);\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  /** 设置播放器聚焦状态 */\r\n  toggle(flag: boolean) {\r\n    if (this.status == flag) return;\r\n    this.player.$el.classList.toggle(\"is-focus\", flag);\r\n    this.player.emit(flag ? \"focus\" : \"blur\");\r\n  }\r\n\r\n  get status() {\r\n    return this.player.$el.classList.contains(\"is-focus\");\r\n  }\r\n}\r\n","var resizeObservers = [];\nexport { resizeObservers };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","export var freeze = function (obj) { return Object.freeze(obj); };\n","import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n","import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","import type { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { ResizeObserver as ResizeObserverPonyfill } from \"@juggle/resize-observer\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerEventMap {\r\n    resize: (size: [number, number]) => void;\r\n  }\r\n}\r\n\r\n/** 尺寸更改状态插件 */\r\n\r\nexport default class StateResize extends BasePlugin {\r\n  static readonly pluginName = \"stateResize\";\r\n  private readonly observer?: ResizeObserver;\r\n  constructor(player: Player) {\r\n    super(player);\r\n\r\n    // --- 初始化observer --- //\r\n    const Observer = window.ResizeObserver || ResizeObserverPonyfill;\r\n    if (Observer) {\r\n      this.observer = new Observer(([item]) => {\r\n        const { width, height } = item.contentRect;\r\n        this.player.emit(\"resize\", [width, height]);\r\n      });\r\n    }\r\n  }\r\n  mounted() {\r\n    this.observer?.observe(this.player.$el);\r\n  }\r\n}\r\n","import type { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    /** 是否与视口交叉 */\r\n    isIntersecting?: boolean;\r\n  }\r\n  interface PlayerEventMap {\r\n    intersection: (flag: boolean) => void;\r\n  }\r\n}\r\n\r\n/** 聚焦状态插件 */\r\n\r\nexport default class StateIntersecting extends BasePlugin {\r\n  static readonly pluginName = \"stateIntersecting\";\r\n  private _status = false;\r\n  private readonly observer?: IntersectionObserver;\r\n  constructor(player: Player) {\r\n    super(player);\r\n\r\n    // --- 绑定属性 --- //\r\n    this.player.define(\"isIntersecting\", {\r\n      get: () => this._status,\r\n    });\r\n\r\n    // --- 初始化observer --- //\r\n    if (window.IntersectionObserver) {\r\n      this.observer = new window.IntersectionObserver(([item]) => {\r\n        const { isIntersecting } = item;\r\n        this._status = isIntersecting;\r\n        this.player.emit(\"intersection\", isIntersecting);\r\n      });\r\n    }\r\n    this.player.once(\"mounted\", () => {\r\n      this.observer?.observe(this.player.$el);\r\n    });\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\r\nimport { createElement } from \"@/utils\";\r\nimport { Player, UIPlugin } from \"@core\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    /** 添加一条toast消息 */\r\n    toast?: (content: string | HTMLElement, duration?: number, close?: boolean) => ToastItem;\r\n  }\r\n\r\n  interface PlayerPlugins {\r\n    toast?: Toast;\r\n  }\r\n}\r\n\r\nexport interface ToastItem {\r\n  el: HTMLElement;\r\n  close(): void;\r\n}\r\n\r\nexport default class Toast extends UIPlugin {\r\n  static pluginName = \"toast\";\r\n  /** 默认toast持续时间 */\r\n  public defaultDuration = 5000;\r\n  constructor(player: Player) {\r\n    super(player, createElement(\"div\", { class: `${classPrefix}-toast` }));\r\n    this.player.$area.appendChild(this.$el);\r\n  }\r\n\r\n  init() {\r\n    this.player.define(\r\n      \"toast\",\r\n      (content: string | HTMLElement, duration?: number, close?: boolean) =>\r\n        this.append(content, duration, close)\r\n    );\r\n  }\r\n\r\n  /** 添加toast消息\r\n   * @param content 要发送的消息\r\n   * @param duration 持续时间(ms)\r\n   * @returns 消息id\r\n   */\r\n  public append(content: string | HTMLElement, duration?: number, close?: boolean) {\r\n    const item = this.createToastItem({ content, duration, close });\r\n    this.$el.appendChild(item.el);\r\n    return item;\r\n  }\r\n\r\n  /** 创建一个toast元素 */\r\n  protected createToastItem(opt: {\r\n    content: string | HTMLElement;\r\n    duration?: number;\r\n    close?: boolean;\r\n  }): ToastItem {\r\n    const el = createElement(\"div\", { class: `${classPrefix}-toast-item` });\r\n    const content = el.appendChild(\r\n      createElement(\"div\", { class: `${classPrefix}-toast-item-content` })\r\n    );\r\n    content.appendChild(typeof opt.content == \"object\" ? opt.content : new Text(opt.content));\r\n    const item = {\r\n      el,\r\n      close() {\r\n        this.el.remove();\r\n      },\r\n    };\r\n    if (opt.close) {\r\n      const button = el.appendChild(\r\n        createElement(\r\n          \"div\",\r\n          { class: `${classPrefix}-toast-item-close` },\r\n          /*html*/ `\r\n            <i class=\"mpicon-close\"></i>\r\n          `\r\n        )\r\n      );\r\n      button.onclick = () => {\r\n        item.close();\r\n      };\r\n    }\r\n    let timer = 0;\r\n    const closeHandler = () => {\r\n      item.close();\r\n      window.clearTimeout(timer);\r\n    };\r\n    timer = window.setTimeout(closeHandler, opt.duration || this.defaultDuration);\r\n    return item;\r\n  }\r\n\r\n  /** 移除toast消息 */\r\n  public remove(item: ToastItem) {\r\n    item.close();\r\n  }\r\n  /** 清除所有toast消息 */\r\n  public clear() {\r\n    this.$el.innerHTML = \"\";\r\n  }\r\n}\r\n","import ContextMenu from \"@plugins/ui/contextMenu\";\nimport Controller from \"@plugins/ui/controller\";\nimport {\n  ButtonPlay,\n  ButtonPrev,\n  ButtonNext,\n  LabelTime,\n  ButtonLoop,\n  ButtonPart,\n  ButtonVolume,\n  ButtonSettings,\n  ButtonPip,\n  ButtonFullscreen,\n} from \"@plugins/controls\";\nimport Hotkey from \"@plugins/hotkey\";\nimport Modal from \"@plugins/ui/modal\";\nimport Progress from \"@plugins/controls/progress\";\nimport Settings from \"@plugins/settings\";\nimport { PlayerOptions } from \"@/types\";\nimport Side from \"@plugins/ui/side\";\nimport Pip from \"@plugins/screen/pip\";\nimport Fullscreen from \"@plugins/screen/fullscreen\";\nimport User from \"@plugins/videoOptions/user\";\nimport StateActive from \"../state/stateActive\";\nimport StateFocus from \"../state/stateFocus\";\nimport StateResize from \"../state/stateResize\";\nimport StateIntersecting from \"../state/stateIntersecting\";\nimport Toast from \"@plugins/ui/toast\";\n\n/** 核心插件 */\nexport const corePlugins = [\n  StateActive,\n  StateFocus,\n  StateResize,\n  StateIntersecting,\n  Pip,\n  Fullscreen,\n];\n\n/** 基础插件 */\nexport const basicPlugins = [Modal, Side, Controller, Toast, Settings, Hotkey, ContextMenu, User];\n\n/** 基础控件 */\nexport const basicControls = [\n  Progress,\n  ButtonPlay,\n  ButtonPrev,\n  ButtonNext,\n  LabelTime,\n  ButtonLoop,\n  ButtonPart,\n  ButtonVolume,\n  ButtonSettings,\n  ButtonPip,\n  ButtonFullscreen,\n];\n\nexport const presetBasic = [...corePlugins, ...basicPlugins, ...basicControls];\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { Checkbox } from \"@/components\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerEventMap {\r\n    /** 分P连播 */\r\n    autoPartChange: (flag: boolean) => void;\r\n  }\r\n  interface PlayerOptions {\r\n    /** 分P连播 */\r\n    autoPart?: boolean;\r\n  }\r\n  interface PlayerSetValueMap {\r\n    /** 分P连播 */\r\n    autoPart: boolean;\r\n  }\r\n}\r\n\r\n/** 自动切换下一P */\r\n\r\nexport default class AutoPart extends BasePlugin {\r\n  static pluginName = \"autoPart\";\r\n  private _status = false;\r\n  protected checkbox?: Checkbox;\r\n  init() {\r\n    this.player.hook.register(\"end\", () => {\r\n      if (this.status) {\r\n        const { part, list } = this.player.getVideoInfo();\r\n        if (part != list?.length) {\r\n          this.player.next();\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    if (options.autoPart) this.toggle(true);\r\n  }\r\n  ready() {\r\n    if (this.plugins.settings) {\r\n      const container = document.createElement(\"div\");\r\n      this.checkbox = new Checkbox({\r\n        container,\r\n        value: this.status,\r\n        onToggle: (val) => {\r\n          this.toggle(val);\r\n          this.player.emit(\"setValue\", \"autoPart\", val);\r\n        },\r\n        label: \"分P连播\",\r\n      });\r\n      this.plugins.settings.$play.appendChild(container);\r\n    }\r\n  }\r\n  toggle(v: boolean) {\r\n    if (v) {\r\n      this._status = true;\r\n    } else {\r\n      this._status = false;\r\n    }\r\n    this.player.emit(\"autoPartChange\", v);\r\n  }\r\n  get status() {\r\n    return this._status;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { Checkbox } from \"@/components\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerEventMap {\r\n    /** 自动播放 */\r\n    autoPlayChange: (flag: boolean) => void;\r\n  }\r\n  interface PlayerSetValueMap {\r\n    /** 自动播放 */\r\n    autoPlay: boolean;\r\n  }\r\n}\r\n\r\n/** 启用自动播放设置 */\r\n\r\nexport default class AutoPlay extends BasePlugin {\r\n  static pluginName = \"autoPlay\";\r\n  private _status = false;\r\n  protected checkbox?: Checkbox;\r\n  apply(player: Player, options: PlayerOptions) {\r\n    if (options.autoPlay) this.toggle(true);\r\n  }\r\n  ready() {\r\n    if (this.plugins.settings) {\r\n      const container = document.createElement(\"div\");\r\n      this.checkbox = new Checkbox({\r\n        container,\r\n        value: this.status,\r\n        onToggle: (val) => {\r\n          this.toggle(val);\r\n          this.player.emit(\"setValue\", \"autoPlay\", val);\r\n        },\r\n        label: \"自动播放\",\r\n      });\r\n      this.plugins.settings.$play.appendChild(container);\r\n    }\r\n  }\r\n  toggle(v: boolean) {\r\n    if (v) {\r\n      this._status = true;\r\n    } else {\r\n      this._status = false;\r\n    }\r\n    this.player.emit(\"autoPlayChange\", v);\r\n  }\r\n  get status() {\r\n    return this._status;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { Checkbox } from \"@/components\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerEventMap {\r\n    /** 跳转到上次播放位置 */\r\n    autoSeekChange: (flag: boolean) => void;\r\n  }\r\n  interface PlayerOptions {\r\n    /** 跳转到上次播放位置 */\r\n    autoSeek?: boolean;\r\n    /** 上次播放的时间点(秒)，若存在time选项则此项失效 */\r\n    lastPosition?: number;\r\n  }\r\n  interface PlayerSetValueMap {\r\n    /** 跳转到上次播放位置 */\r\n    autoSeek: boolean;\r\n  }\r\n}\r\n\r\n/** 跳转到上次播放位置 */\r\n\r\nexport default class AutoSeek extends BasePlugin {\r\n  static pluginName = \"autoSeek\";\r\n  private _status = false;\r\n  protected checkbox?: Checkbox;\r\n\r\n  apply(player: Player, options: PlayerOptions) {\r\n    if (options.autoSeek) {\r\n      this.toggle(true);\r\n      if (!options.lastPosition) return;\r\n      this.player.once(\"loadedmetadata\", () => {\r\n        console.log(`ok: ${options.time} ${options.lastPosition}`);\r\n        !options.time && this.player.seek(Math.floor(options.lastPosition!));\r\n        options.autoPlay && this.player.play();\r\n      });\r\n    }\r\n  }\r\n\r\n  ready() {\r\n    if (this.plugins.settings) {\r\n      const container = document.createElement(\"div\");\r\n      this.checkbox = new Checkbox({\r\n        container,\r\n        value: this.status,\r\n        onToggle: (val) => {\r\n          this.toggle(val);\r\n          this.player.emit(\"setValue\", \"autoSeek\", val);\r\n        },\r\n        label: \"断点续播\",\r\n      });\r\n      this.plugins.settings.$play.appendChild(container);\r\n    }\r\n  }\r\n\r\n  toggle(v: boolean) {\r\n    if (v) {\r\n      this._status = true;\r\n    } else {\r\n      this._status = false;\r\n    }\r\n    this.player.emit(\"autoSeekChange\", v);\r\n  }\r\n  get status() {\r\n    return this._status;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { PlayerOptions } from \"@/types\";\r\n\r\nconst themeOptionsVars = {\r\n  primaryColor: \"--mp-primary-color\",\r\n  secondaryColor: \"--mp-secondary-color\",\r\n  borderRadius: \"--mp-border-radius\",\r\n  bgLight: \"--mp-bg-light\",\r\n  bgDark: \"--mp-bg-dark\",\r\n  bgBlack: \"--mp-bg-black\",\r\n};\r\n\r\nexport type ThemeOptions = Partial<Record<keyof typeof themeOptionsVars, string>>;\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    theme?: Theme;\r\n  }\r\n}\r\ndeclare module \"@core\" {\r\n  interface PlayerOptions {\r\n    theme?: ThemeOptions;\r\n    /** 颜色模式 */\r\n    colorScheme?: ThemeColorScheme;\r\n  }\r\n}\r\n\r\nexport type ThemeColorScheme = \"light\" | \"dark\" | \"auto\";\r\n\r\nexport default class Theme extends BasePlugin {\r\n  static pluginName = \"theme\";\r\n  private properties: ThemeOptions = {};\r\n  /** 绑定了主题变量的DOM元素 */\r\n  private themeElement: HTMLElement[];\r\n  /** 匹配暗黑模式 */\r\n  private _matchDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n  private _handleDarkScheme: (e: MediaQueryListEvent) => void;\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.themeElement = this.player.container ? [this.player.container] : [];\r\n    this._handleDarkScheme = (e) => {\r\n      this.player.$el.classList.toggle(\"mpui-dark\", e.matches);\r\n    };\r\n  }\r\n  init() {\r\n    this.player.define(\"theme\", { value: this });\r\n  }\r\n  apply(player: Player, options: PlayerOptions) {\r\n    this.setTheme(options.theme || {});\r\n  }\r\n  /** 设置主题 */\r\n  setTheme(theme: ThemeOptions) {\r\n    Object.assign(this.properties, theme);\r\n    this.themeElement.forEach((el) => {\r\n      let name: keyof ThemeOptions;\r\n      for (name in theme) {\r\n        el.style.setProperty(themeOptionsVars[name], theme[name]!);\r\n      }\r\n    });\r\n  }\r\n  /** 设置某个主题属性 */\r\n  set(name: keyof ThemeOptions, value: string) {\r\n    this.properties[name] = value;\r\n    this.themeElement.forEach((el) => {\r\n      el.style.setProperty(themeOptionsVars[name], value);\r\n    });\r\n  }\r\n  get(name: keyof ThemeOptions) {\r\n    return this.properties[name];\r\n  }\r\n  /** 为元素绑定主题变量 */\r\n  public bind(el: HTMLElement) {\r\n    this.themeElement.push(el);\r\n    let name: keyof typeof themeOptionsVars;\r\n    for (name in this.properties) {\r\n      const value = this.properties[name];\r\n      value && el.style.setProperty(themeOptionsVars[name], value);\r\n    }\r\n  }\r\n  setColorScheme(scheme: ThemeColorScheme) {\r\n    this.player.$el.classList.toggle(\"mpui-dark\", scheme == \"dark\");\r\n    if (scheme == \"auto\") {\r\n      this._matchDarkScheme.addEventListener(\"change\", this._handleDarkScheme);\r\n    } else {\r\n      this._matchDarkScheme.removeEventListener(\"change\", this._handleDarkScheme);\r\n    }\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { PlayerOptions, VideoInfo } from \"@/types\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    part?: Part;\r\n  }\r\n\r\n  export interface VideoInfo {\r\n    /** 视频分P列表 */\r\n    list?: Omit<VideoInfo, \"list\" | \"part\">[];\r\n    /** 要播放的分P */\r\n    part?: number;\r\n  }\r\n\r\n  export interface PlayerEventMap {\r\n    partListChange: (list: VideoInfo[]) => void;\r\n    partChange: (part: number) => void;\r\n  }\r\n}\r\n\r\n/** 视频分P功能，将多段视频作为一个分P视频加载 */\r\n\r\nexport default class Part extends BasePlugin {\r\n  static pluginName = \"part\";\r\n  constructor(player: Player) {\r\n    super(player);\r\n  }\r\n  baseVideoInfo: VideoInfo | null = null;\r\n  init() {\r\n    this.player.hook.register(\r\n      \"video.set\",\r\n      (info) => {\r\n        // 如果基本信息中的part与当前传入的part不一致，则更改当前分P列表\r\n        if (!this.baseVideoInfo?.list || this.baseVideoInfo?.list != info.list) {\r\n          this.baseVideoInfo = { ...info };\r\n          this.player.emit(\"partListChange\", []);\r\n        }\r\n        // 如果视频信息中存在list，则直接设置part\r\n        if (info.list) {\r\n          info.part ||= 1;\r\n          Object.assign(info, info.list[info.part - 1]);\r\n          info.hasNext ||= info.part! < info.list.length;\r\n          info.hasPrev ||= info.part! > 1;\r\n          this.player.emit(\"partChange\", info.part);\r\n        } else {\r\n          this.player.emit(\"partChange\", 1);\r\n        }\r\n      },\r\n      true\r\n    );\r\n    this.player.hook.register(\"next\", () => {\r\n      // 如果视频信息中有list，且part<list.length，则设置下一P\r\n      if (this.list && this.part! < this.num) {\r\n        this.set(this.part + 1);\r\n        return false;\r\n      }\r\n    });\r\n    this.player.hook.register(\"prev\", () => {\r\n      // 如果视频信息中有list，且part>1，则设置上一P\r\n      if (this.list && this.part! > 1) {\r\n        this.set(this.part - 1);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n  /** 设置分P */\r\n  set(p: number, play?: boolean) {\r\n    const info = this.player.getVideoInfo();\r\n    if (p > 0 && p <= (info.list?.length || 0)) {\r\n      this.player.setVideo(\r\n        {\r\n          ...this.baseVideoInfo,\r\n          part: p,\r\n        },\r\n        play ?? !this.player.paused\r\n      );\r\n    }\r\n  }\r\n  get num() {\r\n    return this.player.getVideoInfo().list?.length || 0;\r\n  }\r\n  get list() {\r\n    return this.player.getVideoInfo().list || [];\r\n  }\r\n  get part() {\r\n    return this.player.getVideoInfo().part || 1;\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { LoadInfo, PlayerOptions } from \"@/types\";\r\n\r\nexport default class Seamless extends BasePlugin {\r\n  static pluginName = \"seamless\";\r\n  constructor(player: Player) {\r\n    super(player);\r\n  }\r\n  /** 无缝加载视频 */\r\n  load(info: LoadInfo) {\r\n    this.player.emit(\"videoLoad\", info);\r\n    const { url, type, play, time } = info;\r\n    const oldVideo = this.player.$video;\r\n    const video = oldVideo.cloneNode() as HTMLVideoElement;\r\n    const controller = this.player.loader.create(info, video);\r\n    video.addEventListener(\r\n      \"loadedmetadata\",\r\n      () => {\r\n        this.player.$content.insertBefore(video, oldVideo);\r\n        const t = time === true ? this.player.currentTime : time || 0;\r\n        video.currentTime = t;\r\n        !this.player.paused && video.play();\r\n        video.addEventListener(\r\n          \"canplay\",\r\n          () => {\r\n            this.player.emit(\"videoLoad\", info);\r\n            this.player.isPip && video.requestPictureInPicture();\r\n            this.player.attachMediaController(controller);\r\n            oldVideo.remove();\r\n            play == true && this.player.paused && this.player.play();\r\n            play == false && !this.player.paused && this.player.pause();\r\n          },\r\n          { once: true }\r\n        );\r\n      },\r\n      { once: true }\r\n    );\r\n  }\r\n  ready() {\r\n    this.player.hook.register(\"video.load\", (ctx) => {\r\n      /** 加载视频时，只有设置为从当前播放时间加载才能自动无缝加载 */\r\n      if (ctx.time !== true) return;\r\n      this.load(ctx);\r\n      this.player.emit(\"videoLoad\", ctx);\r\n      return false;\r\n    });\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { html, render } from \"lit-html\";\r\nimport { VideoInfo } from \"@/types\";\r\nimport { PanelPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateList = (list: Omit<VideoInfo, \"list\" | \"part\">[], setPart: (p: number) => void) =>\r\n  list.map(\r\n    ({ title }, index) => html`\r\n      <li\r\n        class=\"${classPrefix}-partlist-item\"\r\n        @click=${() => {\r\n          setPart(index + 1);\r\n        }}\r\n        data-part=\"${index + 1}\"\r\n      >\r\n        <div class=\"${classPrefix}-partlist-item-id\">P${index + 1}</div>\r\n        <div class=\"${classPrefix}-partlist-item-title\">${title}</div>\r\n      </li>\r\n    `\r\n  );\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    partList?: PartList;\r\n  }\r\n}\r\n/** 分P列表面板 */\r\nexport default class PartList extends PanelPlugin {\r\n  static pluginName = \"partList\";\r\n\r\n  title = \"分P列表\";\r\n  $list: HTMLElement;\r\n  private _part = 0;\r\n  private _list: VideoInfo[\"list\"] = [];\r\n\r\n  constructor(player: Player) {\r\n    super(player, createElement(\"div\", { class: `${classPrefix}-partlist` }));\r\n    this.$list = this.$el.appendChild(\r\n      createElement(\"ul\", { class: `${classPrefix}-partlist-list mpui-list` })\r\n    );\r\n  }\r\n  init() {\r\n    this.player.on(\"videoChange\", (v) => {\r\n      this._update(v.list);\r\n      this._select(v.part || 1);\r\n    });\r\n  }\r\n  private _update(list: VideoInfo[\"list\"]) {\r\n    if (list == this._list) return;\r\n    this._list = list;\r\n    render(\r\n      templateList(list || [], (p) => {\r\n        this.plugins.part?.set(p);\r\n      }),\r\n      this.$list\r\n    );\r\n  }\r\n  private _select(p: number) {\r\n    this.$list.querySelector(`li[data-part=\"${this._part}\"]`)?.classList.remove(\"is-selected\");\r\n    this._part = p;\r\n    this.$list.querySelector(`li[data-part=\"${p}\"]`)?.classList.add(\"is-selected\");\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport { ControlsPlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\n\nconst templateHTML = /*html*/ `\n  <div class=\"\">\n    <div class=\"${classPrefix}-controls-button-icon\">\n      <div class=\"${classPrefix}-controls-button-text\">弹幕列表</div>\n    </div>\n    <div class=\"mpui-tooltip\">弹幕列表</div>\n  </div>\n`;\n\nexport default class ButtonDanmakulist extends ControlsPlugin {\n  static pluginName = \"buttonDanmakuList\";\n\n  $icon: HTMLElement;\n  $tooltip: HTMLElement;\n  $text: HTMLElement;\n\n  constructor(player: Player) {\n    super(\n      player,\n      createElement(\n        \"div\",\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-danmakulist` },\n        templateHTML\n      )\n    );\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\n    this.$text = this.$(`.${classPrefix}-controls-button-text`);\n    this.$tooltip = this.$(\".mpui-tooltip\");\n  }\n\n  init() {\n    this.$icon.addEventListener(\"click\", () => {\n      (this.plugins as any).danmakuList?.toggle();\n    });\n  }\n}\n","import { BasePlugin } from \"@/plugin\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    quality?: Quality;\r\n  }\r\n}\r\n\r\ndeclare module \"@core\" {\r\n  export interface PlayerEventMap {\r\n    /** 视频质量切换 */\r\n    qualityChanging: (quality: QualityItem) => void;\r\n    /** 视频质量切换完毕 */\r\n    qualityChanged: (quality: QualityItem) => void;\r\n    /** 视频质量切换失败 */\r\n    qualityChangeFailed: (quality: QualityItem) => void;\r\n    /** 视频质量列表更新 */\r\n    qualityListUpdate: (quality: QualityItem[]) => void;\r\n  }\r\n}\r\n\r\nexport interface VideoSource {\r\n  url: string;\r\n  type: string;\r\n  label?: string;\r\n  quality?: string;\r\n}\r\nexport interface QualityItem {\r\n  /** 宽度 */\r\n  width?: number;\r\n  /** 高度 */\r\n  height?: number;\r\n  /** 帧率 */\r\n  frameRate?: number;\r\n  /** 码率 */\r\n  bitRate?: number;\r\n  /** 视频源url */\r\n  url?: string;\r\n  /** 视频类型 */\r\n  type?: string;\r\n  /** 视频质量描述 */\r\n  quality?: string;\r\n  /** 默认质量 */\r\n  isDefault?: boolean;\r\n  /** 视频质量切换逻辑 */\r\n  change?: (url?: string) => Promise<void>;\r\n}\r\n\r\nexport default class Quality extends BasePlugin {\r\n  static pluginName = \"quality\";\r\n  /** 当前视频质量 */\r\n  current: QualityItem | null = null;\r\n  /** 目标切换视频质量 */\r\n  target: QualityItem | null = null;\r\n  /** 视频质量列表 */\r\n  list: QualityItem[] = [];\r\n  init() {\r\n    this.player.hook.register(\"video.set\", () => {\r\n      this.current = null;\r\n      this.target = null;\r\n      this.list = [];\r\n    });\r\n  }\r\n  apply(): void {\r\n    this.player.define(\"quality\", { value: this });\r\n  }\r\n  /** 切换视频质量 */\r\n  set(item: string | QualityItem) {\r\n    let quality: QualityItem;\r\n    if (typeof item == \"string\") {\r\n      const result = this.list.find((item) => quality === item.quality);\r\n      if (!result) {\r\n        this._emitChangeFailed({});\r\n        return;\r\n      }\r\n      quality = result;\r\n    } else {\r\n      quality = item;\r\n    }\r\n    if (quality.change) {\r\n      quality.change(quality.url).then(\r\n        () => {\r\n          this.updateCurrent(quality);\r\n        },\r\n        () => {\r\n          this._emitChangeFailed(quality);\r\n        }\r\n      );\r\n    } else if (quality.url) {\r\n      this.player.loadVideo({ url: quality.url, type: quality.type, play: true, time: true });\r\n      this.player.once(\"canplay\", () => {\r\n        this.updateCurrent(quality);\r\n      });\r\n    }\r\n  }\r\n  private _emitChangeFailed(quality: QualityItem) {\r\n    this.target = null;\r\n    this.player.emit(\"qualityChangeFailed\", quality);\r\n  }\r\n  /** 更新当前视频质量 */\r\n  async updateCurrent(quality: QualityItem) {\r\n    this.current = quality;\r\n    this.target = null;\r\n    this.player.emit(\"qualityChanged\", quality);\r\n  }\r\n  /** 更新视频质量列表 */\r\n  async updateList(list: QualityItem[]) {\r\n    this.list = list;\r\n    this.player.emit(\"qualityListUpdate\", list);\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { QualityItem } from \"@plugins/quality\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <div class=\"${classPrefix}-controls-button-text\">自动</div>\r\n  </div>\r\n  <div class=\"${classPrefix}-controls-panel-wrap\">\r\n    <div class=\"${classPrefix}-controls-panel\">\r\n      <ul class=\"${classPrefix}-button-quality-list\"></ul>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\ndeclare module \"@plugins/quality\" {\r\n  interface QualityItem {\r\n    label?: string | HTMLElement;\r\n    buttonLabel?: string | HTMLElement;\r\n  }\r\n}\r\n\r\nexport default class ButtonQuality extends ControlsPlugin {\r\n  static pluginName = \"buttonQuality\";\r\n\r\n  $icon: HTMLElement;\r\n  $text: HTMLElement;\r\n  $panel: HTMLElement;\r\n\r\n  $list: HTMLElement;\r\n\r\n  private _itemMap = new Map<QualityItem, HTMLElement>();\r\n\r\n  /** 获取label */\r\n  getLabel?: (quality: QualityItem) => string | HTMLElement;\r\n  /** 获取按钮label */\r\n  getButtonLabel?: (quality: QualityItem) => string | HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-quality` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$text = this.$(`.${classPrefix}-controls-button-text`);\r\n    this.$panel = this.$(`.${classPrefix}-controls-panel`);\r\n\r\n    this.$list = this.$(`.${classPrefix}-button-quality-list`);\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"qualityListUpdate\", (list) => {\r\n      this._updateList(list);\r\n    });\r\n    this.player.on(\"qualityChanging\", (quality) => {\r\n      this._updateItem(quality);\r\n    });\r\n    this.player.on(\"qualityChanged\", (quality) => {\r\n      this._updateItem(quality);\r\n    });\r\n    this.player.on(\"qualityChangeFailed\", () => {\r\n      this._updateItem(this.player.quality!.current || {});\r\n    });\r\n  }\r\n\r\n  private _updateList(list: QualityItem[]) {\r\n    this._itemMap = new Map();\r\n    if (!list.length) {\r\n      this.$panel.style.display = \"none\";\r\n      this.$icon.style.cursor = \"default\";\r\n    } else {\r\n      this.$panel.style.display = \"\";\r\n      this.$icon.style.cursor = \"\";\r\n    }\r\n    this.$list.innerHTML = \"\";\r\n    const fragment = new DocumentFragment();\r\n    list?.forEach((quality) => {\r\n      const label = quality.label || this.getLabel?.(quality) || quality.quality;\r\n      if (label) {\r\n        const item = createElement(\r\n          \"li\",\r\n          {\r\n            class: `${classPrefix}-button-quality-item`,\r\n            \"data-value\": quality.quality || \"\",\r\n          },\r\n          typeof label == \"string\" ? new Text(label) : label\r\n        );\r\n        item.onclick = () => {\r\n          this.player.quality?.set(quality);\r\n        };\r\n        this._itemMap.set(quality, item);\r\n        fragment.appendChild(item);\r\n      }\r\n    });\r\n    this.$list.appendChild(fragment);\r\n  }\r\n\r\n  private _updateItem(quality: QualityItem) {\r\n    // 更新label内容\r\n    const label =\r\n      quality.buttonLabel ||\r\n      this.getButtonLabel?.(quality) ||\r\n      (typeof quality.label == \"object\" ? quality.label.cloneNode(true) : quality.label) ||\r\n      this.getLabel?.(quality) ||\r\n      quality.quality;\r\n\r\n    if (!label) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n      if (typeof label == \"string\") {\r\n        this.$text.innerText = label;\r\n      } else {\r\n        this.$text.innerHTML = \"\";\r\n        this.$text.appendChild(label);\r\n      }\r\n    }\r\n    // 更新列表checked\r\n    this.$list.querySelectorAll(\"li\").forEach((item) => {\r\n      item.classList.toggle(\"is-checked\", item == this._itemMap.get(quality));\r\n    });\r\n  }\r\n  get ignored() {\r\n    return !this.player.quality;\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\nimport { UIPlugin } from \"@/plugin\";\nimport { createElement, debounce } from \"@/utils\";\nimport { Player } from \"@/player\";\n\ndeclare module \"@core\" {\n  interface PlayerEventMap {\n    hotkeyVolume: () => void;\n  }\n}\n\nconst templateHTML = /*html*/ `\n  <div class=\"${classPrefix}-videostatus-paused\"></div>\n  <div class=\"${classPrefix}-videostatus-loading\">\n    <div class=\"${classPrefix}-videostatus-loading-icon\">\n      <span>L</span>\n      <span>O</span>\n      <span>A</span>\n      <span>D</span>\n      <span>I</span>\n      <span>N</span>\n      <span>G</span>\n    </div>\n    <div class=\"${classPrefix}-videostatus-loading-content\">正在缓冲</div>\n    <div class=\"${classPrefix}-videostatus-loading-speed\"></div>\n  </div>\n  <div class=\"${classPrefix}-videostatus-volume\"></div>\n`;\n\n/** 视频状态显示 */\n\nexport default class VideoStatus extends UIPlugin {\n  static pluginName = \"videoStatus\";\n  $paused: HTMLElement;\n  $loading: HTMLElement;\n  $volume: HTMLElement;\n  constructor(player: Player) {\n    super(player, createElement(\"div\", { class: `${classPrefix}-videostatus` }, templateHTML));\n    this.$paused = this.$(`.${classPrefix}-videostatus-paused`);\n    this.$loading = this.$(`.${classPrefix}-videostatus-loading`);\n    this.$volume = this.$(`.${classPrefix}-videostatus-volume`);\n\n    this.player.$area.appendChild(this.$el);\n    this.player.on(\"volumechange\", (volume, muted) => {\n      if (muted && volume > 0) {\n        this.$volume.innerText = \"已静音\";\n      } else {\n        this.$volume.innerText = `音量 | ${Math.round(volume * 100)}%`;\n      }\n    });\n    const debounceHide = debounce(() => this.hideVolume(), 3000);\n    this.player.on(\"hotkeyVolume\", () => {\n      this.showVolume();\n      debounceHide();\n    });\n  }\n  ready(player: Player): void {\n    this.$volume.innerText = player.muted ? \"已静音\" : `音量 | ${Math.round(player.volume * 100)}%`;\n  }\n  protected showVolume() {\n    this.$volume.classList.add(\"is-show\");\n  }\n  protected hideVolume() {\n    this.$volume.classList.remove(\"is-show\");\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport { UIPlugin } from \"@/plugin\";\nimport { PlayerOptions } from \"@/types\";\nimport { createElement } from \"@/utils\";\nimport { Player } from \"@/player\";\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    loadingMask?: {\n      delay?: number;\n      getTips?: () => Promise<string | Node>;\n    };\n  }\n}\n\nconst templateHTML = /*html*/ `\n  <div class=\"${classPrefix}-loadingmask-icon\">\n    <div class=\"${classPrefix}-loadingmask-image\"></div>\n  </div>\n  <div class=\"${classPrefix}-loadingmask-info\"></div>\n  <div class=\"${classPrefix}-loadingmask-tips\">Loading...</div>\n`;\n\n/** 加载画面 */\n\nexport default class LoadingMask extends UIPlugin {\n  static pluginName = \"loadingMask\";\n  $info: HTMLElement;\n  $tips: HTMLElement;\n  getTips?: () => Promise<string | Node>;\n  delay: number = 0;\n\n  constructor(player: Player) {\n    super(player, createElement(\"div\", { class: `${classPrefix}-loadingmask` }, templateHTML));\n    this.$info = this.$(`.${classPrefix}-loadingmask-info`);\n    this.$tips = this.$(`.${classPrefix}-loadingmask-tips`);\n\n    this.player.$main.appendChild(this.$el);\n    /* if (!this.api?.loadingTips) {\n      this.$tips.style.display = \"none\";\n    } */\n  }\n  apply(player: Player, options: PlayerOptions): void {\n    this.getTips = options.loadingMask?.getTips;\n    this.delay = options.loadingMask?.delay || 0;\n  }\n  init() {\n    this._toggle(true);\n    this._add(\"init\", \"播放器初始化…\");\n    this.player.on(\"danmaku:loading\", () => {\n      this._add(\"danmaku\", \"请求弹幕数据中…\");\n    });\n    this.player.on(\"danmaku:loaded\", (dan) => {\n      this._change(\"danmaku\", (line) => {\n        line.innerText = \"请求弹幕数据中… [完成]\";\n      });\n    });\n    this.player.on(\"danmaku:loadFailed\", (err) => {\n      this._change(\"danmaku\", (line) => {\n        line.innerText = `请求弹幕数据中… [失败] ${err}`;\n      });\n    });\n    this.player.on(\"videoChange\", async () => {\n      this._toggle(true);\n      this._tips(await this.getTips?.());\n    });\n    this.player.on(\"videoLoad\", () => {\n      this._add(\"video\", \"请求视频数据中…\");\n\n      this.player.once(\"canplay\", () => {\n        this._change(\"video\", (line) => {\n          line.innerText = \"请求视频数据中… [完成]\";\n          let timer = 0;\n          const handler = () => {\n            this._toggle(false);\n            this._tips(\"Loading...\");\n            this._clear();\n            window.clearTimeout(timer);\n          };\n          if (this.delay) {\n            timer = window.setTimeout(handler, this.delay);\n          } else {\n            handler();\n          }\n        });\n      });\n      this.player.$video.addEventListener(\n        \"error\",\n        (err) => {\n          this._change(\"video\", (line) => {\n            line.innerText = `请求视频数据中… [失败] ${err}`;\n          });\n        },\n        { once: true }\n      );\n    });\n    this.player.on(\"error\", (err) => {\n      this._add(\"error\", `${err}`);\n    });\n  }\n  ready() {\n    this._change(\"init\", (line) => {\n      line.innerText = \"播放器初始化… [完成]\";\n    });\n  }\n  private _clear() {\n    this.$info.innerHTML = \"\";\n  }\n  private _add(id: string, content: string | Node) {\n    const item = createElement(\"div\", { class: `${classPrefix}-loadingmask-info-item` });\n    item.dataset.id = id;\n    item.append(content);\n    this.$info.appendChild(item);\n  }\n  private _change(id: string, func: (line: HTMLElement) => void) {\n    const item: HTMLElement | null = this.$info.querySelector(`[data-id=\"${id}\"]`);\n    item && func(item);\n  }\n  private _toggle(flag: boolean) {\n    this.$el.classList.toggle(\"is-show\", flag);\n  }\n  private _tips(content?: string | Node) {\n    this.$tips.innerHTML = \"\";\n    content && this.$tips.append(content);\n  }\n}\n","import { classPrefix } from \"@/config\";\nimport { Player } from \"@/player\";\nimport { createElement } from \"@/utils\";\nimport { ControlsPlugin } from \"@/plugin\";\n\nexport default class DanmakuCount extends ControlsPlugin {\n  static pluginName = \"danmakuCount\";\n\n  $value: HTMLElement;\n\n  get count() {\n    return this.player.plugins.danmakuEngine?.count || 0;\n  }\n\n  constructor(player: Player) {\n    super(\n      player,\n      createElement(\n        \"div\",\n        { class: `${classPrefix}-danmakucount`, title: \"已装填弹幕总数\" },\n        /*html*/ `弹幕数 <span class=\"${classPrefix}-danmakucount-value\">0</span>`\n      )\n    );\n\n    this.$value = this.$(`.${classPrefix}-danmakucount-value`)!;\n  }\n\n  init() {\n    this.player.on(\"danmaku:clear\", () => {\n      this.updateCount(0);\n    });\n    this.player.on(\"danmaku:add\", () => {\n      this.updateCount(this.count);\n    });\n    this.player.on(\"danmaku:remove\", () => {\n      this.updateCount(this.count);\n    });\n  }\n\n  protected updateCount(count: number) {\n    this.$value.innerText = `${count}`;\n    this.$el.title = `已装填弹幕总数：${count}`;\n  }\n}\n","import { classPrefix } from \"@/config\";\r\nimport { Player } from \"@/player\";\r\n\r\nimport { BasePlugin, ControlsItem, PluginFrom } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\nimport { PlayerOptions } from \"@core\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-header-mask\"></div>\r\n  <div class=\"${classPrefix}-header-main mpui-crystal\">\r\n    <div class=\"${classPrefix}-header-left\"></div>\r\n    <div class=\"${classPrefix}-header-center\"></div>\r\n    <div class=\"${classPrefix}-header-right\"></div>\r\n  </div>\r\n`;\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    header?: Header;\r\n  }\r\n  interface PlayerOptions {\r\n    header?: { controls?: HeaderControls };\r\n  }\r\n}\r\nexport interface HeaderControls {\r\n  left?: PluginFrom<ControlsItem>[];\r\n  center?: PluginFrom<ControlsItem>[];\r\n  right?: PluginFrom<ControlsItem>[];\r\n}\r\n\r\n/** 控制栏 */\r\nexport default class Header extends BasePlugin {\r\n  static pluginName = \"header\";\r\n  player: Player;\r\n  $el: HTMLElement;\r\n  $main: HTMLElement;\r\n  $left: HTMLElement;\r\n  $center: HTMLElement;\r\n  $right: HTMLElement;\r\n\r\n  isHover = false;\r\n\r\n  protected inactiveHook: () => boolean;\r\n  protected mouseEnterHandler: () => void;\r\n  protected mouseLeaveHandler: () => void;\r\n  protected controls: HeaderControls = {};\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.player = player;\r\n    this.$el = createElement(\"div\", { class: `${classPrefix}-header` }, templateHTML);\r\n    this.$main = this.$el.querySelector(`.${classPrefix}-header-main`)!;\r\n    this.$left = this.$el.querySelector(`.${classPrefix}-header-left`)!;\r\n    this.$center = this.$el.querySelector(`.${classPrefix}-header-center`)!;\r\n    this.$right = this.$el.querySelector(`.${classPrefix}-header-right`)!;\r\n    this.player.$main.append(this.$el);\r\n\r\n    this.inactiveHook = () => !this.isHover;\r\n    this.mouseEnterHandler = () => {\r\n      this.isHover = true;\r\n    };\r\n    this.mouseLeaveHandler = () => {\r\n      this.isHover = false;\r\n    };\r\n  }\r\n  init() {\r\n    this.player.hook.register(\"inactive\", this.inactiveHook);\r\n    this.$el.addEventListener(\"mouseenter\", this.mouseEnterHandler);\r\n    this.$el.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\r\n  }\r\n  apply(player: Player, options: PlayerOptions) {\r\n    this.controls = options.header?.controls || {};\r\n  }\r\n  ready() {\r\n    this.setControls(this.controls);\r\n  }\r\n  /** 更新控制组件 */\r\n  setControls(controls: HeaderControls) {\r\n    this.controls = controls;\r\n    const { left, center, right } = controls;\r\n    this.build(this.$left, left);\r\n    this.build(this.$center, center);\r\n    this.build(this.$right, right);\r\n  }\r\n  protected build(container: HTMLElement, list?: PluginFrom<ControlsItem>[]) {\r\n    container.innerHTML = \"\";\r\n    const fragment = new DocumentFragment();\r\n    list?.forEach((item) => {\r\n      const el = this.player.plugin.from<ControlsItem>(item)?.$el;\r\n      if (el) fragment.appendChild(el);\r\n    });\r\n    container.appendChild(fragment);\r\n  }\r\n  destroy() {\r\n    this.player.hook.unregister(\"inactive\", this.inactiveHook);\r\n    this.$el.removeEventListener(\"mouseenter\", this.mouseEnterHandler);\r\n    this.$el.removeEventListener(\"mouseleave\", this.mouseLeaveHandler);\r\n  }\r\n}\r\n","import { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { Checkbox } from \"@/components\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerOptions {\r\n    /** 小窗播放 */\r\n    mini?: boolean;\r\n  }\r\n  interface PlayerEventMap {\r\n    miniChange: (flag: boolean) => void;\r\n  }\r\n  interface PlayerSetValueMap {\r\n    /** 小窗播放 */\r\n    mini: boolean;\r\n  }\r\n}\r\n\r\n/** 小窗播放器 */\r\n\r\nexport default class Mini extends BasePlugin {\r\n  static readonly pluginName = \"mini\";\r\n  /** 播放器小窗显示状态 */\r\n  #shown = false;\r\n  /** 播放器小窗拖动状态 */\r\n  #dragging = false;\r\n  /** 播放器小窗启用状态 */\r\n  #enabled = false;\r\n\r\n  $el: HTMLElement;\r\n  checkbox?: Checkbox;\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.$el = createElement(\"div\", { class: `${classPrefix}-mini` });\r\n    this.player.$el.appendChild(this.$el);\r\n    this.player.on(\"intersection\", (isIntersecting) => {\r\n      const disabled = !this.#enabled || this.player.isPip;\r\n      if (isIntersecting) {\r\n        !disabled && this._hide();\r\n      } else {\r\n        !disabled && this._show();\r\n      }\r\n      console.log(isIntersecting);\r\n    });\r\n    if (player.plugins.buttonSettings) {\r\n      const container = document.createElement(\"div\");\r\n      this.checkbox = new Checkbox({\r\n        container,\r\n        value: this.enabled,\r\n        onToggle: (val) => {\r\n          this.toggle(val);\r\n          this.player.emit(\"setValue\", \"mini\", val);\r\n        },\r\n        label: \"小窗模式\",\r\n      });\r\n      player.plugins.settings?.$others.appendChild(container);\r\n      player.on(\"miniChange\", (flag) => this.checkbox?.setValue(flag));\r\n    }\r\n  }\r\n\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    if (options.mini) this.#enabled = true;\r\n  }\r\n\r\n  init() {\r\n    this.$el.addEventListener(\"click\", () => {\r\n      !this.#dragging && (this.player.paused ? this.player.play : this.player.pause());\r\n    });\r\n    // 拖动操作\r\n    this.$el.addEventListener(\"mousedown\", (e) => {\r\n      const { clientX, clientY } = e;\r\n      const { offsetLeft, offsetTop } = this.$el;\r\n      console.log([offsetLeft, offsetTop]);\r\n      const mLeft = clientX - offsetLeft;\r\n      const mTop = clientY - offsetTop;\r\n      const mousemoveHandler = (e: MouseEvent) => {\r\n        this.#dragging = true;\r\n        const { clientX, clientY } = e;\r\n        this.$el.style.left = `${clientX - mLeft}px`;\r\n        this.$el.style.top = `${clientY - mTop}px`;\r\n      };\r\n      const mouseupHandler = () => {\r\n        this.$el.removeEventListener(\"mousemove\", mousemoveHandler);\r\n        document.removeEventListener(\"mouseup\", mouseupHandler);\r\n        requestAnimationFrame(() => {\r\n          this.#dragging = false;\r\n        });\r\n      };\r\n      this.$el.addEventListener(\"mousemove\", mousemoveHandler);\r\n      document.addEventListener(\"mouseup\", mouseupHandler);\r\n    });\r\n\r\n    this.player.on(\"enterpictureinpicture\", () => this._hide());\r\n    this.player.on(\"leavepictureinpicture\", () => !this.player.isIntersecting && this._show());\r\n  }\r\n\r\n  ready() {\r\n    this.enabled && this.toggle(true);\r\n  }\r\n\r\n  private _show() {\r\n    if (this.#shown) return;\r\n    this.player.$area.style.height = `${this.player.$area.clientHeight}px`;\r\n    this.$el.append(...this.player.$area.children);\r\n    this.$el.classList.add(\"is-show\");\r\n    this.#shown = true;\r\n  }\r\n  private _hide() {\r\n    if (!this.#shown) return;\r\n    this.player.$area.style.height = \"\";\r\n    this.player.$area.append(...this.$el.children);\r\n    this.$el.classList.remove(\"is-show\");\r\n    this.#shown = false;\r\n  }\r\n  /** 播放器小窗启用状态 */\r\n  get enabled() {\r\n    return this.#enabled;\r\n  }\r\n  /** 播放器小窗显示状态 */\r\n  get shown() {\r\n    return this.#shown;\r\n  }\r\n  toggle(flag: boolean) {\r\n    if (flag) {\r\n      if (this.enabled) return;\r\n      this.player.isIntersecting == false && this._show();\r\n      this.player.emit(\"miniChange\", true);\r\n    } else {\r\n      if (!this.enabled) return;\r\n      this._hide();\r\n      this.player.emit(\"miniChange\", false);\r\n    }\r\n\r\n    this.#enabled = flag;\r\n  }\r\n}\r\n","import { Checkbox } from \"@/components\";\r\nimport { Player } from \"@/player\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\nimport { classPrefix } from \"@/config\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerEventMap {\r\n    /** 关灯模式 */\r\n    lightOffChange: (flag: boolean) => void;\r\n  }\r\n}\r\n\r\n/** 关灯模式 */\r\n\r\nexport default class LightOff extends BasePlugin {\r\n  static pluginName = \"lightOff\";\r\n  status = false;\r\n  checkbox?: Checkbox;\r\n  $mask: HTMLElement;\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.$mask = createElement(\"div\", { class: `${classPrefix}-lightoff-mask` });\r\n    if (player.plugins.buttonSettings) {\r\n      const container = document.createElement(\"div\");\r\n      this.checkbox = new Checkbox({\r\n        container,\r\n        value: this.status,\r\n        onToggle: (val) => {\r\n          this.toggle(val);\r\n        },\r\n        label: \"关灯模式\",\r\n      });\r\n      player.plugins.settings?.$others.appendChild(container);\r\n      player.on(\"lightOffChange\", (flag) => this.checkbox?.setValue(flag));\r\n    }\r\n  }\r\n  ready() {\r\n    this.player.$el.append(this.$mask);\r\n  }\r\n  toggle(v: boolean) {\r\n    if (v) {\r\n      this.player.$el.classList.add(\"is-lightoff\");\r\n    } else {\r\n      this.player.$el.classList.remove(\"is-lightoff\");\r\n    }\r\n    this.player.emit(\"lightOffChange\", v);\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    /** 是否为网页全屏模式 */\r\n    isWebscreen?: boolean;\r\n    /** 进入网页全屏模式 */\r\n    enterWebscreen?: () => void;\r\n    /** 退出网页全屏模式 */\r\n    exitWebscreen?: () => void;\r\n  }\r\n  interface PlayerEventMap {\r\n    /** 进入网页全屏模式 */\r\n    webscreenEnter: () => void;\r\n    /** 退出网页全屏模式 */\r\n    webscreenExit: () => void;\r\n  }\r\n}\r\n\r\nexport default class Webscreen extends BasePlugin {\r\n  static pluginName = \"webscreen\";\r\n  init() {\r\n    // --- 绑定属性 --- //\r\n\r\n    this.player.define(\"isWebscreen\", {\r\n      get: () => this.status,\r\n    });\r\n    this.player.define(\"enterWebscreen\", () => this.enter());\r\n    this.player.define(\"exitWebscreen\", () => this.exit());\r\n\r\n    // --- 绑定事件 --- //\r\n\r\n    // 进入全屏模式时，退出网页全屏模式\r\n    this.player.on(\"fullscreenEnter\", () => {\r\n      this.exit();\r\n    });\r\n    // 进入网页全屏模式时，退出全屏模式\r\n    this.player.on(\"webscreenEnter\", () => {\r\n      this.player.exitFullscreen?.();\r\n    });\r\n  }\r\n\r\n  // --- 内置方法 --- //\r\n  /** 进入网页全屏 */\r\n  enter() {\r\n    if (this.status) return;\r\n    this.player.$el.classList.add(\"is-webscreen\");\r\n    this.player.emit(\"webscreenEnter\");\r\n  }\r\n  /** 退出网页全屏 */\r\n  exit() {\r\n    if (!this.status) return;\r\n    this.player.$el.classList.remove(\"is-webscreen\");\r\n    this.player.emit(\"webscreenExit\");\r\n  }\r\n  /** 当前状态 */\r\n  get status(): boolean {\r\n    return this.player.$el.classList.contains(\"is-webscreen\");\r\n  }\r\n}\r\n","import { DanmakuItem } from \"./types\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    danmaku?: Danmaku;\r\n  }\r\n}\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    danmaku?: Danmaku;\r\n  }\r\n}\r\n\r\n/** 弹幕模块\r\n *\r\n * 负责控制弹幕添加、移除、播放等基本操作\r\n */\r\nexport default class Danmaku extends BasePlugin {\r\n  static readonly pluginName = \"danmaku\";\r\n\r\n  $el: HTMLDivElement;\r\n\r\n  handler: Record<string, (dan: DanmakuItem[]) => void> = {};\r\n\r\n  private _status = true;\r\n\r\n  get status() {\r\n    return this._status;\r\n  }\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n\r\n    this.$el = createElement(\"div\", { class: `${classPrefix}-danmaku-wrap` });\r\n\r\n    this.player.$content.after(this.$el);\r\n  }\r\n  init() {\r\n    this.player.define(\"danmaku\", { value: this });\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this._status = !options.danmaku?.hidden;\r\n  }\r\n\r\n  /**\r\n   * 添加弹幕到弹幕池\r\n   * @param dan 要添加的弹幕\r\n   * @param play 是否播放超时弹幕\r\n   * */\r\n  add(dan: DanmakuItem[], play?: boolean) {\r\n    this.player.emit(\"danmaku:add\", dan, play || false);\r\n  }\r\n\r\n  /**\r\n   * 绘制一条弹幕\r\n   * @param dm 要绘制的弹幕\r\n   * */\r\n  draw(dm: DanmakuItem) {\r\n    this.player.emit(\"danmaku:draw\", dm);\r\n  }\r\n\r\n  /**\r\n   * 从弹幕池中移除弹幕\r\n   * @param ids 要移除的弹幕id\r\n   * */\r\n  remove(dan: DanmakuItem[]) {\r\n    this.player.emit(\"danmaku:remove\", dan);\r\n  }\r\n\r\n  /** 清空弹幕池 */\r\n  clear() {\r\n    this.player.emit(\"danmaku:clear\");\r\n  }\r\n\r\n  /** 切换弹幕显示 */\r\n  toggle(flag?: boolean) {\r\n    if (flag) {\r\n      this._status = true;\r\n      this.player.emit(\"danmaku:on\");\r\n    } else if (flag != null) {\r\n      this._status = false;\r\n      this.player.emit(\"danmaku:off\");\r\n    } else {\r\n      this.toggle(!this._status);\r\n    }\r\n  }\r\n\r\n  // 弹幕屏蔽\r\n\r\n  /**\r\n   * 弹幕类型屏蔽\r\n   * @param type 类型\r\n   * @param flag 设置是否屏蔽\r\n   */\r\n  blockType(type: string, flag: boolean) {\r\n    this.player.emit(\"danmaku:blockType\", type, flag);\r\n  }\r\n}\r\n","import { VideoInfo } from \"@/types\";\r\n\r\n/** 弹幕模式 */\r\nexport enum DanmakuMode {\r\n  roll = 1,\r\n  bottom = 4,\r\n  top = 5,\r\n  reverse = 6,\r\n  special = 7,\r\n  advanced = 9,\r\n}\r\n\r\n/** 弹幕对象接口 */\r\nexport interface DanmakuItem {\r\n  /** 弹幕id */\r\n  id: number | string;\r\n  /** 发送时间 */\r\n  time: number;\r\n  /** 弹幕内容 */\r\n  content: string;\r\n  /** 弹幕模式 */\r\n  mode: DanmakuMode;\r\n  /** 颜色 */\r\n  color: number | string;\r\n  /** 弹幕文字大小 */\r\n  size: number;\r\n  /** 日期 */\r\n  date: number;\r\n  /** 发送用户 */\r\n  user: string | number;\r\n  /** 弹幕是否在此播放器上发送 */\r\n  fromHere?: boolean;\r\n}\r\n\r\n/** 弹幕发送对象接口 */\r\nexport type DanmakuSendItem = Omit<DanmakuItem, \"id\" | \"date\" | \"user\">;\r\n\r\n/** 弹幕源 */\r\nexport interface DanmakuSource {\r\n  /** 弹幕来源url */\r\n  url: string;\r\n  /** 弹幕格式 */\r\n  type: string;\r\n  /** 获取弹幕数据 */\r\n  data?: (data: unknown) => unknown;\r\n  // platform?: string // 平台名称，用于标记平台信息\r\n  // name?: string // 弹幕来源名称\r\n}\r\n\r\nexport interface XMLDanmakuParser {\r\n  type: \"xml\";\r\n  parse: (raw: XMLDocument) => DanmakuItem[];\r\n}\r\nexport interface JSONDanmakuParser {\r\n  type: \"json\";\r\n  parse: (raw: any) => DanmakuItem[];\r\n}\r\nexport interface TextDanmakuParser {\r\n  type: \"text\";\r\n  parse: (raw: string) => DanmakuItem[];\r\n}\r\nexport type DanmakuParser = XMLDanmakuParser | JSONDanmakuParser | TextDanmakuParser;\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerOptions {\r\n    /** 弹幕设置 */\r\n    danmaku?: {\r\n      /** 弹幕格式类型 */\r\n      type?: string;\r\n      /** 弹幕不透明度 */\r\n      opacity?: number;\r\n      /** 弹幕速度 */\r\n      speed?: number;\r\n      /** 弹幕显示区域 */\r\n      area?: number;\r\n      /** 弹幕大小 */\r\n      scale?: number;\r\n      /** 弹幕字体 */\r\n      font?: string;\r\n      /** 字体加粗 */\r\n      bold?: boolean;\r\n      /** 类型屏蔽 */\r\n      blockType?: string[];\r\n      /** 用户屏蔽 */\r\n      blockUser?: (string | number)[];\r\n      /** 内容屏蔽 */\r\n      blockContent?: (string | RegExp)[];\r\n      /** 显示弹幕 */\r\n      hidden?: boolean;\r\n    };\r\n  }\r\n  interface PlayerInvokes {\r\n    /** 获取弹幕 */\r\n    danmakuGet?: (info: VideoInfo) => Promise<unknown>;\r\n    /** 发送弹幕 */\r\n    danmakuSend?: (danmaku: DanmakuSendItem, info: VideoInfo) => Promise<DanmakuItem | void>;\r\n    /** 举报弹幕 */\r\n    danmakuReport?: (danmaku: DanmakuItem, info: VideoInfo) => Promise<void>;\r\n    /** 视频作者删除弹幕 */\r\n    danmakuDelete?: (danmaku: DanmakuItem[], info: VideoInfo) => Promise<void>;\r\n    /** 撤回自己发送的弹幕 */\r\n    danmakuRecall?: (danmaku: DanmakuItem, info: VideoInfo) => Promise<void>;\r\n    /** 添加内容屏蔽 */\r\n    danmakuBlockContent?: (content: string, flag: boolean) => Promise<void>;\r\n    /** 添加用户屏蔽 */\r\n    danmakuBlockUser?: (user: string | number, flag: boolean) => Promise<void>;\r\n  }\r\n  interface VideoInfo {\r\n    danmaku?: DanmakuSource[];\r\n  }\r\n\r\n  interface PlayerEventMap {\r\n    // --- 弹幕事件 --- //\r\n\r\n    // 弹幕加载\r\n    /** 弹幕开始加载 */\r\n    \"danmaku:loading\": () => void;\r\n    /** 弹幕加载完毕 */\r\n    \"danmaku:loaded\": (dan: DanmakuItem[], from: { url?: string; id?: string | number }) => void;\r\n    /** 弹幕加载失败 */\r\n    \"danmaku:loadFailed\": (err: any, from: { url?: string; id?: string | number }) => void;\r\n\r\n    // --- 弹幕事件 --- //\r\n    /** 开启弹幕 */\r\n    \"danmaku:on\": () => void;\r\n    /** 关闭弹幕 */\r\n    \"danmaku:off\": () => void;\r\n    /** 弹幕池新增弹幕 */\r\n    \"danmaku:add\": (dan: DanmakuItem[], play: boolean) => void;\r\n    /** 弹幕池新增弹幕 */\r\n    \"danmaku:draw\": (dm: DanmakuItem) => void;\r\n    /** 弹幕池移除弹幕 */\r\n    \"danmaku:remove\": (dan: DanmakuItem[]) => void;\r\n    /** 弹幕池清空 */\r\n    \"danmaku:clear\": () => void;\r\n    /** 弹幕类型屏蔽 */\r\n    \"danmaku:blockType\": (type: string, flag: boolean) => void;\r\n\r\n    // --- 弹幕操作 --- //\r\n    /** 发送弹幕 */\r\n    \"danmaku:send\": () => void;\r\n    /** 选中指定弹幕 */\r\n    \"danmaku:select\": (dm: DanmakuItem) => void;\r\n    /** 屏蔽用户弹幕 */\r\n    \"danmaku:blockUser\": (user: number | string, flag: boolean) => void;\r\n    /** 屏蔽弹幕内容 */\r\n    \"danmaku:blockContent\": (content: string, flag: boolean) => void;\r\n\r\n    // --- 弹幕播放属性 --- //\r\n    /** 弹幕不透明度更改 */\r\n    \"danmaku:opacityChange\": (value: number) => void;\r\n    /** 弹幕速度更改 */\r\n    \"danmaku:speedChange\": (value: number) => void;\r\n    /** 弹幕区域更改 */\r\n    \"danmaku:areaChange\": (value: number) => void;\r\n    /** 弹幕大小更改 */\r\n    \"danmaku:scaleChange\": (value: number) => void;\r\n    /** 弹幕字体更改 */\r\n    \"danmaku:fontChange\": (value: string) => void;\r\n    /** 弹幕粗体更改 */\r\n    \"danmaku:boldChange\": (value: boolean) => void;\r\n  }\r\n\r\n  interface PlayerSetValueMap {\r\n    /** 隐藏弹幕 */\r\n    \"danmaku:hidden\": boolean;\r\n    /** 弹幕不透明度 */\r\n    \"danmaku:opacity\": number;\r\n    /** 弹幕移动速度 */\r\n    \"danmaku:speed\": number;\r\n    /** 弹幕显示区域 */\r\n    \"danmaku:area\": number;\r\n    /** 弹幕大小 */\r\n    \"danmaku:scale\": number;\r\n    /** 弹幕字体 */\r\n    \"danmaku:font\": string;\r\n    /** 弹幕加粗 */\r\n    \"danmaku:bold\": boolean;\r\n    /** 弹幕屏蔽类型 */\r\n    \"danmaku:blockType\": string[];\r\n  }\r\n}\r\n","import { DanmakuMode } from \"../types\";\r\n/** 播放器弹幕引擎 */\r\n\r\nimport { DanmakuItem } from \"../types\";\r\nimport { numberToHexColor } from \"@/utils\";\r\n\r\nexport type TrackType = \"roll\" | \"reverse\" | \"top\" | \"bottom\";\r\n\r\nexport interface DanmakuEngineOptions {\r\n  fontScale?: number;\r\n  fontFamily?: string;\r\n  fontWeight?: string;\r\n  speed?: number;\r\n  opacity?: number;\r\n  limitArea?: number;\r\n  classPrefix?: string;\r\n  /** 颜色限制 */\r\n  colorFilter?: boolean;\r\n  /** 用户屏蔽 */\r\n  userFilter?: (string | number)[];\r\n  /** 内容屏蔽 */\r\n  contentFilter?: (string | RegExp)[];\r\n  /** 轨道屏蔽 */\r\n  trackFilter?: Record<TrackType, boolean>;\r\n  /** 获取当前时间函数 */\r\n  getTime: () => number;\r\n}\r\n\r\nexport default class MeonDanmakuEngine {\r\n  /** 暂停状态 */\r\n  public paused = false;\r\n\r\n  /** 隐藏状态 */\r\n  public hidden = false;\r\n\r\n  /** 弹幕容器 */\r\n  public readonly container: HTMLDivElement;\r\n\r\n  /** 弹幕不透明度 */\r\n  public opacity: number;\r\n  /** 弹幕移动速度 */\r\n  public speed: number;\r\n  /** 限制区域 */\r\n  public limitArea: number;\r\n  /** 弹幕字号缩放 */\r\n  public fontScale: number;\r\n  /** 字体 */\r\n  public fontFamily: string;\r\n  /** 字重 */\r\n  public fontWeight: string;\r\n\r\n  /** 基准轨道高度 */\r\n  public baseTrackHeight: number;\r\n  /** 轨道边距 */\r\n  public trackPadding: number;\r\n  /** 颜色屏蔽 */\r\n  public colorFilter: boolean;\r\n  /** 轨道屏蔽 */\r\n  public trackFilter: Record<TrackType, boolean>;\r\n  public userFilter: (string | number)[];\r\n  public contentFilter: (string | RegExp)[];\r\n  /** 允许重叠 */\r\n  public overlap: boolean;\r\n  /** 类名前缀 */\r\n  public classPrefix: string;\r\n  /** 获取当前时间函数 */\r\n  public getTime: () => number;\r\n  /** 当前时间 */\r\n  private time = 0;\r\n\r\n  /** 弹幕池 */\r\n  private list: DanmakuItem[] = [];\r\n  /** 待添加弹幕索引 */\r\n  private currentIndex = 0;\r\n  /** 文字测量上下文 */\r\n  private measureContext: CanvasRenderingContext2D | null = null;\r\n\r\n  /** 弹幕发射位置与播放器边界的距离 */\r\n  public startDistance = 2;\r\n  /** 时间偏移 */\r\n  public timeOffset = 0;\r\n  /** 滚动弹幕基准速度 */\r\n  public baseSpeed = 100;\r\n  /** 静止弹幕基准持续时间 */\r\n  public baseDuration = 5;\r\n  /** 弹幕速度增加率k值\r\n   * 弹幕速度 = baseSpeed * (1 + deltaSpeed * 弹幕宽度)\r\n   */\r\n  public deltaSpeed = 0.002;\r\n\r\n  /** 弹幕轨道高度 */\r\n  private trackHeights: Record<TrackType, number[]> = {\r\n    roll: [],\r\n    reverse: [],\r\n    top: [],\r\n    bottom: [],\r\n  };\r\n\r\n  /** 弹幕轨道 */\r\n  private danmakuTracks: Record<TrackType, HTMLElement[][]> = {\r\n    roll: [],\r\n    reverse: [],\r\n    top: [],\r\n    bottom: [],\r\n  };\r\n\r\n  /** 弹幕池弹幕总数 */\r\n  get count() {\r\n    return this.list.length;\r\n  }\r\n\r\n  /** 屏幕弹幕总数 */\r\n  get screenCount() {\r\n    let count = 0;\r\n    for (const ty in this.danmakuTracks) {\r\n      this.danmakuTracks[ty as TrackType].forEach((t) => {\r\n        count += t.length;\r\n      });\r\n    }\r\n    return count;\r\n  }\r\n\r\n  constructor(container: HTMLDivElement, options: DanmakuEngineOptions) {\r\n    this.container = container;\r\n    this.fontScale = options.fontScale ?? 1;\r\n    this.baseTrackHeight = 28;\r\n    this.trackPadding = 6;\r\n    this.speed = options.speed ?? 1;\r\n    this.opacity = options.opacity ?? 1;\r\n    this.limitArea = 1;\r\n    this.overlap = false;\r\n    this.fontFamily = options.fontFamily ?? \"SimHei\";\r\n    this.fontWeight = options.fontWeight ?? \"bold\";\r\n    this.classPrefix = options.classPrefix ?? \"meon\";\r\n    this.colorFilter = options.colorFilter || false;\r\n    this.trackFilter = Object.assign(\r\n      {\r\n        roll: false,\r\n        reverse: false,\r\n        top: false,\r\n        bottom: false,\r\n      },\r\n      options.trackFilter\r\n    );\r\n    this.userFilter = options.userFilter || [];\r\n    this.contentFilter = options.contentFilter || [];\r\n    this.getTime = options.getTime;\r\n\r\n    this.container.classList.add(`${this.classPrefix}-danmaku`);\r\n    this.checkDanmaku();\r\n  }\r\n\r\n  play() {\r\n    this.paused = false;\r\n    this.container.classList.remove(\"is-paused\");\r\n  }\r\n\r\n  pause() {\r\n    this.paused = true;\r\n    this.container.classList.add(\"is-paused\");\r\n  }\r\n\r\n  /** 发生跳转 */\r\n  seek() {\r\n    // 清屏\r\n    this.clear();\r\n    // 重新获取当前时间及待添加弹幕索引\r\n    this.time = this.getTime();\r\n    const index = this.list.findIndex((d) => this.time <= d.time);\r\n    this.currentIndex = index === -1 ? this.list.length : index;\r\n  }\r\n\r\n  /** 设置弹幕池 */\r\n  setPool(dan: DanmakuItem[]) {\r\n    // 直接设置弹幕池并排序\r\n    this.list = [...dan];\r\n    this.list.sort((a, b) => a.time - b.time);\r\n    const index = this.list.findIndex((d) => this.time <= d.time);\r\n    this.currentIndex = index === -1 ? this.list.length : index;\r\n  }\r\n\r\n  /** 重置弹幕池 */\r\n  reset() {\r\n    this.clear();\r\n    this.list = [];\r\n    this.currentIndex = 0;\r\n  }\r\n\r\n  /** 弹幕池添加弹幕 */\r\n  add(dan: DanmakuItem[], play?: boolean) {\r\n    dan.forEach((dm) => {\r\n      /** 按时间顺序插入弹幕 */\r\n      const index = this.list.findIndex((d) => dm.time <= d.time);\r\n      this.list.splice(index === -1 ? this.list.length : index, 0, dm);\r\n      // 若插入弹幕的时间小于当前时间，则待添加弹幕索引+1\r\n      if (dm.time < this.time) {\r\n        this.currentIndex += 1;\r\n        play && this.draw(dan);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** 弹幕池移除弹幕 */\r\n  remove(dan: DanmakuItem[]) {\r\n    const displayed = [\r\n      ...this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-item`),\r\n    ];\r\n    dan.forEach((dm) => {\r\n      const index = this.list.indexOf(dm);\r\n      if (index === -1) return;\r\n      this.list.splice(index, 1);\r\n      // 移除位置若小于当前待添加弹幕位置，则待添加弹幕索引-1\r\n      if (index < this.currentIndex) this.currentIndex -= 1;\r\n      // 从DOM中移除弹幕\r\n      const el = displayed.find((d) => d.dataset.id === dm.id.toString());\r\n      if (el) {\r\n        // 此处不移除DOM是为了使弹幕顺利完成动画，以便轨道自动清除弹幕DOM\r\n        el.innerHTML = \"\";\r\n      }\r\n    });\r\n  }\r\n\r\n  /** 弹幕清屏 */\r\n  clear(type?: TrackType) {\r\n    if (type) {\r\n      this.danmakuTracks[type] = [];\r\n      return;\r\n    }\r\n    this.danmakuTracks = {\r\n      roll: [],\r\n      reverse: [],\r\n      top: [],\r\n      bottom: [],\r\n    };\r\n    this.trackHeights = {\r\n      roll: [],\r\n      reverse: [],\r\n      top: [],\r\n      bottom: [],\r\n    };\r\n    this.container.innerHTML = \"\";\r\n  }\r\n\r\n  /** 检查弹幕是否需要进入弹幕池 */\r\n  checkDanmaku() {\r\n    if (this.list.length && !this.paused && !this.hidden) {\r\n      let item = this.list[this.currentIndex];\r\n      const dan = [];\r\n      // 刷新当前时间\r\n      this.time = this.getTime();\r\n      // 若待添加弹幕时间小于当前时间，则持续添加弹幕直到下一条弹幕的时间不小于当前时间为止\r\n      while (item && item.time < this.time) {\r\n        if (\r\n          this.checkTrackFilter(item) &&\r\n          this.checkColorFilter(item) &&\r\n          this.checkUserFilter(item) &&\r\n          this.checkContentFilter(item)\r\n        ) {\r\n          dan.push(item);\r\n        }\r\n        this.currentIndex += 1;\r\n        item = this.list[this.currentIndex];\r\n      }\r\n      // console.log(this.currentIndex)\r\n      this.draw(dan);\r\n    }\r\n    window.requestAnimationFrame(() => {\r\n      this.checkDanmaku();\r\n    });\r\n  }\r\n\r\n  /** 设置弹幕类型过滤 */\r\n  setTrackFilter(type: TrackType, value: boolean) {\r\n    this.trackFilter[type] = value;\r\n    if (value) {\r\n      this.container\r\n        .querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-${type}`)\r\n        .forEach((el) => {\r\n          el.innerHTML = \"\";\r\n        });\r\n    }\r\n  }\r\n\r\n  /** 检查弹幕类型过滤 */\r\n  checkTrackFilter(dm: DanmakuItem) {\r\n    return !this.trackFilter[DanmakuMode[dm.mode] as TrackType];\r\n  }\r\n\r\n  /** 设置弹幕颜色过滤 */\r\n  setColorFilter(value: boolean) {\r\n    this.colorFilter = value;\r\n    if (value) {\r\n      const items = this.container.querySelectorAll<HTMLElement>(\r\n        `.${this.classPrefix}-danmaku-item`\r\n      );\r\n      items.forEach((el) => {\r\n        if (el.style.color !== \"rgb(255, 255, 255)\") {\r\n          el.innerHTML = \"\";\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** 检查弹幕颜色过滤 */\r\n  checkColorFilter(dm: DanmakuItem) {\r\n    return !this.colorFilter || dm.color === 16777215;\r\n  }\r\n\r\n  /** 设置内容过滤 */\r\n  setContentFilter(content: string | RegExp, value: boolean) {\r\n    const contentIndex = this.contentFilter.indexOf(content);\r\n    if (value) {\r\n      if (contentIndex > -1) {\r\n        return;\r\n      }\r\n      this.contentFilter.push(content);\r\n      const items = this.container.querySelectorAll<HTMLElement>(\r\n        `.${this.classPrefix}-danmaku-item`\r\n      );\r\n      if (typeof content == \"string\") {\r\n        items.forEach((el) => {\r\n          if (el.innerText.includes(content)) {\r\n            el.innerHTML = \"\";\r\n          }\r\n        });\r\n      } else {\r\n        items.forEach((el) => {\r\n          if (content.test(el.innerText)) {\r\n            el.innerHTML = \"\";\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      contentIndex > -1 && this.contentFilter.splice(contentIndex, 1);\r\n    }\r\n  }\r\n  /** 检查弹幕内容过滤 */\r\n  checkContentFilter(dm: DanmakuItem) {\r\n    for (const keyword of this.contentFilter) {\r\n      if (typeof keyword == \"string\") {\r\n        if (dm.content.search(keyword)) return false;\r\n      } else if (keyword.test(dm.content)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /** 设置用户过滤 */\r\n  setUserFilter(user: string | number, value: boolean) {\r\n    const contentIndex = this.userFilter.indexOf(user);\r\n    if (value) {\r\n      if (contentIndex > -1) {\r\n        return;\r\n      }\r\n      this.userFilter.push(user);\r\n      const items = this.container.querySelectorAll<HTMLElement>(\r\n        `.${this.classPrefix}-danmaku-item`\r\n      );\r\n      items.forEach((el) => {\r\n        if (el.dataset.user == user) {\r\n          el.innerHTML = \"\";\r\n        }\r\n      });\r\n    } else {\r\n      contentIndex > -1 && this.userFilter.splice(contentIndex, 1);\r\n    }\r\n  }\r\n  /** 检查用户过滤 */\r\n  checkUserFilter(dm: DanmakuItem) {\r\n    return this.userFilter.indexOf(dm.user) == -1;\r\n  }\r\n\r\n  /** 绘制弹幕 */\r\n  draw(dan: DanmakuItem[]) {\r\n    /** 弹幕轨道高度 */\r\n    const itemHeight = this.baseTrackHeight * this.fontScale;\r\n    /** 弹幕容器宽度 */\r\n    const containerWidth = this.container.offsetWidth;\r\n    /** 弹幕区域高度 */\r\n    const containerHeight = this.container.offsetHeight * this.limitArea;\r\n    /** 轨道数量 */\r\n    const itemY = Math.floor(containerHeight / itemHeight);\r\n    // console.log(itemY);\r\n    if (this.trackHeights.roll.length !== itemY) {\r\n      this.trackHeights.roll = new Array(itemY).fill(itemHeight);\r\n    }\r\n    if (this.trackHeights.reverse.length !== itemY) {\r\n      this.trackHeights.reverse = new Array(itemY).fill(itemHeight);\r\n    }\r\n    if (this.trackHeights.top.length !== itemY) {\r\n      this.trackHeights.top = new Array(itemY).fill(itemHeight);\r\n    }\r\n    if (this.trackHeights.bottom.length !== itemY) {\r\n      this.trackHeights.bottom = new Array(itemY).fill(itemHeight);\r\n    }\r\n    /** 弹幕与弹幕容器右侧的距离(滚动弹幕) */\r\n    const danItemRight = (el: HTMLElement) => {\r\n      const containerRight = this.container.getBoundingClientRect().right;\r\n      const elRight = el.getBoundingClientRect().right;\r\n      return containerRight - elRight;\r\n    };\r\n    /** 弹幕与弹幕容器左侧的距离(逆向弹幕) */\r\n    const danItemLeft = (el: HTMLElement) => {\r\n      const containerLeft = this.container.getBoundingClientRect().left;\r\n      const elLeft = el.getBoundingClientRect().left;\r\n      return elLeft - containerLeft;\r\n    };\r\n    /** 获取弹幕速度 */\r\n    const getSpeed = (width: number) => this.baseSpeed * (1 + this.deltaSpeed * width) * this.speed;\r\n    /** 获取单个轨道内所有弹幕 */\r\n    const getDOMTrack = (type: string, i: number) => {\r\n      return [\r\n        ...this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-${type}`),\r\n      ].filter((el: HTMLElement) => el.dataset.track === `${i}`);\r\n    };\r\n    /** 获取弹幕可进入的轨道 */\r\n    const getTrack = (ele: HTMLElement, type: TrackType, width: number) => {\r\n      // 对可用范围内的轨道进行一次遍历\r\n      forTrack: for (let i = 0; this.overlap || i < itemY; i++) {\r\n        const DOMTrack = getDOMTrack(type, i);\r\n        /** 该轨道内的所有弹幕 */\r\n        let track = this.danmakuTracks[type][i];\r\n        this.danmakuTracks[type][i] = DOMTrack;\r\n        if (track && track.length) {\r\n          // 如果该轨道存在弹幕\r\n          if (type === \"roll\") {\r\n            /** 弹幕从发射到触碰另一边边界到所需要的时间 */\r\n            const enterTime = containerWidth / getSpeed(width);\r\n            if (track.length !== DOMTrack.length) {\r\n              //\r\n              track = DOMTrack;\r\n            }\r\n            for (const dm of track) {\r\n              const danRight = danItemRight(dm) - 10;\r\n              this.trackHeights[type][i] = parseInt(dm.style.fontSize) + this.trackPadding;\r\n              // 如果滚动弹幕存在同一轨道碰撞的可能，则该轨道不可装填弹幕\r\n              if (\r\n                danRight <=\r\n                  containerWidth - enterTime * getSpeed(dm.getBoundingClientRect().width) ||\r\n                danRight <= 0\r\n              ) {\r\n                // 轨道高度设置为该条弹幕的高度\r\n                continue forTrack;\r\n              }\r\n            }\r\n          } else if (type === \"reverse\") {\r\n            /** 弹幕从发射到触碰另一边边界到所需要的时间 */\r\n            const enterTime = containerWidth / getSpeed(width);\r\n            if (track.length !== DOMTrack.length) {\r\n              //\r\n              track = DOMTrack;\r\n            }\r\n            for (const dm of track) {\r\n              const danLeft = danItemLeft(dm) - 10;\r\n              this.trackHeights[type][i] = parseInt(dm.style.fontSize) + this.trackPadding;\r\n              // 如果逆向弹幕存在同一轨道碰撞的可能，则该轨道不可装填弹幕\r\n              if (\r\n                danLeft <=\r\n                  containerWidth - enterTime * getSpeed(dm.getBoundingClientRect().width) ||\r\n                danLeft <= 0\r\n              ) {\r\n                continue forTrack;\r\n              }\r\n            }\r\n          } else {\r\n            // 非滚动弹幕该轨道不可装填\r\n            continue forTrack;\r\n          }\r\n          // 轨道弹幕组遍历完毕，组内所有弹幕均完全进入容器，可以向该轨道装填弹幕\r\n          this.danmakuTracks[type][i].push(ele);\r\n          // 动画结束后，需从轨道弹幕组中移除该弹幕\r\n          ele.addEventListener(\"animationend\", () => {\r\n            const index = this.danmakuTracks[type][i]?.indexOf(ele);\r\n            index && this.danmakuTracks[type][i]?.splice(index, 1);\r\n          });\r\n          return i;\r\n        } else {\r\n          // 如果该轨道没有弹幕，可以向该轨道装填弹幕\r\n          if (Array.isArray(this.danmakuTracks[type][i])) {\r\n            this.danmakuTracks[type][i].push(ele);\r\n          } else {\r\n            this.danmakuTracks[type][i] = [ele];\r\n          }\r\n\r\n          ele.addEventListener(\"animationend\", () => {\r\n            const index = this.danmakuTracks[type][i]?.indexOf(ele);\r\n            index && this.danmakuTracks[type][i]?.splice(index, 1);\r\n          });\r\n          return i;\r\n        }\r\n      }\r\n      // 遍历完毕，所有轨道都不可用，返回-1\r\n      return -1;\r\n    };\r\n\r\n    const docFragment = document.createDocumentFragment();\r\n\r\n    for (let i = 0; i < dan.length; i++) {\r\n      const dm = dan[i];\r\n      /** 忽略非普通弹幕 */\r\n      if (dm.mode >= 7) {\r\n        continue;\r\n      }\r\n      /** 弹幕DOM */\r\n      const item = document.createElement(\"div\");\r\n      item.classList.add(`${this.classPrefix}-danmaku-item`);\r\n      item.classList.add(`${this.classPrefix}-danmaku-${DanmakuMode[dm.mode]}`);\r\n      item.innerHTML = `${dm.content.replace(/(\\\\n)/g, \"\\n\")}`;\r\n      if (typeof dm.color == \"number\") {\r\n        item.style.color = numberToHexColor(dm.color);\r\n      } else {\r\n        item.style.color = dm.color;\r\n      }\r\n      item.style.opacity = this.opacity.toString();\r\n      item.style.fontSize = +dm.size * this.fontScale + \"px\";\r\n      if (dm.fromHere) {\r\n        item.style.border = \"2px solid white\";\r\n      }\r\n      /** 弹幕运动结束后，从DOM中移除该弹幕 */\r\n      item.addEventListener(\"animationend\", () => {\r\n        if ([...this.container.children].indexOf(item) > -1) this.container.removeChild(item);\r\n      });\r\n\r\n      /** 弹幕内容宽度 */\r\n      const itemWidth = this.measureTextWidth(\r\n        dm.content,\r\n        `${this.fontWeight} ${+dm.size * this.fontScale}px ${this.fontFamily}`\r\n      );\r\n\r\n      /** 轨道类型 */\r\n      let trackType = DanmakuMode[dm.mode] as TrackType;\r\n      /** 轨道位置 */\r\n      let track: number;\r\n      /** 轨道序号 */\r\n      let trackIndex;\r\n      // adjust\r\n      switch (trackType) {\r\n        case \"roll\":\r\n        case \"reverse\":\r\n          // 无限弹幕模式下轨道序号可能大于itemY，可通过取余得到实际轨道位置\r\n          trackIndex = getTrack(item, trackType, itemWidth);\r\n          track = trackIndex % itemY;\r\n          // console.log(track);\r\n          if (track >= 0) {\r\n            const maxTop = this.trackHeights[trackType]\r\n              .slice(0, itemY)\r\n              .reduce((prev, cur) => prev + cur, 0);\r\n            const top =\r\n              this.trackHeights[trackType].slice(0, track).reduce((prev, cur) => prev + cur, 0) %\r\n              maxTop;\r\n            // console.log(top, track);\r\n            if (top + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\r\n              this.danmakuTracks[trackType][i]?.pop();\r\n              return;\r\n            }\r\n            const speed = getSpeed(itemWidth);\r\n            const distance = itemWidth + containerWidth + this.startDistance * 2;\r\n            item.dataset.track = trackIndex.toString();\r\n            item.style.width = itemWidth + 1 + \"px\";\r\n            item.style.top = top + \"px\";\r\n            item.style.fontFamily = this.fontFamily;\r\n            item.style.fontWeight = this.fontWeight;\r\n            item.style.setProperty(\"--duration\", `${distance / speed}s`); // 持续时间\r\n            item.style.setProperty(\"--offset\", `${containerWidth + this.startDistance}px`); // 起始位置\r\n            item.style.setProperty(\"--translateX\", `${-distance}px`); // 位移距离\r\n          }\r\n          break;\r\n        case \"top\":\r\n          track = getTrack(item, trackType, 0) % itemY;\r\n          if (track >= 0) {\r\n            const topArr: HTMLElement[] = [];\r\n            const topDan = this.danmakuTracks.top;\r\n            for (const t of topDan) {\r\n              topArr.push(...t);\r\n            }\r\n            const top = topArr\r\n              .map((el) => {\r\n                return parseInt(el.style.fontSize) + this.trackPadding;\r\n              })\r\n              .slice(0, track)\r\n              .reduce((prev, cur) => prev + cur, 0);\r\n\r\n            if (top + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\r\n              this.danmakuTracks[trackType][i]?.pop();\r\n              return;\r\n            }\r\n            item.dataset.track = track.toString();\r\n            item.style.width = itemWidth + 1 + \"px\";\r\n            item.style.marginLeft = `-${(itemWidth + 1) * 0.5}px`;\r\n            item.style.top = top + \"px\";\r\n            item.style.fontFamily = this.fontFamily;\r\n            item.style.fontWeight = this.fontWeight;\r\n            item.style.setProperty(\"--duration\", `${this.baseDuration / this.speed}s`); // 持续时间\r\n          }\r\n          break;\r\n        case \"bottom\":\r\n          trackType = \"bottom\";\r\n          track = getTrack(item, trackType, 0) % itemY;\r\n          if (track >= 0) {\r\n            const bottomArr: HTMLElement[] = [];\r\n            const bottomDan = this.danmakuTracks.bottom;\r\n            for (const t of bottomDan) {\r\n              bottomArr.push(...t);\r\n            }\r\n            const bottom = bottomArr\r\n              .map((el) => {\r\n                return parseInt(el.style.fontSize) + this.trackPadding;\r\n              })\r\n              .slice(0, track)\r\n              .reduce((prev, cur) => prev + cur, 0);\r\n\r\n            if (bottom + parseInt(item.style.fontSize) + this.trackPadding > containerHeight) {\r\n              this.danmakuTracks[trackType][i]?.pop();\r\n              return;\r\n            }\r\n            item.dataset.track = track.toString();\r\n            item.style.width = itemWidth + 1 + \"px\";\r\n            item.style.marginLeft = `-${(itemWidth + 1) * 0.5}px`;\r\n            item.style.bottom = bottom + \"px\";\r\n            item.style.fontFamily = this.fontFamily;\r\n            item.style.fontWeight = this.fontWeight;\r\n            item.style.setProperty(\"--duration\", `${this.baseDuration / this.speed}s`); // 持续时间\r\n          }\r\n          break;\r\n        default:\r\n          track = -1;\r\n          console.error(`无法处理的弹幕模式: ${dm.mode}`);\r\n      }\r\n      if (track >= 0) {\r\n        item.dataset.id = dm.id.toString();\r\n        item.dataset.user = dm.user.toString();\r\n        // 添加弹幕到容器\r\n        this.container.appendChild(item);\r\n      }\r\n    }\r\n    return docFragment;\r\n  }\r\n  /** 测量字体宽度 */\r\n  measureTextWidth(text: string, font: string) {\r\n    if (!this.measureContext) {\r\n      this.measureContext = document.createElement(\"canvas\").getContext(\"2d\")!;\r\n    }\r\n    this.measureContext.font = font;\r\n    return this.measureContext.measureText(text).width;\r\n  }\r\n  /** 根据某一坐标捕获弹幕DOM */\r\n  captureDanmakuDOM(x: number, y: number, range: number, single = false) {\r\n    const result: HTMLElement[] = [];\r\n    // 遍历所有在屏上的弹幕\r\n    const items = this.container.querySelectorAll<HTMLElement>(`.${this.classPrefix}-danmaku-item`);\r\n    for (const el of items) {\r\n      if (el.innerHTML) {\r\n        // 获取检测边界\r\n        const elRect = el.getBoundingClientRect();\r\n        const containerRect = this.container.getBoundingClientRect();\r\n        const edgeLeft = elRect.left - containerRect.left;\r\n        const edgeRight = elRect.right - containerRect.left;\r\n        const edgeTop = elRect.top - containerRect.top;\r\n        const edgeBottom = elRect.bottom - containerRect.top;\r\n        if (\r\n          x >= edgeLeft - range &&\r\n          x <= edgeRight + range &&\r\n          y >= edgeTop - range &&\r\n          y <= edgeBottom + range\r\n        ) {\r\n          result.push(el);\r\n          // 如果只要求获取一个元素，则停止遍历以优化性能\r\n          if (single) return result;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  /** 根据某一坐标捕获弹幕 */\r\n  captureDanmaku(x: number, y: number, range: number, single = false) {\r\n    const resultDOM = this.captureDanmakuDOM(x, y, range, single);\r\n    const result: DanmakuItem[] = [];\r\n    for (const el of resultDOM) {\r\n      const dm = this.getDanmakuById(el.dataset.id!);\r\n      if (dm) {\r\n        result.push(dm);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  /** 根据id获取弹幕 */\r\n  getDanmakuById(id: string | number) {\r\n    return this.list.find((dm) => dm.id.toString() === id.toString());\r\n  }\r\n\r\n  /** 显示弹幕 */\r\n  show() {\r\n    this.hidden = false;\r\n  }\r\n\r\n  /** 隐藏弹幕 */\r\n  hide() {\r\n    this.hidden = true;\r\n    this.clear();\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport MeonDanmakuEngine, { TrackType } from \"./MeonDanmakuEngine\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { createElement } from \"@/utils\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    danmakuEngine?: DanmakuEngine;\r\n  }\r\n}\r\n\r\n/** css弹幕引擎\r\n *\r\n * 负责弹幕播放与绘制\r\n *\r\n * 前置插件: `danmaku`\r\n */\r\n\r\nexport default class DanmakuEngine extends BasePlugin {\r\n  static readonly pluginName = \"danmakuEngine\";\r\n  core: MeonDanmakuEngine;\r\n  $el: HTMLDivElement;\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.$el = this.plugins.danmaku!.$el.appendChild(\r\n      createElement(\"div\", { class: `${classPrefix}-rowdanmaku` })\r\n    );\r\n    this.core = new MeonDanmakuEngine(this.$el, {\r\n      getTime: () => this.player.currentTime,\r\n      classPrefix: classPrefix,\r\n    });\r\n  }\r\n  init() {\r\n    this.player.on(\"play\", () => {\r\n      this.core.play();\r\n    });\r\n    this.player.on(\"pause\", () => {\r\n      this.core.pause();\r\n    });\r\n    this.player.on(\"seeking\", () => {\r\n      this.core.pause();\r\n      this.core.seek();\r\n    });\r\n    this.player.on(\"seeked\", () => {\r\n      !this.player.paused && this.core.play();\r\n    });\r\n    this.player.on(\"danmaku:blockType\", (type, flag) => {\r\n      switch (type) {\r\n        case \"top\":\r\n        case \"bottom\":\r\n        case \"roll\":\r\n        case \"reverse\":\r\n          this.core.setTrackFilter(type, flag);\r\n          return;\r\n        case \"color\":\r\n          this.core.setColorFilter(flag);\r\n      }\r\n    });\r\n    this.player.on(\"danmaku:add\", (dan, play) => {\r\n      this.core.add(dan, play);\r\n    });\r\n    this.player.on(\"danmaku:remove\", (dan) => {\r\n      this.core.remove(dan);\r\n    });\r\n    this.player.on(\"danmaku:draw\", (dm) => {\r\n      this.core.draw([dm]);\r\n    });\r\n    this.player.on(\"danmaku:blockUser\", (user, flag) => {\r\n      this.core.setUserFilter(user, flag);\r\n    });\r\n    this.player.on(\"danmaku:blockContent\", (content, flag) => {\r\n      this.core.setContentFilter(content, flag);\r\n    });\r\n    this.player.on(\"danmaku:clear\", () => {\r\n      this.core.clear();\r\n    });\r\n    this.player.on(\"danmaku:on\", () => {\r\n      this.core.show();\r\n    });\r\n    this.player.on(\"danmaku:off\", () => {\r\n      this.core.hide();\r\n    });\r\n  }\r\n\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    if (options.danmaku) {\r\n      const { scale, area, font, bold, speed, opacity, blockType } = options.danmaku;\r\n      scale && this.setScale(scale);\r\n      font && this.setFont(font);\r\n      bold != null && this.setBold(bold);\r\n      area != null && this.setArea(area);\r\n      speed && this.setSpeed(speed);\r\n      opacity && this.setOpacity(opacity);\r\n      blockType?.forEach((type) => this.player.emit(\"danmaku:blockType\", type, true));\r\n    }\r\n  }\r\n\r\n  // 弹幕播放属性\r\n  /** 弹幕不透明度 */\r\n  get opacity() {\r\n    return this.core.opacity;\r\n  }\r\n  /** 弹幕速度 */\r\n  get speed() {\r\n    return this.core.speed;\r\n  }\r\n  /** 弹幕区域 */\r\n  get area() {\r\n    return this.core.limitArea == 1 && this.core.overlap ? Infinity : this.core.limitArea;\r\n  }\r\n  /** 设置弹幕大小 */\r\n  get scale() {\r\n    return this.core.fontScale;\r\n  }\r\n  /** 设置弹幕字体 */\r\n  get font() {\r\n    return this.core.fontFamily;\r\n  }\r\n  /** 弹幕加粗 */\r\n  get bold() {\r\n    return this.core.fontWeight == \"bold\";\r\n  }\r\n\r\n  /** 弹幕数 */\r\n  get count() {\r\n    return this.core.count;\r\n  }\r\n  /** 屏幕弹幕数 */\r\n  get screenCount() {\r\n    return this.core.screenCount;\r\n  }\r\n  /** 类型屏蔽列表 */\r\n  getTypeBlockList() {\r\n    const list: string[] = ([\"roll\", \"reverse\", \"top\", \"bottom\"] as TrackType[]).filter(\r\n      (t) => this.core.trackFilter[t]\r\n    );\r\n    this.core.colorFilter && list.push(\"color\");\r\n    return list;\r\n  }\r\n\r\n  // 弹幕播放属性设置\r\n\r\n  /** 设置弹幕不透明度 */\r\n  setOpacity(value: number) {\r\n    this.core.opacity = value;\r\n    this.player.emit(\"danmaku:opacityChange\", value);\r\n  }\r\n  /** 设置弹幕速度 */\r\n  setSpeed(value: number) {\r\n    this.core.speed = value;\r\n    this.player.emit(\"danmaku:speedChange\", value);\r\n  }\r\n  /** 设置弹幕区域 */\r\n  setArea(value: number) {\r\n    if (value > 1) {\r\n      this.core.limitArea = 1;\r\n      this.core.overlap = true;\r\n    } else {\r\n      this.core.limitArea = value;\r\n      this.core.overlap = false;\r\n    }\r\n    this.player.emit(\"danmaku:areaChange\", value);\r\n  }\r\n  /** 设置弹幕大小 */\r\n  setScale(value: number) {\r\n    this.core.fontScale = value;\r\n    this.player.emit(\"danmaku:scaleChange\", value);\r\n  }\r\n  /** 设置弹幕字体 */\r\n  setFont(value: string) {\r\n    this.core.fontFamily = value;\r\n    this.player.emit(\"danmaku:fontChange\", value);\r\n  }\r\n  /** 设置弹幕加粗 */\r\n  setBold(value: boolean) {\r\n    this.core.fontWeight = value ? \"bold\" : \"\";\r\n    this.player.emit(\"danmaku:boldChange\", value);\r\n  }\r\n  /** 根据坐标捕获弹幕 */\r\n  capture(x: number, y: number, r: number) {\r\n    return this.core.captureDanmaku(x, y, r);\r\n  }\r\n}\r\n","let count = 1000;\r\nconst ar = [\r\n  \"1\",\r\n  \"2\",\r\n  \"3\",\r\n  \"4\",\r\n  \"5\",\r\n  \"6\",\r\n  \"7\",\r\n  \"8\",\r\n  \"9\",\r\n  \"0\",\r\n  \"a\",\r\n  \"b\",\r\n  \"c\",\r\n  \"d\",\r\n  \"e\",\r\n  \"f\",\r\n  \"g\",\r\n  \"h\",\r\n  \"i\",\r\n  \"j\",\r\n  \"k\",\r\n  \"l\",\r\n  \"m\",\r\n  \"n\",\r\n  \"o\",\r\n  \"p\",\r\n  \"q\",\r\n  \"r\",\r\n  \"s\",\r\n  \"t\",\r\n  \"u\",\r\n  \"v\",\r\n  \"w\",\r\n  \"x\",\r\n  \"y\",\r\n  \"z\",\r\n];\r\n\r\nexport function randomId() {\r\n  const hs = [];\r\n  const al = ar.length;\r\n  for (let i = 0; i < 8; i++) {\r\n    hs.push(ar[Math.floor(Math.random() * al)]);\r\n  }\r\n  count++;\r\n  return hs.join(\"\") + `${count}`;\r\n}\r\n","import { DanmakuItem, DanmakuParser, DanmakuSource } from \"./types\";\r\nimport { PlayerOptions, VideoInfo } from \"@/types\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { randomId } from \"@/utils/randomId\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    danmakuLoader?: DanmakuLoader;\r\n  }\r\n  interface PlayerOptions {\r\n    danmakuParser?: Record<string, DanmakuParser>;\r\n  }\r\n}\r\n\r\n/** 弹幕加载器\r\n *\r\n * 负责弹幕加载及格式转换\r\n *\r\n * 前置插件: `danmaku`\r\n */\r\nexport default class DanmakuLoader extends BasePlugin {\r\n  static readonly pluginName = \"danmakuLoader\";\r\n\r\n  /** 默认弹幕类型 */\r\n  public type: string = \"\";\r\n\r\n  public parser: Record<string, DanmakuParser> = defaultParsers;\r\n\r\n  get danmaku() {\r\n    return this.player.danmaku;\r\n  }\r\n\r\n  get invokes() {\r\n    return this.player.invokes;\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"videoChange\", (info) => {\r\n      this.reload(info);\r\n    });\r\n  }\r\n\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this.type = options.danmaku?.type || \"\";\r\n    this.parser = Object.assign(this.parser, options.danmakuParser);\r\n  }\r\n\r\n  /** 从响应中获取数据 */\r\n  protected async getResponseData<T extends DanmakuParser[\"type\"]>(\r\n    response: Response,\r\n    type: T\r\n  ): Promise<Parameters<DanmakuParser[\"parse\"]>[0]> {\r\n    if (type == \"json\") {\r\n      return await response.json();\r\n    } else if (type == \"xml\") {\r\n      return new DOMParser().parseFromString(await response.text(), \"text/xml\");\r\n    } else {\r\n      return await response.text();\r\n    }\r\n  }\r\n\r\n  parse(raw: any, type: string) {\r\n    if (!type) {\r\n      return raw as DanmakuItem[];\r\n    } else {\r\n      const parser = this.parser[type];\r\n      if (!parser) throw \"未知弹幕格式\";\r\n      try {\r\n        return parser.parse(raw);\r\n      } catch (e) {\r\n        throw e || \"无法正确解析弹幕格式\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /** 加载附加弹幕文件 */\r\n  loadSource({ url, type }: DanmakuSource) {\r\n    fetch(url)\r\n      .then((data) => this.getResponseData(data, this.parser[type].type))\r\n      .then((data) => this.parse(data, type))\r\n      .then((dan) => {\r\n        dan && this.add(dan);\r\n        this.player.emit(\"danmaku:loaded\", dan, { url });\r\n      })\r\n      .catch((err) => {\r\n        this.player.emit(\"danmaku:loadFailed\", err, { url });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  /** 加载弹幕 */\r\n  private load(info: VideoInfo) {\r\n    console.log(\"this.invokes\");\r\n    console.log(this.invokes);\r\n    this.invokes\r\n      .danmakuGet?.(info)\r\n      .then((data) => this.parse(data as any, this.type))\r\n      .then((dan) => {\r\n        dan && this.add(dan);\r\n        this.player.emit(\"danmaku:loaded\", dan, info);\r\n      })\r\n      .catch((err) => {\r\n        this.player.throw(new Error(err));\r\n        this.player.emit(\"danmaku:loadFailed\", err, info);\r\n      });\r\n  }\r\n\r\n  private add(dan: DanmakuItem[]) {\r\n    this.danmaku!.add(dan);\r\n  }\r\n\r\n  /** 重载弹幕 */\r\n  public async reload(info: VideoInfo) {\r\n    // 清空弹幕池\r\n    this.danmaku!.clear();\r\n    this.player.emit(\"danmaku:loading\");\r\n    this.load(info);\r\n    info.danmaku?.forEach((source) => {\r\n      this.loadSource(source);\r\n    });\r\n  }\r\n}\r\n\r\nconst defaultParsers: Record<string, DanmakuParser> = {\r\n  \"bilibili-xml\": {\r\n    type: \"xml\",\r\n    parse: (xmlDoc: XMLDocument) => {\r\n      console.log(xmlDoc);\r\n      const dan: [string, any][] = [];\r\n      // 获取xml文档的所有子节点\r\n      const nodeList = xmlDoc.childNodes;\r\n      const generate = (nodeList: any) => {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n          const currentNode = nodeList[i];\r\n          if (currentNode?.attributes?.length && i > 0) {\r\n            const m = currentNode.attributes[0].nodeValue.split(\",\");\r\n            const c = currentNode.innerHTML;\r\n            dan.push([c, m]);\r\n          } else if (currentNode.childNodes.length > 0) {\r\n            generate(currentNode.childNodes);\r\n          }\r\n        }\r\n      };\r\n      generate(nodeList);\r\n      return dan.map(([c, m]) => ({\r\n        time: +m[0],\r\n        mode: +m[1],\r\n        color: +m[3],\r\n        user: m[6],\r\n        content: c,\r\n        size: +m[2] || 25,\r\n        date: +m[4] || 0,\r\n        id: +m[7],\r\n      }));\r\n    },\r\n  },\r\n  dplayer: {\r\n    type: \"json\",\r\n    parse: (data: [number, number, number, number | string, string, number, number][]) =>\r\n      data.map((item, i) => ({\r\n        time: item[0],\r\n        mode: [1, 5, 4, 6][item[1]],\r\n        color: item[2],\r\n        user: item[3],\r\n        content: item[4],\r\n        size: 25,\r\n        date: 0,\r\n        id: randomId(),\r\n      })),\r\n  },\r\n  mfuns: {\r\n    type: \"json\",\r\n    parse: (data: [number, number, number, string, string, number, number, number][]) =>\r\n      data.map((item) => ({\r\n        time: item[0],\r\n        mode: item[1],\r\n        color: item[2],\r\n        user: item[3],\r\n        content: item[4],\r\n        size: item[5],\r\n        date: item[6] > 1 ? item[6] : 0,\r\n        id: item[7],\r\n      })),\r\n  },\r\n};\r\n","import { DanmakuItem, DanmakuSendItem } from \"./types\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport type {} from \"./types\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerPlugins {\r\n    danmakuOperate?: DanmakuOperate;\r\n  }\r\n}\r\n\r\n/** 弹幕操作\r\n *\r\n * 负责对弹幕进行api相关操作\r\n *\r\n * 前置插件: `danmaku`\r\n */\r\n\r\nexport default class DanmakuOperate extends BasePlugin {\r\n  static readonly pluginName = \"danmakuOperate\";\r\n\r\n  get danmaku() {\r\n    return this.player.danmaku;\r\n  }\r\n  get invokes() {\r\n    return this.player.invokes || {};\r\n  }\r\n\r\n  /**\r\n   * 发送弹幕\r\n   * @param danmaku 要发送的弹幕\r\n   * @return 操作结果\r\n   * */\r\n  async send(danmaku: DanmakuSendItem): Promise<DanmakuItem> {\r\n    if (!this.invokes.danmakuSend) throw \"发送失败\";\r\n    return await this.invokes\r\n      .danmakuSend(danmaku, this.player.getVideoInfo())\r\n      .then((resDm) => {\r\n        const dm = Object.assign(\r\n          {\r\n            id: `send:${Date.now()}`,\r\n            date: Math.floor(Date.now() / 1000),\r\n            user: this.player.userId || 0,\r\n            fromHere: true,\r\n          },\r\n          resDm || danmaku\r\n        );\r\n        // 操作成功后添加弹幕到弹幕池\r\n        this.danmaku!.add([dm], true);\r\n        return dm;\r\n      })\r\n      .catch((e) => {\r\n        throw e;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 举报弹幕\r\n   * @param danmaku 要举报的弹幕\r\n   * @return 操作结果\r\n   * */\r\n  async report(danmaku: DanmakuItem): Promise<void> {\r\n    if (!this.invokes.danmakuReport) throw \"操作失败\";\r\n    return await this.invokes\r\n      .danmakuReport(danmaku, this.player.getVideoInfo())\r\n      .then((res) => {\r\n        // 操作成功后从弹幕池移除该弹幕\r\n        this.danmaku!.remove([danmaku]);\r\n        return res;\r\n      })\r\n      .catch((e) => {\r\n        throw e;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 删除弹幕\r\n   * @param danmaku 要删除的弹幕\r\n   * @return 操作结果\r\n   * */\r\n  async delete(danmaku: DanmakuItem[]): Promise<void> {\r\n    if (!this.invokes.danmakuDelete) throw \"操作失败\";\r\n    return await this.invokes\r\n      .danmakuDelete(danmaku, this.player.getVideoInfo())\r\n      .then((res) => {\r\n        // 操作成功后从弹幕池移除该弹幕\r\n        this.danmaku!.remove(danmaku);\r\n        return res;\r\n      })\r\n      .catch((e) => {\r\n        throw e;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 删除自己发送的弹幕\r\n   * @param danmaku 要删除的弹幕\r\n   * @return 操作结果\r\n   * */\r\n  async recall(danmaku: DanmakuItem): Promise<void> {\r\n    if (!this.invokes.danmakuRecall) throw \"操作失败\";\r\n    return await this.invokes\r\n      .danmakuRecall(danmaku, this.player.getVideoInfo())\r\n      .then((res) => {\r\n        // 操作成功后从弹幕池移除该弹幕\r\n        this.danmaku!.remove([danmaku]);\r\n        return res;\r\n      })\r\n      .catch((e) => {\r\n        throw e;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 屏蔽用户\r\n   * @param user 用户id\r\n   * @param flag 设置屏蔽状态\r\n   * @return 操作结果\r\n   * */\r\n  async blockUser(user: string | number, flag: boolean): Promise<void> {\r\n    if (!this.invokes.danmakuBlockUser) throw \"操作失败\";\r\n    return await this.invokes\r\n      .danmakuBlockUser(user, flag)\r\n      .then(() => {\r\n        this.player.emit(\"danmaku:blockUser\", user, flag);\r\n      })\r\n      .catch((e) => {\r\n        throw e;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 屏蔽关键词\r\n   * @param content 关键词内容\r\n   * @param flag 设置屏蔽状态\r\n   * @return 操作结果\r\n   * */\r\n  async blockContent(content: string, flag: boolean): Promise<void> {\r\n    if (!this.invokes.danmakuBlockContent) throw \"操作失败\";\r\n    return await this.invokes\r\n      .danmakuBlockContent(content, flag)\r\n      .then((res) => {\r\n        this.player.emit(\"danmaku:blockContent\", content, flag);\r\n      })\r\n      .catch((e) => {\r\n        throw e;\r\n      });\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-danmaku-off\"></i>\r\n    <i class=\"mpicon-danmaku\"></i>\r\n  </div>\r\n  <div class=\"mpui-tooltip\">关闭弹幕</div>\r\n`;\r\n\r\nexport default class ButtonDanmakuToggle extends ControlsPlugin {\r\n  static pluginName = \"buttonDanmakuToggle\";\r\n\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-danmakutoggle is-on` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n  }\r\n\r\n  init() {\r\n    this.player.on(\"danmaku:on\", () => {\r\n      this._change(true);\r\n    });\r\n    this.player.on(\"danmaku:off\", () => {\r\n      this._change(false);\r\n    });\r\n    this.$icon.addEventListener(\"click\", () => {\r\n      if (this.plugins.danmaku) {\r\n        this.plugins.danmaku.toggle();\r\n        this.player.emit(\"setValue\", \"danmaku:hidden\", !this.plugins.danmaku.status);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** 设置按钮状态 */\r\n  private _change(flag: boolean) {\r\n    this.$el.classList.toggle(\"is-on\", flag);\r\n    this.$tooltip.innerText = flag ? \"关闭弹幕\" : \"开启弹幕\";\r\n  }\r\n}\r\n","import type { DanmakuSendItem } from \"@plugins/danmaku/types\";\nimport { keyCode } from \"@/utils/KeyCode.enum\";\nimport { PlayerOptions } from \"@/types\";\nimport { Player } from \"@/player\";\nimport { classPrefix } from \"@/config\";\nimport Controller from \"../ui/controller\";\nimport { ControlsPlugin, ControlsItem, PluginFrom } from \"@/plugin\";\nimport Danmaku from \"./danmaku\";\nimport { createElement } from \"@/utils\";\n\nconst templateHTML = /*html*/ `\n  <div class=\"${classPrefix}-danmakubar-outer\"></div>\n  <div class=\"${classPrefix}-danmakubar-input-wrap\">\n    <div class=\"${classPrefix}-danmakubar-left\"></div>\n    <input type=\"text\" autocompleted=\"new-password\" class=\"${classPrefix}-danmakubar-input\" />\n    <div class=\"${classPrefix}-danmakubar-status-loading\">弹幕功能加载中...</div>\n    <div class=\"${classPrefix}-danmakubar-status-login\">需要<a>登录</a>后才能发送弹幕哦~</div>\n    <div class=\"${classPrefix}-danmakubar-right\"></div>\n    <div class=\"${classPrefix}-danmakubar-send\">发送</div>\n  </div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerOptions {\n    /** 弹幕栏设置 */\n    danmakuBar?: {\n      controls?: DanmakuBarControls;\n      /** 占位文本 */\n      placeholder?: string;\n      /** 需要登录 */\n      loginRequired?: boolean;\n    };\n    danmakuStyle?: {\n      /** 选色列表 */\n      colorList?: string[];\n      /** 字号列表 */\n      sizeList?: [number, string?][];\n      /** 弹幕模式列表 */\n      modeList?: number[];\n      /** 默认弹幕字号 */\n      defaultSize?: number;\n      /** 默认弹幕模式 */\n      defaultMode?: number;\n      /** 默认弹幕模式 */\n      defaultColor?: number;\n    };\n  }\n  interface PlayerPlugins {\n    danmakuBar?: DanmakuBar;\n  }\n}\n\nexport interface DanmakuBarControls {\n  outer?: PluginFrom<ControlsItem>[];\n  left?: PluginFrom<ControlsItem>[];\n  right?: PluginFrom<ControlsItem>[];\n}\n\n/** 弹幕栏\n *\n * 前置插件: `danmaku`\n */\nexport default class DanmakuBar extends ControlsPlugin {\n  static pluginName = \"danmakuBar\";\n\n  $send: HTMLElement;\n  $input: HTMLInputElement;\n  $outer: HTMLElement;\n  $left: HTMLElement;\n  $right: HTMLElement;\n\n  $logina: HTMLElement;\n\n  controller: Controller;\n  danmaku: Danmaku;\n\n  danmakuColor = 0xffffff;\n  danmakuMode = 1;\n  danmakuSize = 25;\n\n  /** 是否需要登录 */\n  #loginRequired = false;\n\n  get loginRequired() {\n    return this.#loginRequired;\n  }\n  get loginStatus() {\n    return this.$el.classList.contains(\"is-login\");\n  }\n\n  /** 冷却计时器 */\n  coolDownTimer = 0;\n\n  protected controls: DanmakuBarControls = {};\n\n  constructor(player: Player) {\n    super(player, createElement(\"div\", { class: `${classPrefix}-danmakubar` }, templateHTML));\n\n    this.controller = this.plugins.controller!;\n    this.danmaku = this.plugins.danmaku!;\n\n    this.$send = this.$el.querySelector(`.${classPrefix}-danmakubar-send`)!;\n    this.$input = this.$el.querySelector(`.${classPrefix}-danmakubar-input`)!;\n    this.$outer = this.$el.querySelector(`.${classPrefix}-danmakubar-outer`)!;\n    this.$left = this.$el.querySelector(`.${classPrefix}-danmakubar-left`)!;\n    this.$right = this.$el.querySelector(`.${classPrefix}-danmakubar-right`)!;\n\n    this.$logina = this.$el.querySelector(`.${classPrefix}-danmakubar-status-login a`)!;\n    this.$logina.onclick = () => this.player.login?.();\n\n    this.player.on(\"videoChange\", () => {\n      this.setLoadingStatus(true);\n    });\n    this.player.on(\"loadeddata\", () => {\n      this.setLoadingStatus(false);\n    });\n    this.player.on(\"login\", (id) => {\n      this.#loginRequired && this.setLoginStatus(!id);\n    });\n\n    this.$input.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode == keyCode.Enter) {\n        this.send();\n      }\n    });\n    this.$send.onclick = () => {\n      this.send();\n    };\n  }\n\n  apply(player: Player, options: PlayerOptions): void {\n    if (options.danmakuBar?.loginRequired) {\n      this.#loginRequired = true;\n    }\n    this.setPlaceHolder(options.danmakuBar?.placeholder || defaultPlaceholder);\n    this.controls = options.danmakuBar?.controls || {};\n  }\n  ready() {\n    this.#loginRequired && !this.player.userId && this.setLoginStatus(true);\n    this.setControls(this.controls);\n  }\n  /** 更新控制组件 */\n  setControls(controls: DanmakuBarControls) {\n    this.controls = controls;\n    const { outer, left, right } = controls;\n    this.build(this.$outer, outer);\n    this.build(this.$left, left);\n    this.build(this.$right, right);\n  }\n  setPlaceHolder(placeholder: string) {\n    this.$input.placeholder = placeholder;\n  }\n  protected build(container: HTMLElement, list?: PluginFrom<ControlsItem>[]) {\n    container.innerHTML = \"\";\n    const fragment = new DocumentFragment();\n    list?.forEach((item) => {\n      const el = this.player.plugin.from(item)?.$el;\n      if (el) fragment.appendChild(el);\n    });\n    container.appendChild(fragment);\n  }\n  /** 执行弹幕发送操作 */\n  private send() {\n    // 如果内容为空或只有空格，则不进行发送操作\n    if (!this.$input.value.trim() || this.coolDownTimer) return;\n    this.plugins.danmakuOperate?.send(this.generateDanmaku());\n    this.$input.value = \"\";\n  }\n  /** 设置弹幕发送冷却 */\n  public setCoolDown(time: number) {\n    if (this.coolDownTimer) {\n      window.clearInterval(this.coolDownTimer);\n    }\n    let t = Math.round(time);\n    this.$send.classList.add(\"is-disabled\");\n    this.$send.innerText = `${t}秒`;\n    this.coolDownTimer = window.setInterval(() => {\n      t -= 1;\n      if (t) {\n        this.$send.innerText = `${t}秒`;\n      } else {\n        this.$send.innerText = \"发送\";\n        this.$send.classList.remove(\"is-disabled\");\n        window.clearInterval(this.coolDownTimer);\n        this.coolDownTimer = 0;\n      }\n    }, 1000);\n  }\n  generateDanmaku(): DanmakuSendItem {\n    return {\n      time: this.player.currentTime,\n      content: this.$input.value,\n      mode: this.danmakuMode,\n      color: this.danmakuColor,\n      size: this.danmakuSize,\n    };\n  }\n  /** 设置登录状态 */\n  private setLoginStatus(flag: boolean) {\n    if (flag) {\n      this.$el.classList.add(\"is-login\");\n    } else {\n      this.$el.classList.remove(\"is-login\");\n    }\n  }\n  /** 设置加载状态 */\n  private setLoadingStatus(flag: boolean) {\n    if (flag) {\n      this.$el.classList.add(\"is-loading\");\n    } else {\n      this.$el.classList.remove(\"is-loading\");\n    }\n  }\n}\n\nconst defaultPlaceholder = \"发条弹幕吧~\";\n","import { MultiPicker, Slider } from \"@/components\";\r\nimport { Player } from \"@/player\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-danmaku-settings\"></i>\r\n  </div>\r\n  <div class=\"${classPrefix}-controls-panel-wrap\">\r\n    <div class=\"${classPrefix}-controls-panel ${classPrefix}-controls-panel-danmaku-settings\">\r\n      <div class=\"${classPrefix}-panel-row\">\r\n        <div class=\"${classPrefix}-row-label\">类型屏蔽</div>\r\n        <div class=\"${classPrefix}-danmaku-settings-filter-picker\"></div>\r\n      </div>\r\n      <div class=\"${classPrefix}-panel-row\">\r\n        <div class=\"${classPrefix}-row-label\">不透明度</div>\r\n        <div\r\n          class=\"${classPrefix}-danmaku-settings-opacity-slider ${classPrefix}-slider-wrap\"\r\n        ></div>\r\n        <div class=\"${classPrefix}-danmaku-settings-opacity-value ${classPrefix}-row-value\"></div>\r\n      </div>\r\n      <div class=\"${classPrefix}-panel-row\">\r\n        <div class=\"${classPrefix}-row-label\">显示区域</div>\r\n        <div class=\"${classPrefix}-danmaku-settings-area-slider ${classPrefix}-slider-wrap\"></div>\r\n        <div class=\"${classPrefix}-danmaku-settings-area-value ${classPrefix}-row-value\"></div>\r\n      </div>\r\n      <div class=\"${classPrefix}-panel-row\">\r\n        <div class=\"${classPrefix}-row-label\">文字大小</div>\r\n        <div class=\"${classPrefix}-danmaku-settings-size-slider ${classPrefix}-slider-wrap\"></div>\r\n        <div class=\"${classPrefix}-danmaku-settings-size-value ${classPrefix}-row-value\"></div>\r\n      </div>\r\n      <div class=\"${classPrefix}-panel-row\">\r\n        <div class=\"${classPrefix}-row-label\">弹幕速度</div>\r\n        <div\r\n          class=\"${classPrefix}-danmaku-settings-speed-slider  ${classPrefix}-slider-wrap\"\r\n        ></div>\r\n        <div class=\"${classPrefix}-danmaku-settings-speed-value ${classPrefix}-row-value\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nexport default class ButtonDanmakuSettings extends ControlsPlugin {\r\n  static pluginName = \"buttonDanmakuSettings\";\r\n\r\n  $icon: HTMLElement;\r\n\r\n  $filterPicker: HTMLElement;\r\n  $opacitySlider: HTMLElement;\r\n  $areaSlider: HTMLElement;\r\n  $sizeSlider: HTMLElement;\r\n  $speedSlider: HTMLElement;\r\n\r\n  $opacityValue: HTMLElement;\r\n  $areaValue: HTMLElement;\r\n  $sizeValue: HTMLElement;\r\n  $speedValue: HTMLElement;\r\n\r\n  pickerFilter!: MultiPicker;\r\n  sliderOpacity!: Slider;\r\n  sliderArea!: Slider;\r\n  sliderSize!: Slider;\r\n  sliderSpeed!: Slider;\r\n\r\n  get danmaku() {\r\n    return this.plugins.danmaku!;\r\n  }\r\n  get danmakuEngine() {\r\n    return this.plugins.danmakuEngine!;\r\n  }\r\n\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-danmakusettings` },\r\n        templateHTML\r\n      )\r\n    );\r\n\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n\r\n    this.$filterPicker = this.$(`.${classPrefix}-danmaku-settings-filter-picker`);\r\n    this.$opacitySlider = this.$(`.${classPrefix}-danmaku-settings-opacity-slider`);\r\n    this.$areaSlider = this.$(`.${classPrefix}-danmaku-settings-area-slider`);\r\n    this.$sizeSlider = this.$(`.${classPrefix}-danmaku-settings-size-slider`);\r\n    this.$speedSlider = this.$(`.${classPrefix}-danmaku-settings-speed-slider`);\r\n\r\n    this.$opacityValue = this.$(`.${classPrefix}-danmaku-settings-opacity-value`);\r\n    this.$areaValue = this.$(`.${classPrefix}-danmaku-settings-area-value`);\r\n    this.$sizeValue = this.$(`.${classPrefix}-danmaku-settings-size-value`);\r\n    this.$speedValue = this.$(`.${classPrefix}-danmaku-settings-speed-value`);\r\n  }\r\n\r\n  init() {\r\n    // 弹幕类型屏蔽\r\n    this.pickerFilter = new MultiPicker({\r\n      container: this.$filterPicker,\r\n      value: this.danmakuEngine?.getTypeBlockList() || [],\r\n      list: [\r\n        { value: \"roll\", label: \"滚动\" },\r\n        { value: \"top\", label: \"顶部\" },\r\n        { value: \"bottom\", label: \"底部\" },\r\n        { value: \"color\", label: \"彩色\" },\r\n        { value: \"special\", label: \"特殊\" },\r\n      ],\r\n      onToggle: (value, flag) => {\r\n        this.danmaku.blockType(value, flag);\r\n        this.player.emit(\"setValue\", \"danmaku:blockType\", this.pickerFilter.value);\r\n      },\r\n    });\r\n    // 不透明度\r\n    this.sliderOpacity = new Slider({\r\n      container: this.$opacitySlider,\r\n      min: 10,\r\n      max: 100,\r\n      step: 1,\r\n      value: this.danmakuEngine?.opacity * 100 || 100,\r\n      onDrag: (value) => {\r\n        this.danmakuEngine.setOpacity(value / 100);\r\n        this.player.emit(\"setValue\", \"danmaku:opacity\", value / 100);\r\n      },\r\n      onChange: (value) => {\r\n        this.$opacityValue.innerText = `${value}%`;\r\n      },\r\n    });\r\n    // 显示区域\r\n    this.sliderArea = new Slider({\r\n      container: this.$areaSlider,\r\n      min: 20,\r\n      max: 105,\r\n      step: 5,\r\n      value:\r\n        this.danmakuEngine?.area == null\r\n          ? this.danmakuEngine?.area > 1\r\n            ? 105\r\n            : this.danmakuEngine?.area * 100\r\n          : 25,\r\n      onDrag: (value) => {\r\n        const area = value > 100 ? 20 : value / 100;\r\n        this.danmakuEngine.setArea(area);\r\n        this.player.emit(\"setValue\", \"danmaku:area\", area);\r\n      },\r\n      onChange: (value) => {\r\n        this.$areaValue.innerText = value < 100 ? `${value}%` : value == 100 ? \"不重叠\" : \"无限\";\r\n      },\r\n    });\r\n    this.sliderArea.drag(25);\r\n    // 文字大小\r\n    this.sliderSize = new Slider({\r\n      container: this.$sizeSlider,\r\n      min: 50,\r\n      max: 200,\r\n      step: 1,\r\n      value: this.danmakuEngine?.scale * 100 || 100,\r\n      onDrag: (value) => {\r\n        this.danmakuEngine.setScale(value / 100);\r\n        this.player.emit(\"setValue\", \"danmaku:scale\", value / 100);\r\n      },\r\n      onChange: (value) => {\r\n        this.$sizeValue.innerText = `${value}%`;\r\n      },\r\n    });\r\n    // 弹幕速度\r\n    this.sliderSpeed = new Slider({\r\n      container: this.$speedSlider,\r\n      min: 20,\r\n      max: 180,\r\n      step: 10,\r\n      value: this.danmakuEngine?.speed * 100 || 100,\r\n      divider: 5,\r\n      onDrag: (value) => {\r\n        this.danmakuEngine.setSpeed(value / 100);\r\n        this.player.emit(\"setValue\", \"danmaku:speed\", value / 100);\r\n      },\r\n      onChange: (value) => {\r\n        this.$speedValue.innerText = `${value}%`;\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { createElement } from \"@/utils\";\r\nimport { html, render } from \"lit-html\";\r\nimport { DanmakuItem } from \"./types\";\r\n\r\nconst templateDanmaku = (\r\n  danmaku: DanmakuItem[],\r\n  operation: (dm: DanmakuItem) => [string, (dm: DanmakuItem) => void, unknown][],\r\n  onClick: (dm: DanmakuItem) => void,\r\n  hide: () => void\r\n) => html`\r\n  ${danmaku.map(\r\n    (dm) => html`\r\n      <li\r\n        class=\"${classPrefix}-contextmenu-danmaku-item\"\r\n        @click=${() => {\r\n          onClick(dm);\r\n        }}\r\n      >\r\n        <div class=\"${classPrefix}-contextmenu-danmaku-item-content\">${dm.content}</div>\r\n        <div class=\"${classPrefix}-contextmenu-danmaku-item-operate\">\r\n          ${operation(dm).map(\r\n            ([label, onClick]) =>\r\n              html`<div\r\n                class=\"${classPrefix}-contextmenu-danmaku-item-operate-btn\"\r\n                @click=${(e: MouseEvent) => {\r\n                  e.stopPropagation();\r\n                  onClick(dm);\r\n                  hide();\r\n                }}\r\n              >\r\n                ${label}\r\n              </div>`\r\n          )}\r\n        </div>\r\n      </li>\r\n    `\r\n  )}\r\n`;\r\n\r\nconst copyClip = (content: string) => navigator.clipboard.writeText(content);\r\n\r\n/** 弹幕菜单\r\n *\r\n * 前置插件: `danmaku` `contextMenu`\r\n */\r\nexport default class DanmakuMenu extends BasePlugin {\r\n  static pluginName = \"danmakuMenu\";\r\n  $el: HTMLElement;\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.$el = createElement(\"ul\", { class: `${classPrefix}-contextmenu-danmaku mpui-black` });\r\n  }\r\n  init() {\r\n    this.player.on(\"contextMenuShow\", (x, y) => {\r\n      const captured = this.plugins.danmakuEngine?.capture(x, y, 4);\r\n      this.update(captured || []);\r\n    });\r\n  }\r\n  ready() {\r\n    this.plugins.contextMenu?.$list.before(this.$el);\r\n  }\r\n  update(danmaku: DanmakuItem[]) {\r\n    const invokes = this.player.invokes;\r\n    const operate = this.plugins.danmakuOperate;\r\n    if (danmaku?.length) {\r\n      this.$el.style.display = \"\";\r\n    } else {\r\n      this.$el.style.display = \"none\";\r\n    }\r\n    render(\r\n      templateDanmaku(\r\n        danmaku,\r\n        (dm) => {\r\n          const myDanmaku = this.player.userId && dm.user == this.player.userId;\r\n          return [\r\n            [\r\n              \"举报\",\r\n              (dm: DanmakuItem) => {\r\n                operate?.report(dm);\r\n              },\r\n              !myDanmaku && invokes?.danmakuReport,\r\n            ],\r\n            [\r\n              \"屏蔽\",\r\n              (dm: DanmakuItem) => {\r\n                operate?.blockUser(dm.user, true);\r\n              },\r\n              !myDanmaku && invokes?.danmakuBlockUser,\r\n            ],\r\n            [\r\n              \"撤回\",\r\n              (dm: DanmakuItem) => {\r\n                operate?.recall(dm);\r\n              },\r\n              myDanmaku && invokes?.danmakuRecall,\r\n            ],\r\n            [\r\n              \"复制\",\r\n              (dm: DanmakuItem) => {\r\n                copyClip(dm.content);\r\n              },\r\n              true,\r\n            ],\r\n          ].filter((v) => v[2]) as [string, (dm: DanmakuItem) => void, unknown][];\r\n        },\r\n        (dm) => {\r\n          this.player.emit(\"danmaku:select\", dm);\r\n        },\r\n        () => {\r\n          this.plugins.contextMenu?.hide();\r\n        }\r\n      ),\r\n      this.$el\r\n    );\r\n  }\r\n}\r\n","import { PlayerOptions } from \"@/types\";\r\nimport { html, render } from \"lit-html\";\r\nimport { classPrefix } from \"@/config\";\r\nimport { Picker } from \"@/components\";\r\nimport { HexColorToNumber, createElement } from \"@/utils\";\r\nimport { ControlsPlugin } from \"@/plugin\";\r\nimport { Player } from \"@core\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    EyeDropper: {\r\n      new (): {\r\n        open: () => Promise<{ sRGBHex: string }>;\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\nconst templateHTML = /*html*/ `\r\n  <div class=\"${classPrefix}-controls-button-icon\">\r\n    <i class=\"mpicon-text\"></i>\r\n  </div>\r\n  <div class=\"${classPrefix}-controls-panel-wrap\">\r\n    <div class=\"${classPrefix}-controls-panel ${classPrefix}-controls-panel-danmaku-style\">\r\n      <div class=\"${classPrefix}-panel-row\">\r\n        <div class=\"${classPrefix}-row-label\">字号</div>\r\n        <div class=\"${classPrefix}-danmaku-style-fontsize-picker\"></div>\r\n      </div>\r\n      <div class=\"${classPrefix}-panel-row\">\r\n        <div class=\"${classPrefix}-row-label\">模式</div>\r\n        <div class=\"${classPrefix}-danmaku-style-mode-picker\"></div>\r\n      </div>\r\n      <div class=\"${classPrefix}-panel-row\">\r\n        <div class=\"${classPrefix}-row-label\">颜色</div>\r\n        <input\r\n          class=\"${classPrefix}-danmaku-style-color-input mpui-input\"\r\n          type=\"text\"\r\n          value=\"#\"\r\n        />\r\n        <div class=\"${classPrefix}-danmaku-style-color-preview\"></div>\r\n        ${\r\n          window.EyeDropper\r\n            ? /*html*/ `<button class=\"${classPrefix}-danmaku-style-color-dropper mpui-button\">\r\n              拾取\r\n            </button>`\r\n            : \"\"\r\n        }\r\n      </div>\r\n      <div class=\"${classPrefix}-danmaku-style-color-picker\"></div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nexport default class ButtonDanmakuStyle extends ControlsPlugin {\r\n  static pluginName = \"buttonDanmakuStyle\";\r\n\r\n  $icon: HTMLElement;\r\n  $tooltip: HTMLElement;\r\n\r\n  $sizePicker: HTMLElement;\r\n  $modePicker: HTMLElement;\r\n  $colorPicker: HTMLElement;\r\n  $colorInput: HTMLInputElement;\r\n  $colorPreview: HTMLElement;\r\n  $colorDropper: HTMLElement | null;\r\n\r\n  pickerSize!: Picker;\r\n  pickerMode!: Picker;\r\n  pickerColor!: Picker;\r\n\r\n  colorList: number[] = [];\r\n  sizeList: [number, string][] = [];\r\n  modeList: number[] = [];\r\n\r\n  get danmakuBar() {\r\n    return this.player.plugins.danmakuBar;\r\n  }\r\n  constructor(player: Player) {\r\n    super(\r\n      player,\r\n      createElement(\r\n        \"div\",\r\n        { class: `${classPrefix}-controls-button ${classPrefix}-button-danmakustyle` },\r\n        templateHTML\r\n      )\r\n    );\r\n    this.$icon = this.$(`.${classPrefix}-controls-button-icon`);\r\n    this.$tooltip = this.$(\".mpui-tooltip\");\r\n\r\n    this.$sizePicker = this.$(`.${classPrefix}-danmaku-style-fontsize-picker`);\r\n    this.$modePicker = this.$(`.${classPrefix}-danmaku-style-mode-picker`);\r\n    this.$colorPicker = this.$(`.${classPrefix}-danmaku-style-color-picker`);\r\n    this.$colorInput = this.$(`.${classPrefix}-danmaku-style-color-input`);\r\n    this.$colorPreview = this.$(`.${classPrefix}-danmaku-style-color-preview`);\r\n    this.$colorDropper = this.$(`.${classPrefix}-danmaku-style-color-dropper`);\r\n  }\r\n\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    if (options.danmakuStyle) {\r\n      const { sizeList, colorList, modeList, defaultSize, defaultColor, defaultMode } =\r\n        options.danmakuStyle;\r\n      if (sizeList) {\r\n        this.pickerSize.list = sizeList.map(([value, label]) => ({ value, label }));\r\n        this.pickerSize.reload(defaultSize);\r\n      }\r\n      if (colorList) {\r\n        this.pickerSize.list = colorList.map((value) => ({ value }));\r\n        this.pickerSize.reload(defaultColor);\r\n      }\r\n      if (modeList) {\r\n        this.pickerMode.list = [\r\n          { value: 1, label: \"滚动\" },\r\n          { value: 5, label: \"顶部\" },\r\n          { value: 4, label: \"底部\" },\r\n          { value: 6, label: \"逆向\" },\r\n        ].filter((item) => modeList.indexOf(item.value) > -1);\r\n        this.pickerMode.reload(defaultMode);\r\n      }\r\n    }\r\n  }\r\n\r\n  init(player: Player) {\r\n    this.pickerSize = new Picker({\r\n      container: this.$sizePicker,\r\n      value: 25,\r\n      list: defaultSizeList.map(([value, label]) => ({\r\n        value,\r\n        label,\r\n      })),\r\n      onPick: (value) => {\r\n        this.danmakuBar!.danmakuSize = Number(value);\r\n      },\r\n    });\r\n    this.pickerMode = new Picker({\r\n      container: this.$modePicker,\r\n      value: 1,\r\n      list: [\r\n        { value: 1, label: \"滚动\" },\r\n        { value: 5, label: \"顶部\" },\r\n        { value: 4, label: \"底部\" },\r\n        { value: 6, label: \"逆向\" },\r\n      ].filter((item) => defaultModeList.indexOf(item.value) > -1),\r\n      onChange: (value) => {\r\n        this.danmakuBar!.danmakuMode = Number(value) || 1;\r\n      },\r\n    });\r\n    this.pickerColor = new Picker({\r\n      container: this.$colorPicker,\r\n      value: \"#FFFFFF\",\r\n      list: defaultColorList.map((item) => ({ value: item })),\r\n      onPick: (value) => {\r\n        this.danmakuBar!.danmakuColor = HexColorToNumber(value as string);\r\n      },\r\n      onChange: (value) => {\r\n        this.$colorInput.value = value as string;\r\n        this.$colorPreview.style.backgroundColor = value as string;\r\n      },\r\n      template: (item) => html` <div style=\"background-color: ${item.value}\"></div> `,\r\n      condition: (item, value) => {\r\n        return item.toLowerCase() == (value as string).toLowerCase();\r\n      },\r\n    });\r\n    this.$colorInput.addEventListener(\"input\", () => {\r\n      const value = this.$colorInput.value;\r\n      this.$colorInput.value = \"#\" + value.replace(/[^0-9A-Fa-f]/g, \"\").slice(0, 6);\r\n      if (/^#([0-9A-Fa-f]{6}|[0-9A-Fa-f]{3})$/.test(value)) {\r\n        this.pickerColor.pick(value);\r\n      }\r\n    });\r\n    if (this.$colorDropper) {\r\n      this.$colorDropper.onclick = () => {\r\n        if (window.EyeDropper) {\r\n          const dropper = new window.EyeDropper();\r\n          dropper.open().then(({ sRGBHex }) => {\r\n            this.pickerColor.pick(sRGBHex);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nconst defaultSizeList: [number, string][] = [\r\n  [18, \"小\"],\r\n  [25, \"中\"],\r\n  [36, \"大\"],\r\n];\r\n\r\nconst defaultModeList = [1, 5, 4];\r\n\r\nconst defaultColorList = [\r\n  \"#FE0302\",\r\n  \"#FFFF00\",\r\n  \"#00CD00\",\r\n  \"#00FF00\",\r\n  \"#4E6EF2\",\r\n  \"#89D5FF\",\r\n  \"#7B7FF7\",\r\n  \"#757575\",\r\n  \"#FFFFFF\",\r\n  \"#FB7229\",\r\n];\r\n","import { PlayerOptions } from \"@/types\";\r\nimport Danmaku from \"../danmaku/danmaku\";\r\nimport DanmakuEngine from \"../danmaku/danmakuEngine\";\r\nimport DanmakuLoader from \"../danmaku/danmakuLoader\";\r\nimport DanmakuOperate from \"../danmaku/danmakuOperate\";\r\nimport ButtonDanmakuToggle from \"../danmaku/controls/ButtonDanmakuToggle\";\r\nimport DanmakuBar from \"../danmaku/danmakuBar\";\r\nimport ButtonDanmakuSettings from \"../danmaku/controls/ButtonDanmakuSettings\";\r\nimport DanmakuMenu from \"../danmaku/danmakuMenu\";\r\nimport ButtonDanmakuStyle from \"../danmaku/controls/ButtonDanmakuStyle\";\r\nimport DanmakuCount from \"@plugins/danmaku/controls/danmakuCount\";\r\n\r\nconst danmakuPlugins = [\r\n  Danmaku,\r\n  DanmakuEngine,\r\n  DanmakuLoader,\r\n  DanmakuOperate,\r\n  DanmakuBar,\r\n  DanmakuMenu,\r\n];\r\nconst danmakuControls = [\r\n  ButtonDanmakuToggle,\r\n  ButtonDanmakuSettings,\r\n  ButtonDanmakuStyle,\r\n  DanmakuCount,\r\n];\r\n\r\nexport const presetDanmaku = [...danmakuPlugins, ...danmakuControls];\r\n","import { BasePlugin } from \"@/plugin\";\nimport { QualityItem } from \"@plugins/quality\";\n\ndeclare module \"@core\" {\n  interface VideoInfo {\n    qualities?: QualityItem[];\n  }\n}\n/** 将视频质量列表作为视频参数传入 */\nexport default class Qualities extends BasePlugin {\n  /** 比较函数，若设置则根据该函数对清晰度列表排序 */\n  compare?: (a: QualityItem, b: QualityItem) => number;\n  /** 优先选择函数，默认情况下选择列表第一个值 */\n  prior?: (list: QualityItem[]) => QualityItem;\n  init() {\n    this.player.on(\"videoChange\", (info) => {\n      if (info.qualities) {\n        this.compare && info.qualities.sort((a, b) => this.compare!(a, b));\n        this.player.quality?.updateList(info.qualities);\n      }\n    });\n    this.player.hook.register(\"video.beforeLoad\", (info) => {\n      const list = this.player.getVideoInfo().qualities;\n      let quality: QualityItem = {};\n      if (list) {\n        if (info.url) {\n          quality = list.find((item) => item.url == info.url) || { url: info.url, type: info.type };\n        } else {\n          quality =\n            list.find((item) => item.isDefault) || (this.prior ? this.prior(list) : list[0]);\n          info.url = quality.url;\n          info.type = quality.type;\n        }\n      }\n      this.player.quality?.updateCurrent(quality);\n    });\n  }\n}\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { LoadInfo, MediaController, PlayerOptions } from \"@/types\";\r\nimport type Hls from \"hls.js\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerExternals {\r\n    hlsjs: () => Promise<typeof Hls>;\r\n  }\r\n}\r\ndeclare global {\r\n  interface Window {\r\n    Hls?: typeof Hls;\r\n  }\r\n}\r\n\r\nexport interface HlsMediaController extends MediaController {\r\n  kernel: Hls | null;\r\n}\r\n\r\nexport default class HlsLoader extends BasePlugin {\r\n  static pluginName = \"hlsLoader\";\r\n  private Hls?: typeof Hls;\r\n  private _getHlsjs?: () => Promise<typeof Hls>;\r\n  private _supported?: boolean;\r\n  constructor(player: Player) {\r\n    super(player);\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this._getHlsjs = options.externals?.hlsjs;\r\n    this.player.loader.register(\"hls\", this);\r\n  }\r\n  check(info: LoadInfo) {\r\n    return info.type == \"hls\" || info.type == \"m3u8\";\r\n  }\r\n  create(info: LoadInfo, video: HTMLVideoElement): HlsMediaController {\r\n    const { type, url, live, play, time } = info;\r\n    const controller: HlsMediaController = {\r\n      kernel: null,\r\n      type: type || \"\",\r\n      url: url,\r\n      live: live || false,\r\n      mediaElement: video,\r\n      destroy() {\r\n        this.kernel?.destroy();\r\n        this.kernel = null;\r\n      },\r\n    };\r\n    this.initHls().then(() => {\r\n      const hlsPlayer = new this.Hls!();\r\n      controller.kernel = hlsPlayer;\r\n      const t = time === true ? this.player.currentTime : time;\r\n      hlsPlayer.attachMedia(video);\r\n      hlsPlayer.on(this.Hls!.Events.MEDIA_ATTACHED, () => {\r\n        hlsPlayer.loadSource(url);\r\n      });\r\n      this.player.once(\"loadedmetadata\", () => {\r\n        if (t) {\r\n          this.player.seek(t);\r\n        }\r\n        if (play) {\r\n          this.player.play();\r\n        }\r\n      });\r\n      return true;\r\n    });\r\n    return controller;\r\n  }\r\n\r\n  /** 初始化hls.js */\r\n  async initHls() {\r\n    if (this._supported == true) {\r\n      return;\r\n    } else if (this._supported == false) {\r\n      throw new Error(\"播放器不支持hls加载\");\r\n    } else {\r\n      this.Hls ??= window.Hls;\r\n      if (!this.Hls) {\r\n        if (!this._getHlsjs) {\r\n          this.throw(new Error(\"hls.js初始化失败: 播放器未引入hls.js\"));\r\n        } else {\r\n          this.Hls =\r\n            (await this._getHlsjs().catch((e) => {\r\n              this.throw(new Error(`hls.js初始化失败: ${e}`));\r\n            })) || void 0;\r\n          this._supported = this.Hls?.isSupported() || false;\r\n          if (this._supported == false) throw new Error(\"播放器不支持hls加载\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable new-cap */\r\nimport { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { LoadInfo, MediaController, MediaLoader, PlayerOptions } from \"@/types\";\r\nimport type dashjs from \"dashjs\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerExternals {\r\n    dashjs: () => Promise<typeof dashjs>;\r\n  }\r\n}\r\ndeclare global {\r\n  interface Window {\r\n    dashjs?: typeof dashjs;\r\n  }\r\n}\r\n\r\nexport interface DashMediaController extends MediaController {\r\n  kernel: dashjs.MediaPlayerClass | null;\r\n}\r\n\r\nexport default class DashLoader extends BasePlugin implements MediaLoader {\r\n  static pluginName = \"dashLoader\";\r\n  private dashjs?: typeof dashjs;\r\n  private _getDashjs?: () => Promise<typeof dashjs>;\r\n  private _supported?: boolean;\r\n  constructor(player: Player) {\r\n    super(player);\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this._getDashjs = options.externals?.dashjs;\r\n    this.player.loader.register(\"dash\", this);\r\n  }\r\n  check(info: LoadInfo) {\r\n    return info.type == \"dash\" || info.type == \"m3u8\";\r\n  }\r\n  create(info: LoadInfo, video: HTMLVideoElement): DashMediaController {\r\n    const { type, url, live, play, time } = info;\r\n    const controller: DashMediaController = {\r\n      kernel: null,\r\n      type: type || \"\",\r\n      url: url,\r\n      live: live || false,\r\n      mediaElement: video,\r\n      destroy() {\r\n        this.kernel?.destroy();\r\n        this.kernel = null;\r\n      },\r\n    };\r\n    this.initDash().then(() => {\r\n      const dashPlayer = this.dashjs!.MediaPlayer().create();\r\n      controller.kernel = dashPlayer;\r\n      const t = time === true ? this.player.currentTime : time === false ? 0 : time;\r\n      dashPlayer.initialize(video, url, play, t);\r\n    });\r\n    return controller;\r\n  }\r\n\r\n  /** 初始化dash.js */\r\n  async initDash() {\r\n    if (this._supported == true) {\r\n      return;\r\n    } else if (this._supported == false) {\r\n      throw new Error(\"播放器不支持dash加载\");\r\n    } else {\r\n      this.dashjs ??= window.dashjs;\r\n      if (!this.dashjs) {\r\n        if (!this._getDashjs) {\r\n          throw new Error(\"dash.js初始化失败: 播放器未引入dash.js\");\r\n        } else {\r\n          this.dashjs =\r\n            (await this._getDashjs().catch((e) => {\r\n              throw new Error(`dash.js初始化失败: ${e}`);\r\n            })) || undefined;\r\n          this._supported = this.dashjs?.supportsMediaSource() || false;\r\n          if (this._supported == false) throw new Error(\"播放器不支持dash加载\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Player } from \"@/player\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { LoadInfo, MediaController, MediaLoader, PlayerOptions } from \"@/types\";\r\nimport type FlvJs from \"flv.js\";\r\n\r\ndeclare module \"@core\" {\r\n  interface PlayerExternals {\r\n    flvjs: () => Promise<typeof FlvJs>;\r\n  }\r\n}\r\ndeclare global {\r\n  interface Window {\r\n    flvjs?: typeof FlvJs;\r\n  }\r\n}\r\n\r\nexport interface FlvMediaController extends MediaController {\r\n  kernel: FlvJs.Player | null;\r\n}\r\n\r\nexport default class FlvLoader extends BasePlugin implements MediaLoader {\r\n  static pluginName = \"flvLoader\";\r\n  private flvjs?: typeof FlvJs;\r\n  private _getFlvjs?: () => Promise<typeof FlvJs>;\r\n  private _supported?: boolean;\r\n  constructor(player: Player) {\r\n    super(player);\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this._getFlvjs = options.externals?.flvjs;\r\n    this.player.loader.register(\"flv\", this);\r\n  }\r\n  check(info: LoadInfo) {\r\n    return info.type == \"flv\";\r\n  }\r\n  create(info: LoadInfo, video: HTMLVideoElement): FlvMediaController {\r\n    const { type, url, live, play, time } = info;\r\n    const controller: FlvMediaController = {\r\n      kernel: null,\r\n      type: type || \"\",\r\n      url: url,\r\n      live: live || false,\r\n      mediaElement: video,\r\n      destroy() {\r\n        this.kernel?.destroy();\r\n        this.kernel = null;\r\n      },\r\n    };\r\n    this.initFlv().then(() => {\r\n      const flvPlayer = this.flvjs!.createPlayer({\r\n        type: type || \"flv\",\r\n        url: url,\r\n        cors: true,\r\n        isLive: live,\r\n      });\r\n      controller.kernel = flvPlayer;\r\n      const t = time === true ? this.player.currentTime : time === false ? 0 : time;\r\n      flvPlayer.attachMediaElement(video);\r\n      flvPlayer.load();\r\n      t && (flvPlayer.currentTime = t);\r\n      play && flvPlayer.play();\r\n    });\r\n    return controller;\r\n  }\r\n  /** 初始化flvjs */\r\n  async initFlv() {\r\n    if (this._supported == true) {\r\n      return;\r\n    } else if (this._supported == false) {\r\n      throw new Error(\"播放器不支持flv加载\");\r\n    } else {\r\n      this.flvjs ??= window.flvjs;\r\n      if (!this.flvjs) {\r\n        if (!this._getFlvjs) {\r\n          throw new Error(\"flv.js初始化失败: 播放器未引入flv.js\");\r\n        } else {\r\n          this.flvjs =\r\n            (await this._getFlvjs().catch((e) => {\r\n              throw new Error(`flv.js初始化失败: ${e}`);\r\n            })) || void 0;\r\n          this._supported = this.flvjs?.isSupported() || false;\r\n          if (this._supported == false) throw new Error(\"播放器不支持flv加载\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Checkbox } from \"@/components\";\r\nimport { Player } from \"@/player\";\r\nimport { PlayerOptions } from \"@/types\";\r\nimport { BasePlugin } from \"@/plugin\";\r\nimport { ResizeObserver as ResizeObserverPonyfill } from \"@juggle/resize-observer\";\r\n\r\ndeclare module \"@core\" {\r\n  interface Player {\r\n    aspectRatio?: string;\r\n    setAspectRatio?: (value: string) => void;\r\n  }\r\n  interface PlayerEventMap {\r\n    /** 视频比例 */\r\n    aspectRatioChange: (value: string) => void;\r\n  }\r\n  interface PlayerOptions {\r\n    /** 视频比例 */\r\n    aspectRatio?: string;\r\n  }\r\n}\r\n\r\n/** 视频比例 */\r\n\r\nexport default class AspectRatio extends BasePlugin {\r\n  static pluginName = \"aspectRatio\";\r\n  #ratio: [number, number] | null = null;\r\n  private readonly observer?: ResizeObserver;\r\n  constructor(player: Player) {\r\n    super(player);\r\n\r\n    // --- 初始化observer --- //\r\n    const Observer = window.ResizeObserver || ResizeObserverPonyfill;\r\n    if (Observer) {\r\n      this.observer = new Observer(([item]) => {\r\n        const { width, height } = item.contentRect;\r\n        this._keepRatio(width, height);\r\n      });\r\n    }\r\n  }\r\n  apply(player: Player, options: PlayerOptions): void {\r\n    this.#ratio = this._parse(options.aspectRatio || \"\");\r\n  }\r\n  init() {\r\n    this.player.define(\"aspectRatio\", { get: () => this._stringify(this.#ratio) });\r\n    this.player.define(\"setAspectRatio\", (value: string) => {\r\n      this.set(value);\r\n    });\r\n  }\r\n  mounted(): void {\r\n    this.observer?.observe(this.player.$area);\r\n    this._setRatio(this.#ratio);\r\n  }\r\n  set(value: string) {\r\n    const ratio = this._parse(value);\r\n    this.#ratio = ratio;\r\n    this._setRatio(ratio);\r\n    this.player.emit(\"aspectRatioChange\", this._stringify(ratio));\r\n  }\r\n  /** 设置视频比例 */\r\n  private _setRatio(ratio: [number, number] | null) {\r\n    const video = this.player.$video;\r\n    video.style.width = \"\";\r\n    video.style.height = \"\";\r\n    if (ratio) {\r\n      const [ratioW, ratioH] = ratio;\r\n      video.style.aspectRatio = `${ratioW}/${ratioH}`;\r\n      video.style.objectFit = \"fill\";\r\n      const { width, height } = video.getBoundingClientRect();\r\n      const { width: cWidth, height: cHeight } = this.player.$area.getBoundingClientRect();\r\n      if (width == cWidth && height == cHeight) {\r\n        this._rescale(width, height, ratioW, ratioH);\r\n      }\r\n    } else {\r\n      video.style.aspectRatio = \"\";\r\n      video.style.objectFit = \"\";\r\n    }\r\n  }\r\n  /** 保持视频比例 */\r\n  private _keepRatio(cWidth: number, cHeight: number) {\r\n    if (this.#ratio) {\r\n      const video = this.player.$video;\r\n      video.style.width = \"\";\r\n      video.style.height = \"\";\r\n      const [ratioW, ratioH] = this.#ratio;\r\n      const { width, height } = video.getBoundingClientRect();\r\n      console.log(`${width} x ${height} -- ${cWidth} x ${cHeight}`);\r\n      if (Math.abs(width - cWidth) < 1 && Math.abs(height - cHeight) < 1) {\r\n        // 该情况表示播放器大小可能已被固定，需要重新计算宽高\r\n        this._rescale(cWidth, cHeight, ratioW, ratioH);\r\n      }\r\n    }\r\n  }\r\n  /** 根据当前视频宽高重新维持视频比例 */\r\n  private _rescale(width: number, height: number, ratioW: number, ratioH: number) {\r\n    const rwxh = ratioW * height;\r\n    const rhxw = ratioH * width;\r\n    const video = this.player.$video;\r\n    if (rwxh < rhxw) {\r\n      video.style.width = `${(rwxh / rhxw) * 100}%`;\r\n      video.style.height = \"100%\";\r\n    } else {\r\n      video.style.width = \"100%\";\r\n      video.style.height = `${(rhxw / rwxh) * 100}%`;\r\n    }\r\n  }\r\n  private _parse(value: string): [number, number] | null {\r\n    const [x, y] = value.split(\"/\").map((n) => parseFloat(n));\r\n    return x && y && isFinite(x) && isFinite(y) ? [x, y] : null;\r\n  }\r\n  private _stringify(ratio: [number, number] | null) {\r\n    return ratio ? ratio.join(\"/\") : \"\";\r\n  }\r\n}\r\n","import { classPrefix } from \"@/config\";\nimport { Player } from \"@/player\";\n\nimport { ControlsItem, PluginFrom, UIPlugin } from \"@/plugin\";\nimport { createElement } from \"@/utils\";\nimport { PlayerOptions } from \"@core\";\n\nconst templateHTML = /*html*/ `\n    <div class=\"${classPrefix}-footbar-left\"></div>\n    <div class=\"${classPrefix}-footbar-right\"></div>\n`;\n\ndeclare module \"@core\" {\n  interface PlayerPlugins {\n    footbar?: Footbar;\n  }\n  interface PlayerOptions {\n    /** 弹幕栏设置 */\n    footbar?: {\n      controls?: FootbarControls;\n    };\n  }\n}\n\nexport interface FootbarControls {\n  left?: PluginFrom<ControlsItem>[];\n  right?: PluginFrom<ControlsItem>[];\n}\n\n/** 底栏 */\nexport default class Footbar extends UIPlugin {\n  static pluginName = \"footbar\";\n  $left: HTMLElement;\n  $right: HTMLElement;\n\n  controls: FootbarControls = {};\n\n  constructor(player: Player) {\n    super(player, createElement(\"div\", { class: `${classPrefix}-footbar` }, templateHTML));\n    this.$left = this.$(`.${classPrefix}-footbar-left`);\n    this.$right = this.$(`.${classPrefix}-footbar-right`);\n  }\n  apply(player: Player, options: PlayerOptions) {\n    this.controls = options.footbar?.controls || {};\n    this.player.$el.append(this.$el);\n  }\n  ready() {\n    this.setControls(this.controls);\n  }\n  /** 更新控制组件 */\n  setControls(controls: FootbarControls) {\n    this.controls = controls;\n    const { left, right } = controls;\n    this.build(this.$left, left);\n    this.build(this.$right, right);\n  }\n  protected build(container: HTMLElement, list?: PluginFrom<ControlsItem>[]) {\n    container.innerHTML = \"\";\n    const fragment = new DocumentFragment();\n    list?.forEach((item) => {\n      const el = this.player.plugin.from(item)?.$el;\n      if (el) fragment.appendChild(el);\n    });\n    container.appendChild(fragment);\n  }\n}\n","import { Player as CorePlayer } from \"./core-player\";\nimport { PlayerOptions } from \"@/types\";\nimport DanmakuList from \"../mfuns-plugin/danmakuList\";\nimport BlackBorder from \"@plugins/enhance/video/blackBorder\";\nimport Widescreen from \"@plugins/screen/widescreen\";\nimport { ButtonWebscreen, ButtonWidescreen } from \"@plugins/controls\";\nimport About from \"@plugins/panels/about\";\nimport Hotkeys from \"@plugins/panels/hotkeyInfo\";\nimport { presetBasic } from \"@plugins/presets/basic\";\nimport AutoPart from \"@plugins/enhance/playback/autoPart\";\nimport AutoPlay from \"@plugins/enhance/playback/autoPlay\";\nimport AutoSeek from \"@plugins/enhance/playback/autoSeek\";\nimport Theme from \"@plugins/theme\";\nimport Part from \"@plugins/videoOptions/part\";\nimport Seamless from \"@plugins/patch/seamless\";\nimport PartList from \"@plugins/panels/partList\";\nimport ButtonDanmakulist from \"@plugins/controls/button/ButtonDanmakulist\";\nimport Quality from \"@plugins/quality\";\nimport ButtonQuality from \"@plugins/controls/button/ButtonQuality\";\nimport VideoStatus from \"@plugins/enhance/ui/videoStatus\";\nimport LoadingMask from \"@plugins/enhance/ui/loadingMask\";\nimport VideoTitle from \"@plugins/danmaku/controls/danmakuCount\";\nimport Header from \"@plugins/ui/header\";\nimport Mini from \"@plugins/enhance/ui/mini\";\nimport LightOff from \"@plugins/enhance/ui/lightOff\";\nimport Webscreen from \"@plugins/screen/webscreen\";\nimport { presetDanmaku } from \"@plugins/presets/danmaku\";\nimport VideoQuality from \"@plugins/videoOptions/qualities\";\nimport HlsLoader from \"@plugins/videoLoader/hlsLoader\";\nimport DashLoader from \"@plugins/videoLoader/dashLoader\";\nimport FlvLoader from \"@plugins/videoLoader/flvLoader\";\nimport AspectRatio from \"@plugins/enhance/video/aspectRatio\";\nimport Footbar from \"@plugins/ui/footbar\";\nimport { mergeOptions } from \"@/utils\";\n\n/** 内置插件 */\nconst plugins = [\n  Quality,\n  VideoQuality,\n  Header,\n  Part,\n  Seamless,\n  DanmakuList,\n  BlackBorder,\n  AspectRatio,\n  Webscreen,\n  Widescreen,\n  AutoPlay,\n  AutoPart,\n  AutoSeek,\n  Theme,\n  VideoStatus,\n  LoadingMask,\n  Mini,\n  LightOff,\n  Footbar,\n];\n\nconst panels = [About, Hotkeys, PartList];\n\nconst controls = [ButtonWebscreen, ButtonWidescreen, ButtonDanmakulist, ButtonQuality, VideoTitle];\n\nconst loaders = [FlvLoader, HlsLoader, DashLoader];\n\nconst allPlugins = [\n  ...presetDanmaku,\n  ...presetBasic,\n  ...plugins,\n  ...panels,\n  ...controls,\n  ...loaders,\n] as const;\n\n/** MfunsPlayer 播放页版播放器\n *\n * 插件功能：快捷键、右键菜单、弹幕栏、弹幕列表、视频黑边、宽屏模式、关灯模式\n */\nexport class Player extends CorePlayer {\n  constructor(options: PlayerOptions) {\n    super(\n      mergeOptions(\n        {\n          autoPart: true,\n          header: { controls: { left: [\"videoTitle\"] } },\n          controller: {\n            controls: {\n              top: [\"progress\"],\n              center: [],\n              left: [\"buttonPrev\", \"buttonPlay\", \"buttonNext\", \"videoTime\", \"buttonLoop\"],\n              right: [\n                \"buttonQuality\",\n                \"buttonPart\",\n                \"buttonVolume\",\n                \"buttonSettings\",\n                \"buttonPip\",\n                \"buttonWidescreen\",\n                \"buttonWebscreen\",\n                \"buttonFullscreen\",\n              ],\n            },\n          },\n          danmakuBar: {\n            controls: {\n              outer: [\"buttonDanmakuToggle\", \"buttonDanmakuSettings\"],\n              left: [\"buttonDanmakuStyle\"],\n            },\n          },\n          footbar: {\n            controls: {\n              left: [\"danmakuCount\"],\n              right: [\"danmakuBar\"],\n            },\n          },\n          side: {\n            panels: [\"partList\"],\n          },\n          plugins: [...allPlugins],\n        },\n        options\n      )\n    );\n  }\n}\n\nexport * from \"@/plugin\";\nexport * from \"@/config\";\nexport * as Utils from \"@/utils\";\nexport * as Components from \"@/components\";\nexport type { allPlugins };\n"],"names":["isMobile","fullScreenEnabled","pictureInPictureEnabled","createElement","tagName","attributes","children","el","name","replaceChildren","element","debounce","fn","delay","immediate","timer","isInvoke","args","throttle","wait","random","lower","upper","clamp","number","timeToSecond","time","arr","sec","min","hour","day","secondToTime","second","level","join","num","minute","HexColorToNumber","color","numberToHexColor","dateFormatMap","d","dateFormat","date","format","match","_a","isPlainObject","obj","assignDeep","result","item","key","mergeOptions","opts","plugins","op","classPrefix","version","gitHash","repositoryLink","developers","videoEventMap","v","VideoController","player","options","res","info","play","_b","url","type","live","loadInfo","video","eventName","values","_c","PluginManager","pluginItem","_d","plugin","HookManager","func","before","hook","index","ctx","defaultFunc","f","LoaderManager","loader","controller","t","EventEmitter","listener","i","Player$1","volume","flag","value","err","BasePlugin","UIPlugin","selectors","_onUnmount","MountablePlugin","__privateAdd","opt","__privateSet","__privateGet","ControlsPlugin","_onToggle","PanelPlugin","MenuPlugin","template","divider","Slider","container","max","step","onChange","onDragStart","onDragEnd","onDrag","event","e","clientX","trackLength","nMax","thumbTrackX","nLeft","nLength","mousemoveEvent","removeEvent","per","templateHTML","SliderVertical","clientY","thumbTrackY","nTop","s","o","n","l","h","r","u","c","a","_","m","p","g","$","y","w","x","T","A","E","C","P","V","N","H","L","z","k","S","M","R","Z","I","B","D","templateWrap","list","html","Picker","onPick","condition","render","MultiPicker","onToggle","b","Switch","Checkbox","label","Player","VirtualList","getData","itemHeight","createItem","overflow","clientH","scrollTop","oldRenderStart","oldRenderEnd","beforeItems","addFrom","addTo","removeFrom","removeTo","child","afterItems","top","getDanmakuListItem","danmaku","operation","onClick","onDblclick","selected","focused","title","operations","operationList","available","operationItem","_DanmakuList","dm","pos","invokes","operate","myDanmaku","unFreeze","dan","sortedBy","sortOrder","at","bt","status","viewEnd","selectedIndex","focusedIndex","focusedItem","shift","ctrl","from","to","DanmakuList","_BlackBorder","val","BlackBorder","_Widescreen","Widescreen","_ButtonPlay","ButtonPlay","_ButtonPrev","hasNext","hasPrev","ButtonPrev","_ButtonNext","ButtonNext","_VideoTime","inputVal","VideoTime","_ButtonLoop","ButtonLoop","_ButtonPart","ButtonPart","_ButtonVolume","muted","ButtonVolume","_ButtonSettings","controls","fragment","ButtonSettings","_ButtonPip","ButtonPip","_ButtonWidescreen","ButtonWidescreen","_ButtonWebscreen","ButtonWebscreen","_ButtonFullscreen","ButtonFullscreen","link","_about","about","description","_HotkeyInfo","hotkeyInfoList","HotkeyInfo","_ContextMenu","pi","content","clientRect","ContextMenu","_Controller","left","center","right","Controller","keyCode","_Hotkey","tag","editable","throttleWheelVolume","wheelY","Hotkey","_initPanels","_Modal","panel","Modal","_Progress","dragMoveEvent","dragEndEvent","buffered","Progress","_Settings","rate","ratio","Settings","_Side","Side","_Pip","Pip","_Fullscreen","fullScreenChangeHandler","doc","Fullscreen","_User","author","userId","User","_status","_mousemove","_StateActive","debounceRemoveActive","StateActive","_StateFocus","StateFocus","resizeObservers","hasActiveObservations","ro","hasSkippedObservations","msg","deliverResizeLoopError","ResizeObserverBoxOptions","freeze","ResizeObserverSize","inlineSize","blockSize","DOMRectReadOnly","width","height","bottom","rectangle","isSVG","target","isHidden","offsetWidth","offsetHeight","isElement","scope","isReplacedElement","global","cache","scrollRegexp","verticalRegexp","IE","parseDimension","pixel","size","switchSizes","zeroBoxes","calculateBoxSizes","forceRecalculation","cs","svg","removePadding","canScrollVertically","canScrollHorizontally","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderRight","borderBottom","borderLeft","horizontalPadding","verticalPadding","horizontalBorderArea","verticalBorderArea","horizontalScrollbarThickness","verticalScrollbarThickness","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","calculateBoxSize","observedBox","borderBoxSize","contentBoxSize","devicePixelContentBoxSize","ResizeObserverEntry","calculateDepthForNode","node","depth","parent","broadcastActiveObservations","shallowestDepth","callbacks","entries","ot","entry","targetDepth","_i","callbacks_1","callback","gatherActiveObservationsAtDepth","process","trigger","notify","cb","queueMicroTask","toggle_1","el_1","config","queueResizeObserver","watching","isWatching","CATCH_PERIOD","observerConfig","events","timeout","scheduled","Scheduler","_this","until","elementsHaveResized","scheduler","updateCount","skipNotifyOnElement","ResizeObservation","ResizeObserverDetail","resizeObserver","observerMap","getObservationIndex","observationTargets","ResizeObserverController","detail","firstObservation","lastObservation","ResizeObserver","_StateResize","Observer","ResizeObserverPonyfill","StateResize","_StateIntersecting","isIntersecting","StateIntersecting","_Toast","duration","close","button","closeHandler","Toast","corePlugins","basicPlugins","basicControls","LabelTime","presetBasic","_AutoPart","part","AutoPart","_AutoPlay","AutoPlay","_AutoSeek","AutoSeek","themeOptionsVars","_Theme","theme","scheme","Theme","_Part","Part","_Seamless","oldVideo","Seamless","templateList","setPart","_PartList","PartList","_ButtonDanmakulist","ButtonDanmakulist","_Quality","quality","Quality","_ButtonQuality","ButtonQuality","_VideoStatus","debounceHide","VideoStatus","_LoadingMask","line","handler","id","LoadingMask","_DanmakuCount","count","DanmakuCount","_Header","Header","_shown","_dragging","_enabled","_Mini","disabled","offsetLeft","offsetTop","mLeft","mTop","mousemoveHandler","mouseupHandler","Mini","_LightOff","LightOff","_Webscreen","Webscreen","_Danmaku","Danmaku","DanmakuMode","MeonDanmakuEngine","ty","displayed","contentIndex","items","keyword","user","containerWidth","containerHeight","itemY","danItemRight","containerRight","elRight","danItemLeft","containerLeft","getSpeed","getDOMTrack","getTrack","ele","forTrack","DOMTrack","track","enterTime","danRight","danLeft","docFragment","itemWidth","trackType","trackIndex","maxTop","prev","cur","speed","distance","topArr","topDan","bottomArr","bottomDan","text","font","range","single","elRect","containerRect","edgeLeft","edgeRight","edgeTop","edgeBottom","resultDOM","_DanmakuEngine","scale","area","bold","opacity","blockType","DanmakuEngine","ar","randomId","hs","al","_DanmakuLoader","defaultParsers","response","raw","parser","data","source","DanmakuLoader","xmlDoc","nodeList","generate","currentNode","_DanmakuOperate","resDm","DanmakuOperate","_ButtonDanmakuToggle","ButtonDanmakuToggle","_loginRequired","_DanmakuBar","defaultPlaceholder","outer","placeholder","DanmakuBar","_ButtonDanmakuSettings","_e","_f","_g","ButtonDanmakuSettings","templateDanmaku","hide","copyClip","_DanmakuMenu","captured","DanmakuMenu","_ButtonDanmakuStyle","sizeList","colorList","modeList","defaultSize","defaultColor","defaultMode","defaultSizeList","defaultModeList","defaultColorList","sRGBHex","ButtonDanmakuStyle","danmakuPlugins","danmakuControls","presetDanmaku","Qualities","_HlsLoader","hlsPlayer","HlsLoader","_DashLoader","dashPlayer","DashLoader","_FlvLoader","flvPlayer","FlvLoader","_ratio","_AspectRatio","ratioW","ratioH","cWidth","cHeight","rwxh","rhxw","AspectRatio","_Footbar","Footbar","VideoQuality","panels","About","Hotkeys","VideoTitle","loaders","allPlugins","CorePlayer"],"mappings":"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","x_google_ignoreList":[11,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70]}